import {
  __privateAdd,
  __privateMethod,
  __publicField
} from "./chunk-S3XCI6LX.js";

// node_modules/tailwindcss/dist/chunk-AZANAYY2.mjs
var l = { inherit: "inherit", current: "currentColor", transparent: "transparent", black: "#000", white: "#fff", slate: { 50: "oklch(0.984 0.003 247.858)", 100: "oklch(0.968 0.007 247.896)", 200: "oklch(0.929 0.013 255.508)", 300: "oklch(0.869 0.022 252.894)", 400: "oklch(0.704 0.04 256.788)", 500: "oklch(0.554 0.046 257.417)", 600: "oklch(0.446 0.043 257.281)", 700: "oklch(0.372 0.044 257.287)", 800: "oklch(0.279 0.041 260.031)", 900: "oklch(0.208 0.042 265.755)", 950: "oklch(0.129 0.042 264.695)" }, gray: { 50: "oklch(0.985 0.002 247.839)", 100: "oklch(0.967 0.003 264.542)", 200: "oklch(0.928 0.006 264.531)", 300: "oklch(0.872 0.01 258.338)", 400: "oklch(0.707 0.022 261.325)", 500: "oklch(0.551 0.027 264.364)", 600: "oklch(0.446 0.03 256.802)", 700: "oklch(0.373 0.034 259.733)", 800: "oklch(0.278 0.033 256.848)", 900: "oklch(0.21 0.034 264.665)", 950: "oklch(0.13 0.028 261.692)" }, zinc: { 50: "oklch(0.985 0 0)", 100: "oklch(0.967 0.001 286.375)", 200: "oklch(0.92 0.004 286.32)", 300: "oklch(0.871 0.006 286.286)", 400: "oklch(0.705 0.015 286.067)", 500: "oklch(0.552 0.016 285.938)", 600: "oklch(0.442 0.017 285.786)", 700: "oklch(0.37 0.013 285.805)", 800: "oklch(0.274 0.006 286.033)", 900: "oklch(0.21 0.006 285.885)", 950: "oklch(0.141 0.005 285.823)" }, neutral: { 50: "oklch(0.985 0 0)", 100: "oklch(0.97 0 0)", 200: "oklch(0.922 0 0)", 300: "oklch(0.87 0 0)", 400: "oklch(0.708 0 0)", 500: "oklch(0.556 0 0)", 600: "oklch(0.439 0 0)", 700: "oklch(0.371 0 0)", 800: "oklch(0.269 0 0)", 900: "oklch(0.205 0 0)", 950: "oklch(0.145 0 0)" }, stone: { 50: "oklch(0.985 0.001 106.423)", 100: "oklch(0.97 0.001 106.424)", 200: "oklch(0.923 0.003 48.717)", 300: "oklch(0.869 0.005 56.366)", 400: "oklch(0.709 0.01 56.259)", 500: "oklch(0.553 0.013 58.071)", 600: "oklch(0.444 0.011 73.639)", 700: "oklch(0.374 0.01 67.558)", 800: "oklch(0.268 0.007 34.298)", 900: "oklch(0.216 0.006 56.043)", 950: "oklch(0.147 0.004 49.25)" }, red: { 50: "oklch(0.971 0.013 17.38)", 100: "oklch(0.936 0.032 17.717)", 200: "oklch(0.885 0.062 18.334)", 300: "oklch(0.808 0.114 19.571)", 400: "oklch(0.704 0.191 22.216)", 500: "oklch(0.637 0.237 25.331)", 600: "oklch(0.577 0.245 27.325)", 700: "oklch(0.505 0.213 27.518)", 800: "oklch(0.444 0.177 26.899)", 900: "oklch(0.396 0.141 25.723)", 950: "oklch(0.258 0.092 26.042)" }, orange: { 50: "oklch(0.98 0.016 73.684)", 100: "oklch(0.954 0.038 75.164)", 200: "oklch(0.901 0.076 70.697)", 300: "oklch(0.837 0.128 66.29)", 400: "oklch(0.75 0.183 55.934)", 500: "oklch(0.705 0.213 47.604)", 600: "oklch(0.646 0.222 41.116)", 700: "oklch(0.553 0.195 38.402)", 800: "oklch(0.47 0.157 37.304)", 900: "oklch(0.408 0.123 38.172)", 950: "oklch(0.266 0.079 36.259)" }, amber: { 50: "oklch(0.987 0.022 95.277)", 100: "oklch(0.962 0.059 95.617)", 200: "oklch(0.924 0.12 95.746)", 300: "oklch(0.879 0.169 91.605)", 400: "oklch(0.828 0.189 84.429)", 500: "oklch(0.769 0.188 70.08)", 600: "oklch(0.666 0.179 58.318)", 700: "oklch(0.555 0.163 48.998)", 800: "oklch(0.473 0.137 46.201)", 900: "oklch(0.414 0.112 45.904)", 950: "oklch(0.279 0.077 45.635)" }, yellow: { 50: "oklch(0.987 0.026 102.212)", 100: "oklch(0.973 0.071 103.193)", 200: "oklch(0.945 0.129 101.54)", 300: "oklch(0.905 0.182 98.111)", 400: "oklch(0.852 0.199 91.936)", 500: "oklch(0.795 0.184 86.047)", 600: "oklch(0.681 0.162 75.834)", 700: "oklch(0.554 0.135 66.442)", 800: "oklch(0.476 0.114 61.907)", 900: "oklch(0.421 0.095 57.708)", 950: "oklch(0.286 0.066 53.813)" }, lime: { 50: "oklch(0.986 0.031 120.757)", 100: "oklch(0.967 0.067 122.328)", 200: "oklch(0.938 0.127 124.321)", 300: "oklch(0.897 0.196 126.665)", 400: "oklch(0.841 0.238 128.85)", 500: "oklch(0.768 0.233 130.85)", 600: "oklch(0.648 0.2 131.684)", 700: "oklch(0.532 0.157 131.589)", 800: "oklch(0.453 0.124 130.933)", 900: "oklch(0.405 0.101 131.063)", 950: "oklch(0.274 0.072 132.109)" }, green: { 50: "oklch(0.982 0.018 155.826)", 100: "oklch(0.962 0.044 156.743)", 200: "oklch(0.925 0.084 155.995)", 300: "oklch(0.871 0.15 154.449)", 400: "oklch(0.792 0.209 151.711)", 500: "oklch(0.723 0.219 149.579)", 600: "oklch(0.627 0.194 149.214)", 700: "oklch(0.527 0.154 150.069)", 800: "oklch(0.448 0.119 151.328)", 900: "oklch(0.393 0.095 152.535)", 950: "oklch(0.266 0.065 152.934)" }, emerald: { 50: "oklch(0.979 0.021 166.113)", 100: "oklch(0.95 0.052 163.051)", 200: "oklch(0.905 0.093 164.15)", 300: "oklch(0.845 0.143 164.978)", 400: "oklch(0.765 0.177 163.223)", 500: "oklch(0.696 0.17 162.48)", 600: "oklch(0.596 0.145 163.225)", 700: "oklch(0.508 0.118 165.612)", 800: "oklch(0.432 0.095 166.913)", 900: "oklch(0.378 0.077 168.94)", 950: "oklch(0.262 0.051 172.552)" }, teal: { 50: "oklch(0.984 0.014 180.72)", 100: "oklch(0.953 0.051 180.801)", 200: "oklch(0.91 0.096 180.426)", 300: "oklch(0.855 0.138 181.071)", 400: "oklch(0.777 0.152 181.912)", 500: "oklch(0.704 0.14 182.503)", 600: "oklch(0.6 0.118 184.704)", 700: "oklch(0.511 0.096 186.391)", 800: "oklch(0.437 0.078 188.216)", 900: "oklch(0.386 0.063 188.416)", 950: "oklch(0.277 0.046 192.524)" }, cyan: { 50: "oklch(0.984 0.019 200.873)", 100: "oklch(0.956 0.045 203.388)", 200: "oklch(0.917 0.08 205.041)", 300: "oklch(0.865 0.127 207.078)", 400: "oklch(0.789 0.154 211.53)", 500: "oklch(0.715 0.143 215.221)", 600: "oklch(0.609 0.126 221.723)", 700: "oklch(0.52 0.105 223.128)", 800: "oklch(0.45 0.085 224.283)", 900: "oklch(0.398 0.07 227.392)", 950: "oklch(0.302 0.056 229.695)" }, sky: { 50: "oklch(0.977 0.013 236.62)", 100: "oklch(0.951 0.026 236.824)", 200: "oklch(0.901 0.058 230.902)", 300: "oklch(0.828 0.111 230.318)", 400: "oklch(0.746 0.16 232.661)", 500: "oklch(0.685 0.169 237.323)", 600: "oklch(0.588 0.158 241.966)", 700: "oklch(0.5 0.134 242.749)", 800: "oklch(0.443 0.11 240.79)", 900: "oklch(0.391 0.09 240.876)", 950: "oklch(0.293 0.066 243.157)" }, blue: { 50: "oklch(0.97 0.014 254.604)", 100: "oklch(0.932 0.032 255.585)", 200: "oklch(0.882 0.059 254.128)", 300: "oklch(0.809 0.105 251.813)", 400: "oklch(0.707 0.165 254.624)", 500: "oklch(0.623 0.214 259.815)", 600: "oklch(0.546 0.245 262.881)", 700: "oklch(0.488 0.243 264.376)", 800: "oklch(0.424 0.199 265.638)", 900: "oklch(0.379 0.146 265.522)", 950: "oklch(0.282 0.091 267.935)" }, indigo: { 50: "oklch(0.962 0.018 272.314)", 100: "oklch(0.93 0.034 272.788)", 200: "oklch(0.87 0.065 274.039)", 300: "oklch(0.785 0.115 274.713)", 400: "oklch(0.673 0.182 276.935)", 500: "oklch(0.585 0.233 277.117)", 600: "oklch(0.511 0.262 276.966)", 700: "oklch(0.457 0.24 277.023)", 800: "oklch(0.398 0.195 277.366)", 900: "oklch(0.359 0.144 278.697)", 950: "oklch(0.257 0.09 281.288)" }, violet: { 50: "oklch(0.969 0.016 293.756)", 100: "oklch(0.943 0.029 294.588)", 200: "oklch(0.894 0.057 293.283)", 300: "oklch(0.811 0.111 293.571)", 400: "oklch(0.702 0.183 293.541)", 500: "oklch(0.606 0.25 292.717)", 600: "oklch(0.541 0.281 293.009)", 700: "oklch(0.491 0.27 292.581)", 800: "oklch(0.432 0.232 292.759)", 900: "oklch(0.38 0.189 293.745)", 950: "oklch(0.283 0.141 291.089)" }, purple: { 50: "oklch(0.977 0.014 308.299)", 100: "oklch(0.946 0.033 307.174)", 200: "oklch(0.902 0.063 306.703)", 300: "oklch(0.827 0.119 306.383)", 400: "oklch(0.714 0.203 305.504)", 500: "oklch(0.627 0.265 303.9)", 600: "oklch(0.558 0.288 302.321)", 700: "oklch(0.496 0.265 301.924)", 800: "oklch(0.438 0.218 303.724)", 900: "oklch(0.381 0.176 304.987)", 950: "oklch(0.291 0.149 302.717)" }, fuchsia: { 50: "oklch(0.977 0.017 320.058)", 100: "oklch(0.952 0.037 318.852)", 200: "oklch(0.903 0.076 319.62)", 300: "oklch(0.833 0.145 321.434)", 400: "oklch(0.74 0.238 322.16)", 500: "oklch(0.667 0.295 322.15)", 600: "oklch(0.591 0.293 322.896)", 700: "oklch(0.518 0.253 323.949)", 800: "oklch(0.452 0.211 324.591)", 900: "oklch(0.401 0.17 325.612)", 950: "oklch(0.293 0.136 325.661)" }, pink: { 50: "oklch(0.971 0.014 343.198)", 100: "oklch(0.948 0.028 342.258)", 200: "oklch(0.899 0.061 343.231)", 300: "oklch(0.823 0.12 346.018)", 400: "oklch(0.718 0.202 349.761)", 500: "oklch(0.656 0.241 354.308)", 600: "oklch(0.592 0.249 0.584)", 700: "oklch(0.525 0.223 3.958)", 800: "oklch(0.459 0.187 3.815)", 900: "oklch(0.408 0.153 2.432)", 950: "oklch(0.284 0.109 3.907)" }, rose: { 50: "oklch(0.969 0.015 12.422)", 100: "oklch(0.941 0.03 12.58)", 200: "oklch(0.892 0.058 10.001)", 300: "oklch(0.81 0.117 11.638)", 400: "oklch(0.712 0.194 13.428)", 500: "oklch(0.645 0.246 16.439)", 600: "oklch(0.586 0.253 17.585)", 700: "oklch(0.514 0.222 16.935)", 800: "oklch(0.455 0.188 13.697)", 900: "oklch(0.41 0.159 10.272)", 950: "oklch(0.271 0.105 12.094)" } };

// node_modules/tailwindcss/dist/chunk-V2K3XTS4.mjs
var U = /* @__PURE__ */ new Set(["black", "silver", "gray", "white", "maroon", "red", "purple", "fuchsia", "green", "lime", "olive", "yellow", "navy", "blue", "teal", "aqua", "aliceblue", "antiquewhite", "aqua", "aquamarine", "azure", "beige", "bisque", "black", "blanchedalmond", "blue", "blueviolet", "brown", "burlywood", "cadetblue", "chartreuse", "chocolate", "coral", "cornflowerblue", "cornsilk", "crimson", "cyan", "darkblue", "darkcyan", "darkgoldenrod", "darkgray", "darkgreen", "darkgrey", "darkkhaki", "darkmagenta", "darkolivegreen", "darkorange", "darkorchid", "darkred", "darksalmon", "darkseagreen", "darkslateblue", "darkslategray", "darkslategrey", "darkturquoise", "darkviolet", "deeppink", "deepskyblue", "dimgray", "dimgrey", "dodgerblue", "firebrick", "floralwhite", "forestgreen", "fuchsia", "gainsboro", "ghostwhite", "gold", "goldenrod", "gray", "green", "greenyellow", "grey", "honeydew", "hotpink", "indianred", "indigo", "ivory", "khaki", "lavender", "lavenderblush", "lawngreen", "lemonchiffon", "lightblue", "lightcoral", "lightcyan", "lightgoldenrodyellow", "lightgray", "lightgreen", "lightgrey", "lightpink", "lightsalmon", "lightseagreen", "lightskyblue", "lightslategray", "lightslategrey", "lightsteelblue", "lightyellow", "lime", "limegreen", "linen", "magenta", "maroon", "mediumaquamarine", "mediumblue", "mediumorchid", "mediumpurple", "mediumseagreen", "mediumslateblue", "mediumspringgreen", "mediumturquoise", "mediumvioletred", "midnightblue", "mintcream", "mistyrose", "moccasin", "navajowhite", "navy", "oldlace", "olive", "olivedrab", "orange", "orangered", "orchid", "palegoldenrod", "palegreen", "paleturquoise", "palevioletred", "papayawhip", "peachpuff", "peru", "pink", "plum", "powderblue", "purple", "rebeccapurple", "red", "rosybrown", "royalblue", "saddlebrown", "salmon", "sandybrown", "seagreen", "seashell", "sienna", "silver", "skyblue", "slateblue", "slategray", "slategrey", "snow", "springgreen", "steelblue", "tan", "teal", "thistle", "tomato", "turquoise", "violet", "wheat", "white", "whitesmoke", "yellow", "yellowgreen", "transparent", "currentcolor", "canvas", "canvastext", "linktext", "visitedtext", "activetext", "buttonface", "buttontext", "buttonborder", "field", "fieldtext", "highlight", "highlighttext", "selecteditem", "selecteditemtext", "mark", "marktext", "graytext", "accentcolor", "accentcolortext"]);
var O = /^(rgba?|hsla?|hwb|color|(ok)?(lab|lch)|light-dark|color-mix)\(/i;
function S(e) {
  return e.charCodeAt(0) === 35 || O.test(e) || U.has(e.toLowerCase());
}
var k = ["calc", "min", "max", "clamp", "mod", "rem", "sin", "cos", "tan", "asin", "acos", "atan", "atan2", "pow", "sqrt", "hypot", "log", "exp", "round"];
var h = ["anchor-size"];
var A = new RegExp(`(${h.join("|")})\\(`, "g");
function b(e) {
  return e.indexOf("(") !== -1 && k.some((r) => e.includes(`${r}(`));
}
function ie(e) {
  if (!k.some((n) => e.includes(n))) return e;
  let r = false;
  h.some((n) => e.includes(n)) && (A.lastIndex = 0, e = e.replace(A, (n, o) => (r = true, `$${h.indexOf(o)}$(`)));
  let t = "", i = [];
  for (let n = 0; n < e.length; n++) {
    let o = e[n];
    if (o === "(") {
      t += o;
      let m = n;
      for (let c = n - 1; c >= 0; c--) {
        let x = e.charCodeAt(c);
        if (x >= 48 && x <= 57) m = c;
        else if (x >= 97 && x <= 122) m = c;
        else break;
      }
      let a = e.slice(m, n);
      if (k.includes(a)) {
        i.unshift(true);
        continue;
      } else if (i[0] && a === "") {
        i.unshift(true);
        continue;
      }
      i.unshift(false);
      continue;
    } else if (o === ")") t += o, i.shift();
    else if (o === "," && i[0]) {
      t += ", ";
      continue;
    } else {
      if (o === " " && i[0] && t[t.length - 1] === " ") continue;
      if ((o === "+" || o === "*" || o === "/" || o === "-") && i[0]) {
        let m = t.trimEnd(), a = m[m.length - 1];
        if (a === "+" || a === "*" || a === "/" || a === "-") {
          t += o;
          continue;
        } else if (a === "(" || a === ",") {
          t += o;
          continue;
        } else e[n - 1] === " " ? t += `${o} ` : t += ` ${o} `;
      } else if (i[0] && e.startsWith("to-zero", n)) {
        let m = n;
        n += 7, t += e.slice(m, n + 1);
      } else t += o;
    }
  }
  return r ? t.replace(/\$(\d+)\$/g, (n, o) => h[o] ?? n) : t;
}
var y = new Uint8Array(256);
function u(e, r) {
  let t = 0, i = [], n = 0, o = e.length, m = r.charCodeAt(0);
  for (let a = 0; a < o; a++) {
    let c = e.charCodeAt(a);
    if (t === 0 && c === m) {
      i.push(e.slice(n, a)), n = a + 1;
      continue;
    }
    switch (c) {
      case 92:
        a += 1;
        break;
      case 39:
      case 34:
        for (; ++a < o; ) {
          let x = e.charCodeAt(a);
          if (x === 92) {
            a += 1;
            continue;
          }
          if (x === c) break;
        }
        break;
      case 40:
        y[t] = 41, t++;
        break;
      case 91:
        y[t] = 93, t++;
        break;
      case 123:
        y[t] = 125, t++;
        break;
      case 93:
      case 125:
      case 41:
        t > 0 && c === y[t - 1] && t--;
        break;
    }
  }
  return i.push(e.slice(n)), i;
}
var R = { color: S, length: C, percentage: E, ratio: j, number: M, integer: p, url: z, position: Q, "bg-size": X, "line-width": D, image: $, "family-name": P, "generic-name": H, "absolute-size": q, "relative-size": B, angle: ee, vector: re };
function pe(e, r) {
  var _a2;
  if (e.startsWith("var(")) return null;
  for (let t of r) if ((_a2 = R[t]) == null ? void 0 : _a2.call(R, e)) return t;
  return null;
}
var _ = /^url\(.*\)$/;
function z(e) {
  return _.test(e);
}
function D(e) {
  return e === "thin" || e === "medium" || e === "thick";
}
var I = /^(?:element|image|cross-fade|image-set)\(/;
var F = /^(repeating-)?(conic|linear|radial)-gradient\(/;
function $(e) {
  let r = 0;
  for (let t of u(e, ",")) if (!t.startsWith("var(")) {
    if (z(t)) {
      r += 1;
      continue;
    }
    if (F.test(t)) {
      r += 1;
      continue;
    }
    if (I.test(t)) {
      r += 1;
      continue;
    }
    return false;
  }
  return r > 0;
}
function H(e) {
  return e === "serif" || e === "sans-serif" || e === "monospace" || e === "cursive" || e === "fantasy" || e === "system-ui" || e === "ui-serif" || e === "ui-sans-serif" || e === "ui-monospace" || e === "ui-rounded" || e === "math" || e === "emoji" || e === "fangsong";
}
function P(e) {
  let r = 0;
  for (let t of u(e, ",")) {
    let i = t.charCodeAt(0);
    if (i >= 48 && i <= 57) return false;
    t.startsWith("var(") || (r += 1);
  }
  return r > 0;
}
function q(e) {
  return e === "xx-small" || e === "x-small" || e === "small" || e === "medium" || e === "large" || e === "x-large" || e === "xx-large" || e === "xxx-large";
}
function B(e) {
  return e === "larger" || e === "smaller";
}
var g = /[+-]?\d*\.?\d+(?:[eE][+-]?\d+)?/;
var W = new RegExp(`^${g.source}$`);
function M(e) {
  return W.test(e) || b(e);
}
var G = new RegExp(`^${g.source}%$`);
function E(e) {
  return G.test(e) || b(e);
}
var V = new RegExp(`^${g.source}s*/s*${g.source}$`);
function j(e) {
  return V.test(e) || b(e);
}
var K = ["cm", "mm", "Q", "in", "pc", "pt", "px", "em", "ex", "ch", "rem", "lh", "rlh", "vw", "vh", "vmin", "vmax", "vb", "vi", "svw", "svh", "lvw", "lvh", "dvw", "dvh", "cqw", "cqh", "cqi", "cqb", "cqmin", "cqmax"];
var Y = new RegExp(`^${g.source}(${K.join("|")})$`);
function C(e) {
  return Y.test(e) || b(e);
}
function Q(e) {
  let r = 0;
  for (let t of u(e, " ")) {
    if (t === "center" || t === "top" || t === "right" || t === "bottom" || t === "left") {
      r += 1;
      continue;
    }
    if (!t.startsWith("var(")) {
      if (C(t) || E(t)) {
        r += 1;
        continue;
      }
      return false;
    }
  }
  return r > 0;
}
function X(e) {
  let r = 0;
  for (let t of u(e, ",")) {
    if (t === "cover" || t === "contain") {
      r += 1;
      continue;
    }
    let i = u(t, " ");
    if (i.length !== 1 && i.length !== 2) return false;
    if (i.every((n) => n === "auto" || C(n) || E(n))) {
      r += 1;
      continue;
    }
  }
  return r > 0;
}
var J = ["deg", "rad", "grad", "turn"];
var Z = new RegExp(`^${g.source}(${J.join("|")})$`);
function ee(e) {
  return Z.test(e);
}
var te = new RegExp(`^${g.source} +${g.source} +${g.source}$`);
function re(e) {
  return te.test(e);
}
function p(e) {
  let r = Number(e);
  return Number.isInteger(r) && r >= 0 && String(r) === String(e);
}
function ge(e) {
  let r = Number(e);
  return Number.isInteger(r) && r > 0 && String(r) === String(e);
}
function ue(e) {
  return N(e, 0.25);
}
function de(e) {
  return N(e, 0.25);
}
function N(e, r) {
  let t = Number(e);
  return t >= 0 && t % r === 0 && String(t) === String(e);
}
function f(e) {
  return { __BARE_VALUE__: e };
}
var l2 = f((e) => {
  if (p(e.value)) return e.value;
});
var s = f((e) => {
  if (p(e.value)) return `${e.value}%`;
});
var d = f((e) => {
  if (p(e.value)) return `${e.value}px`;
});
var T = f((e) => {
  if (p(e.value)) return `${e.value}ms`;
});
var w = f((e) => {
  if (p(e.value)) return `${e.value}deg`;
});
var ne = f((e) => {
  if (e.fraction === null) return;
  let [r, t] = u(e.fraction, "/");
  if (!(!p(r) || !p(t))) return e.fraction;
});
var L = f((e) => {
  if (p(Number(e.value))) return `repeat(${e.value}, minmax(0, 1fr))`;
});
var ye = { accentColor: ({ theme: e }) => e("colors"), animation: { none: "none", spin: "spin 1s linear infinite", ping: "ping 1s cubic-bezier(0, 0, 0.2, 1) infinite", pulse: "pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite", bounce: "bounce 1s infinite" }, aria: { busy: 'busy="true"', checked: 'checked="true"', disabled: 'disabled="true"', expanded: 'expanded="true"', hidden: 'hidden="true"', pressed: 'pressed="true"', readonly: 'readonly="true"', required: 'required="true"', selected: 'selected="true"' }, aspectRatio: { auto: "auto", square: "1 / 1", video: "16 / 9", ...ne }, backdropBlur: ({ theme: e }) => e("blur"), backdropBrightness: ({ theme: e }) => ({ ...e("brightness"), ...s }), backdropContrast: ({ theme: e }) => ({ ...e("contrast"), ...s }), backdropGrayscale: ({ theme: e }) => ({ ...e("grayscale"), ...s }), backdropHueRotate: ({ theme: e }) => ({ ...e("hueRotate"), ...w }), backdropInvert: ({ theme: e }) => ({ ...e("invert"), ...s }), backdropOpacity: ({ theme: e }) => ({ ...e("opacity"), ...s }), backdropSaturate: ({ theme: e }) => ({ ...e("saturate"), ...s }), backdropSepia: ({ theme: e }) => ({ ...e("sepia"), ...s }), backgroundColor: ({ theme: e }) => e("colors"), backgroundImage: { none: "none", "gradient-to-t": "linear-gradient(to top, var(--tw-gradient-stops))", "gradient-to-tr": "linear-gradient(to top right, var(--tw-gradient-stops))", "gradient-to-r": "linear-gradient(to right, var(--tw-gradient-stops))", "gradient-to-br": "linear-gradient(to bottom right, var(--tw-gradient-stops))", "gradient-to-b": "linear-gradient(to bottom, var(--tw-gradient-stops))", "gradient-to-bl": "linear-gradient(to bottom left, var(--tw-gradient-stops))", "gradient-to-l": "linear-gradient(to left, var(--tw-gradient-stops))", "gradient-to-tl": "linear-gradient(to top left, var(--tw-gradient-stops))" }, backgroundOpacity: ({ theme: e }) => e("opacity"), backgroundPosition: { bottom: "bottom", center: "center", left: "left", "left-bottom": "left bottom", "left-top": "left top", right: "right", "right-bottom": "right bottom", "right-top": "right top", top: "top" }, backgroundSize: { auto: "auto", cover: "cover", contain: "contain" }, blur: { 0: "0", none: "", sm: "4px", DEFAULT: "8px", md: "12px", lg: "16px", xl: "24px", "2xl": "40px", "3xl": "64px" }, borderColor: ({ theme: e }) => ({ DEFAULT: "currentColor", ...e("colors") }), borderOpacity: ({ theme: e }) => e("opacity"), borderRadius: { none: "0px", sm: "0.125rem", DEFAULT: "0.25rem", md: "0.375rem", lg: "0.5rem", xl: "0.75rem", "2xl": "1rem", "3xl": "1.5rem", full: "9999px" }, borderSpacing: ({ theme: e }) => e("spacing"), borderWidth: { DEFAULT: "1px", 0: "0px", 2: "2px", 4: "4px", 8: "8px", ...d }, boxShadow: { sm: "0 1px 2px 0 rgb(0 0 0 / 0.05)", DEFAULT: "0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)", md: "0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)", lg: "0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)", xl: "0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)", "2xl": "0 25px 50px -12px rgb(0 0 0 / 0.25)", inner: "inset 0 2px 4px 0 rgb(0 0 0 / 0.05)", none: "none" }, boxShadowColor: ({ theme: e }) => e("colors"), brightness: { 0: "0", 50: ".5", 75: ".75", 90: ".9", 95: ".95", 100: "1", 105: "1.05", 110: "1.1", 125: "1.25", 150: "1.5", 200: "2", ...s }, caretColor: ({ theme: e }) => e("colors"), colors: () => ({ ...l }), columns: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", "3xs": "16rem", "2xs": "18rem", xs: "20rem", sm: "24rem", md: "28rem", lg: "32rem", xl: "36rem", "2xl": "42rem", "3xl": "48rem", "4xl": "56rem", "5xl": "64rem", "6xl": "72rem", "7xl": "80rem", ...l2 }, container: {}, content: { none: "none" }, contrast: { 0: "0", 50: ".5", 75: ".75", 100: "1", 125: "1.25", 150: "1.5", 200: "2", ...s }, cursor: { auto: "auto", default: "default", pointer: "pointer", wait: "wait", text: "text", move: "move", help: "help", "not-allowed": "not-allowed", none: "none", "context-menu": "context-menu", progress: "progress", cell: "cell", crosshair: "crosshair", "vertical-text": "vertical-text", alias: "alias", copy: "copy", "no-drop": "no-drop", grab: "grab", grabbing: "grabbing", "all-scroll": "all-scroll", "col-resize": "col-resize", "row-resize": "row-resize", "n-resize": "n-resize", "e-resize": "e-resize", "s-resize": "s-resize", "w-resize": "w-resize", "ne-resize": "ne-resize", "nw-resize": "nw-resize", "se-resize": "se-resize", "sw-resize": "sw-resize", "ew-resize": "ew-resize", "ns-resize": "ns-resize", "nesw-resize": "nesw-resize", "nwse-resize": "nwse-resize", "zoom-in": "zoom-in", "zoom-out": "zoom-out" }, divideColor: ({ theme: e }) => e("borderColor"), divideOpacity: ({ theme: e }) => e("borderOpacity"), divideWidth: ({ theme: e }) => ({ ...e("borderWidth"), ...d }), dropShadow: { sm: "0 1px 1px rgb(0 0 0 / 0.05)", DEFAULT: ["0 1px 2px rgb(0 0 0 / 0.1)", "0 1px 1px rgb(0 0 0 / 0.06)"], md: ["0 4px 3px rgb(0 0 0 / 0.07)", "0 2px 2px rgb(0 0 0 / 0.06)"], lg: ["0 10px 8px rgb(0 0 0 / 0.04)", "0 4px 3px rgb(0 0 0 / 0.1)"], xl: ["0 20px 13px rgb(0 0 0 / 0.03)", "0 8px 5px rgb(0 0 0 / 0.08)"], "2xl": "0 25px 25px rgb(0 0 0 / 0.15)", none: "0 0 #0000" }, fill: ({ theme: e }) => e("colors"), flex: { 1: "1 1 0%", auto: "1 1 auto", initial: "0 1 auto", none: "none" }, flexBasis: ({ theme: e }) => ({ auto: "auto", "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", "1/12": "8.333333%", "2/12": "16.666667%", "3/12": "25%", "4/12": "33.333333%", "5/12": "41.666667%", "6/12": "50%", "7/12": "58.333333%", "8/12": "66.666667%", "9/12": "75%", "10/12": "83.333333%", "11/12": "91.666667%", full: "100%", ...e("spacing") }), flexGrow: { 0: "0", DEFAULT: "1", ...l2 }, flexShrink: { 0: "0", DEFAULT: "1", ...l2 }, fontFamily: { sans: ["ui-sans-serif", "system-ui", "sans-serif", '"Apple Color Emoji"', '"Segoe UI Emoji"', '"Segoe UI Symbol"', '"Noto Color Emoji"'], serif: ["ui-serif", "Georgia", "Cambria", '"Times New Roman"', "Times", "serif"], mono: ["ui-monospace", "SFMono-Regular", "Menlo", "Monaco", "Consolas", '"Liberation Mono"', '"Courier New"', "monospace"] }, fontSize: { xs: ["0.75rem", { lineHeight: "1rem" }], sm: ["0.875rem", { lineHeight: "1.25rem" }], base: ["1rem", { lineHeight: "1.5rem" }], lg: ["1.125rem", { lineHeight: "1.75rem" }], xl: ["1.25rem", { lineHeight: "1.75rem" }], "2xl": ["1.5rem", { lineHeight: "2rem" }], "3xl": ["1.875rem", { lineHeight: "2.25rem" }], "4xl": ["2.25rem", { lineHeight: "2.5rem" }], "5xl": ["3rem", { lineHeight: "1" }], "6xl": ["3.75rem", { lineHeight: "1" }], "7xl": ["4.5rem", { lineHeight: "1" }], "8xl": ["6rem", { lineHeight: "1" }], "9xl": ["8rem", { lineHeight: "1" }] }, fontWeight: { thin: "100", extralight: "200", light: "300", normal: "400", medium: "500", semibold: "600", bold: "700", extrabold: "800", black: "900" }, gap: ({ theme: e }) => e("spacing"), gradientColorStops: ({ theme: e }) => e("colors"), gradientColorStopPositions: { "0%": "0%", "5%": "5%", "10%": "10%", "15%": "15%", "20%": "20%", "25%": "25%", "30%": "30%", "35%": "35%", "40%": "40%", "45%": "45%", "50%": "50%", "55%": "55%", "60%": "60%", "65%": "65%", "70%": "70%", "75%": "75%", "80%": "80%", "85%": "85%", "90%": "90%", "95%": "95%", "100%": "100%", ...s }, grayscale: { 0: "0", DEFAULT: "100%", ...s }, gridAutoColumns: { auto: "auto", min: "min-content", max: "max-content", fr: "minmax(0, 1fr)" }, gridAutoRows: { auto: "auto", min: "min-content", max: "max-content", fr: "minmax(0, 1fr)" }, gridColumn: { auto: "auto", "span-1": "span 1 / span 1", "span-2": "span 2 / span 2", "span-3": "span 3 / span 3", "span-4": "span 4 / span 4", "span-5": "span 5 / span 5", "span-6": "span 6 / span 6", "span-7": "span 7 / span 7", "span-8": "span 8 / span 8", "span-9": "span 9 / span 9", "span-10": "span 10 / span 10", "span-11": "span 11 / span 11", "span-12": "span 12 / span 12", "span-full": "1 / -1" }, gridColumnEnd: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", 13: "13", ...l2 }, gridColumnStart: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", 13: "13", ...l2 }, gridRow: { auto: "auto", "span-1": "span 1 / span 1", "span-2": "span 2 / span 2", "span-3": "span 3 / span 3", "span-4": "span 4 / span 4", "span-5": "span 5 / span 5", "span-6": "span 6 / span 6", "span-7": "span 7 / span 7", "span-8": "span 8 / span 8", "span-9": "span 9 / span 9", "span-10": "span 10 / span 10", "span-11": "span 11 / span 11", "span-12": "span 12 / span 12", "span-full": "1 / -1" }, gridRowEnd: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", 13: "13", ...l2 }, gridRowStart: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", 13: "13", ...l2 }, gridTemplateColumns: { none: "none", subgrid: "subgrid", 1: "repeat(1, minmax(0, 1fr))", 2: "repeat(2, minmax(0, 1fr))", 3: "repeat(3, minmax(0, 1fr))", 4: "repeat(4, minmax(0, 1fr))", 5: "repeat(5, minmax(0, 1fr))", 6: "repeat(6, minmax(0, 1fr))", 7: "repeat(7, minmax(0, 1fr))", 8: "repeat(8, minmax(0, 1fr))", 9: "repeat(9, minmax(0, 1fr))", 10: "repeat(10, minmax(0, 1fr))", 11: "repeat(11, minmax(0, 1fr))", 12: "repeat(12, minmax(0, 1fr))", ...L }, gridTemplateRows: { none: "none", subgrid: "subgrid", 1: "repeat(1, minmax(0, 1fr))", 2: "repeat(2, minmax(0, 1fr))", 3: "repeat(3, minmax(0, 1fr))", 4: "repeat(4, minmax(0, 1fr))", 5: "repeat(5, minmax(0, 1fr))", 6: "repeat(6, minmax(0, 1fr))", 7: "repeat(7, minmax(0, 1fr))", 8: "repeat(8, minmax(0, 1fr))", 9: "repeat(9, minmax(0, 1fr))", 10: "repeat(10, minmax(0, 1fr))", 11: "repeat(11, minmax(0, 1fr))", 12: "repeat(12, minmax(0, 1fr))", ...L }, height: ({ theme: e }) => ({ auto: "auto", "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", full: "100%", screen: "100vh", svh: "100svh", lvh: "100lvh", dvh: "100dvh", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), hueRotate: { 0: "0deg", 15: "15deg", 30: "30deg", 60: "60deg", 90: "90deg", 180: "180deg", ...w }, inset: ({ theme: e }) => ({ auto: "auto", "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", full: "100%", ...e("spacing") }), invert: { 0: "0", DEFAULT: "100%", ...s }, keyframes: { spin: { to: { transform: "rotate(360deg)" } }, ping: { "75%, 100%": { transform: "scale(2)", opacity: "0" } }, pulse: { "50%": { opacity: ".5" } }, bounce: { "0%, 100%": { transform: "translateY(-25%)", animationTimingFunction: "cubic-bezier(0.8,0,1,1)" }, "50%": { transform: "none", animationTimingFunction: "cubic-bezier(0,0,0.2,1)" } } }, letterSpacing: { tighter: "-0.05em", tight: "-0.025em", normal: "0em", wide: "0.025em", wider: "0.05em", widest: "0.1em" }, lineHeight: { none: "1", tight: "1.25", snug: "1.375", normal: "1.5", relaxed: "1.625", loose: "2", 3: ".75rem", 4: "1rem", 5: "1.25rem", 6: "1.5rem", 7: "1.75rem", 8: "2rem", 9: "2.25rem", 10: "2.5rem" }, listStyleType: { none: "none", disc: "disc", decimal: "decimal" }, listStyleImage: { none: "none" }, margin: ({ theme: e }) => ({ auto: "auto", ...e("spacing") }), lineClamp: { 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", ...l2 }, maxHeight: ({ theme: e }) => ({ none: "none", full: "100%", screen: "100vh", svh: "100svh", lvh: "100lvh", dvh: "100dvh", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), maxWidth: ({ theme: e }) => ({ none: "none", xs: "20rem", sm: "24rem", md: "28rem", lg: "32rem", xl: "36rem", "2xl": "42rem", "3xl": "48rem", "4xl": "56rem", "5xl": "64rem", "6xl": "72rem", "7xl": "80rem", full: "100%", min: "min-content", max: "max-content", fit: "fit-content", prose: "65ch", ...e("spacing") }), minHeight: ({ theme: e }) => ({ full: "100%", screen: "100vh", svh: "100svh", lvh: "100lvh", dvh: "100dvh", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), minWidth: ({ theme: e }) => ({ full: "100%", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), objectPosition: { bottom: "bottom", center: "center", left: "left", "left-bottom": "left bottom", "left-top": "left top", right: "right", "right-bottom": "right bottom", "right-top": "right top", top: "top" }, opacity: { 0: "0", 5: "0.05", 10: "0.1", 15: "0.15", 20: "0.2", 25: "0.25", 30: "0.3", 35: "0.35", 40: "0.4", 45: "0.45", 50: "0.5", 55: "0.55", 60: "0.6", 65: "0.65", 70: "0.7", 75: "0.75", 80: "0.8", 85: "0.85", 90: "0.9", 95: "0.95", 100: "1", ...s }, order: { first: "-9999", last: "9999", none: "0", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", ...l2 }, outlineColor: ({ theme: e }) => e("colors"), outlineOffset: { 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...d }, outlineWidth: { 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...d }, padding: ({ theme: e }) => e("spacing"), placeholderColor: ({ theme: e }) => e("colors"), placeholderOpacity: ({ theme: e }) => e("opacity"), ringColor: ({ theme: e }) => ({ DEFAULT: "currentColor", ...e("colors") }), ringOffsetColor: ({ theme: e }) => e("colors"), ringOffsetWidth: { 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...d }, ringOpacity: ({ theme: e }) => ({ DEFAULT: "0.5", ...e("opacity") }), ringWidth: { DEFAULT: "3px", 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...d }, rotate: { 0: "0deg", 1: "1deg", 2: "2deg", 3: "3deg", 6: "6deg", 12: "12deg", 45: "45deg", 90: "90deg", 180: "180deg", ...w }, saturate: { 0: "0", 50: ".5", 100: "1", 150: "1.5", 200: "2", ...s }, scale: { 0: "0", 50: ".5", 75: ".75", 90: ".9", 95: ".95", 100: "1", 105: "1.05", 110: "1.1", 125: "1.25", 150: "1.5", ...s }, screens: { sm: "40rem", md: "48rem", lg: "64rem", xl: "80rem", "2xl": "96rem" }, scrollMargin: ({ theme: e }) => e("spacing"), scrollPadding: ({ theme: e }) => e("spacing"), sepia: { 0: "0", DEFAULT: "100%", ...s }, skew: { 0: "0deg", 1: "1deg", 2: "2deg", 3: "3deg", 6: "6deg", 12: "12deg", ...w }, space: ({ theme: e }) => e("spacing"), spacing: { px: "1px", 0: "0px", 0.5: "0.125rem", 1: "0.25rem", 1.5: "0.375rem", 2: "0.5rem", 2.5: "0.625rem", 3: "0.75rem", 3.5: "0.875rem", 4: "1rem", 5: "1.25rem", 6: "1.5rem", 7: "1.75rem", 8: "2rem", 9: "2.25rem", 10: "2.5rem", 11: "2.75rem", 12: "3rem", 14: "3.5rem", 16: "4rem", 20: "5rem", 24: "6rem", 28: "7rem", 32: "8rem", 36: "9rem", 40: "10rem", 44: "11rem", 48: "12rem", 52: "13rem", 56: "14rem", 60: "15rem", 64: "16rem", 72: "18rem", 80: "20rem", 96: "24rem" }, stroke: ({ theme: e }) => ({ none: "none", ...e("colors") }), strokeWidth: { 0: "0", 1: "1", 2: "2", ...l2 }, supports: {}, data: {}, textColor: ({ theme: e }) => e("colors"), textDecorationColor: ({ theme: e }) => e("colors"), textDecorationThickness: { auto: "auto", "from-font": "from-font", 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...d }, textIndent: ({ theme: e }) => e("spacing"), textOpacity: ({ theme: e }) => e("opacity"), textUnderlineOffset: { auto: "auto", 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...d }, transformOrigin: { center: "center", top: "top", "top-right": "top right", right: "right", "bottom-right": "bottom right", bottom: "bottom", "bottom-left": "bottom left", left: "left", "top-left": "top left" }, transitionDelay: { 0: "0s", 75: "75ms", 100: "100ms", 150: "150ms", 200: "200ms", 300: "300ms", 500: "500ms", 700: "700ms", 1e3: "1000ms", ...T }, transitionDuration: { DEFAULT: "150ms", 0: "0s", 75: "75ms", 100: "100ms", 150: "150ms", 200: "200ms", 300: "300ms", 500: "500ms", 700: "700ms", 1e3: "1000ms", ...T }, transitionProperty: { none: "none", all: "all", DEFAULT: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter", colors: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke", opacity: "opacity", shadow: "box-shadow", transform: "transform" }, transitionTimingFunction: { DEFAULT: "cubic-bezier(0.4, 0, 0.2, 1)", linear: "linear", in: "cubic-bezier(0.4, 0, 1, 1)", out: "cubic-bezier(0, 0, 0.2, 1)", "in-out": "cubic-bezier(0.4, 0, 0.2, 1)" }, translate: ({ theme: e }) => ({ "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", full: "100%", ...e("spacing") }), size: ({ theme: e }) => ({ auto: "auto", "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", "1/12": "8.333333%", "2/12": "16.666667%", "3/12": "25%", "4/12": "33.333333%", "5/12": "41.666667%", "6/12": "50%", "7/12": "58.333333%", "8/12": "66.666667%", "9/12": "75%", "10/12": "83.333333%", "11/12": "91.666667%", full: "100%", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), width: ({ theme: e }) => ({ auto: "auto", "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", "1/12": "8.333333%", "2/12": "16.666667%", "3/12": "25%", "4/12": "33.333333%", "5/12": "41.666667%", "6/12": "50%", "7/12": "58.333333%", "8/12": "66.666667%", "9/12": "75%", "10/12": "83.333333%", "11/12": "91.666667%", full: "100%", screen: "100vw", svw: "100svw", lvw: "100lvw", dvw: "100dvw", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), willChange: { auto: "auto", scroll: "scroll-position", contents: "contents", transform: "transform" }, zIndex: { auto: "auto", 0: "0", 10: "10", 20: "20", 30: "30", 40: "40", 50: "50", ...l2 } };

// node_modules/tailwindcss/dist/chunk-7GINGMIH.mjs
function W2(r) {
  if (arguments.length === 0) throw new TypeError("`CSS.escape` requires an argument.");
  let e = String(r), s2 = e.length, n = -1, t, l3 = "", o = e.charCodeAt(0);
  if (s2 === 1 && o === 45) return "\\" + e;
  for (; ++n < s2; ) {
    if (t = e.charCodeAt(n), t === 0) {
      l3 += "�";
      continue;
    }
    if (t >= 1 && t <= 31 || t === 127 || n === 0 && t >= 48 && t <= 57 || n === 1 && t >= 48 && t <= 57 && o === 45) {
      l3 += "\\" + t.toString(16) + " ";
      continue;
    }
    if (t >= 128 || t === 45 || t === 95 || t >= 48 && t <= 57 || t >= 65 && t <= 90 || t >= 97 && t <= 122) {
      l3 += e.charAt(n);
      continue;
    }
    l3 += "\\" + e.charAt(n);
  }
  return l3;
}
function $2(r) {
  return r.replace(/\\([\dA-Fa-f]{1,6}[\t\n\f\r ]?|[\S\s])/g, (e) => e.length > 2 ? String.fromCodePoint(Number.parseInt(e.slice(1).trim(), 16)) : e[1]);
}
var F2 = /* @__PURE__ */ new Map([["--font", ["--font-weight", "--font-size"]], ["--inset", ["--inset-shadow", "--inset-ring"]], ["--text", ["--text-color", "--text-underline-offset", "--text-indent", "--text-decoration-thickness", "--text-decoration-color"]]]);
function D2(r, e) {
  return (F2.get(e) ?? []).some((s2) => r === s2 || r.startsWith(`${s2}-`));
}
var _P_instances, r_fn, e_fn, t_fn, _a;
var P2 = (_a = class {
  constructor(e = /* @__PURE__ */ new Map(), s2 = /* @__PURE__ */ new Set([])) {
    __privateAdd(this, _P_instances);
    __publicField(this, "prefix", null);
    this.values = e;
    this.keyframes = s2;
  }
  add(e, s2, n = 0) {
    if (e.endsWith("-*")) {
      if (s2 !== "initial") throw new Error(`Invalid theme value \`${s2}\` for namespace \`${e}\``);
      e === "--*" ? this.values.clear() : this.clearNamespace(e.slice(0, -2), 0);
    }
    if (n & 4) {
      let t = this.values.get(e);
      if (t && !(t.options & 4)) return;
    }
    s2 === "initial" ? this.values.delete(e) : this.values.set(e, { value: s2, options: n });
  }
  keysInNamespaces(e) {
    let s2 = [];
    for (let n of e) {
      let t = `${n}-`;
      for (let l3 of this.values.keys()) l3.startsWith(t) && l3.indexOf("--", 2) === -1 && (D2(l3, n) || s2.push(l3.slice(t.length)));
    }
    return s2;
  }
  get(e) {
    for (let s2 of e) {
      let n = this.values.get(s2);
      if (n) return n.value;
    }
    return null;
  }
  hasDefault(e) {
    return (this.getOptions(e) & 4) === 4;
  }
  getOptions(e) {
    var _a2;
    return e = $2(__privateMethod(this, _P_instances, r_fn).call(this, e)), ((_a2 = this.values.get(e)) == null ? void 0 : _a2.options) ?? 0;
  }
  entries() {
    return this.prefix ? Array.from(this.values, (e) => (e[0] = this.prefixKey(e[0]), e)) : this.values.entries();
  }
  prefixKey(e) {
    return this.prefix ? `--${this.prefix}-${e.slice(2)}` : e;
  }
  clearNamespace(e, s2) {
    let n = F2.get(e) ?? [];
    e: for (let t of this.values.keys()) if (t.startsWith(e)) {
      if (s2 !== 0 && (this.getOptions(t) & s2) !== s2) continue;
      for (let l3 of n) if (t.startsWith(l3)) continue e;
      this.values.delete(t);
    }
  }
  markUsedVariable(e) {
    let s2 = $2(__privateMethod(this, _P_instances, r_fn).call(this, e)), n = this.values.get(s2);
    n && (n.options |= 16);
  }
  resolve(e, s2) {
    let n = __privateMethod(this, _P_instances, e_fn).call(this, e, s2);
    if (!n) return null;
    let t = this.values.get(n);
    return t.options & 1 ? t.value : __privateMethod(this, _P_instances, t_fn).call(this, n);
  }
  resolveValue(e, s2) {
    let n = __privateMethod(this, _P_instances, e_fn).call(this, e, s2);
    return n ? this.values.get(n).value : null;
  }
  resolveWith(e, s2, n = []) {
    let t = __privateMethod(this, _P_instances, e_fn).call(this, e, s2);
    if (!t) return null;
    let l3 = {};
    for (let f2 of n) {
      let a = `${t}${f2}`, u2 = this.values.get(a);
      u2 && (u2.options & 1 ? l3[f2] = u2.value : l3[f2] = __privateMethod(this, _P_instances, t_fn).call(this, a));
    }
    let o = this.values.get(t);
    return o.options & 1 ? [o.value, l3] : [__privateMethod(this, _P_instances, t_fn).call(this, t), l3];
  }
  namespace(e) {
    let s2 = /* @__PURE__ */ new Map(), n = `${e}-`;
    for (let [t, l3] of this.values) t === e ? s2.set(null, l3.value) : t.startsWith(`${n}-`) ? s2.set(t.slice(e.length), l3.value) : t.startsWith(n) && s2.set(t.slice(n.length), l3.value);
    return s2;
  }
  addKeyframes(e) {
    this.keyframes.add(e);
  }
  getKeyframes() {
    return Array.from(this.keyframes);
  }
}, _P_instances = new WeakSet(), r_fn = function(e) {
  return this.prefix ? `--${e.slice(3 + this.prefix.length)}` : e;
}, e_fn = function(e, s2) {
  for (let n of s2) {
    let t = e !== null ? `${n}-${e}` : n;
    if (!this.values.has(t)) if (e !== null && e.includes(".")) {
      if (t = `${n}-${e.replaceAll(".", "_")}`, !this.values.has(t)) continue;
    } else continue;
    if (!D2(t, n)) return t;
  }
  return null;
}, t_fn = function(e) {
  let s2 = this.values.get(e);
  if (!s2) return null;
  let n = null;
  return s2.options & 2 && (n = s2.value), `var(${W2(this.prefixKey(e))}${n ? `, ${n}` : ""})`;
}, _a);
var N2 = class extends Map {
  constructor(s2) {
    super();
    this.factory = s2;
  }
  get(s2) {
    let n = super.get(s2);
    return n === void 0 && (n = this.factory(s2, this), this.set(s2, n)), n;
  }
};
function O2(r) {
  return { kind: "word", value: r };
}
function oe(r, e) {
  return { kind: "function", value: r, nodes: e };
}
function ae(r) {
  return { kind: "separator", value: r };
}
function C2(r, e, s2 = null) {
  for (let n = 0; n < r.length; n++) {
    let t = r[n], l3 = false, o = 0, f2 = e(t, { parent: s2, replaceWith(a) {
      l3 = true, Array.isArray(a) ? a.length === 0 ? (r.splice(n, 1), o = 0) : a.length === 1 ? (r[n] = a[0], o = 1) : (r.splice(n, 1, ...a), o = a.length) : r[n] = a;
    } }) ?? 0;
    if (l3) {
      f2 === 0 ? n-- : n += o - 1;
      continue;
    }
    if (f2 === 2) return 2;
    if (f2 !== 1 && t.kind === "function" && C2(t.nodes, e, t) === 2) return 2;
  }
}
function ue2(r) {
  let e = "";
  for (let s2 of r) switch (s2.kind) {
    case "word":
    case "separator": {
      e += s2.value;
      break;
    }
    case "function":
      e += s2.value + "(" + ue2(s2.nodes) + ")";
  }
  return e;
}
var _2 = 92;
var fe = 41;
var M2 = 58;
var B2 = 44;
var ce = 34;
var H2 = 61;
var G2 = 62;
var Q2 = 60;
var j2 = 10;
var de2 = 40;
var he = 39;
var z2 = 47;
var Y2 = 32;
var q2 = 9;
function X2(r) {
  r = r.replaceAll(`\r
`, `
`);
  let e = [], s2 = [], n = null, t = "", l3;
  for (let o = 0; o < r.length; o++) {
    let f2 = r.charCodeAt(o);
    switch (f2) {
      case _2: {
        t += r[o] + r[o + 1], o++;
        break;
      }
      case M2:
      case B2:
      case H2:
      case G2:
      case Q2:
      case j2:
      case z2:
      case Y2:
      case q2: {
        if (t.length > 0) {
          let c = O2(t);
          n ? n.nodes.push(c) : e.push(c), t = "";
        }
        let a = o, u2 = o + 1;
        for (; u2 < r.length && (l3 = r.charCodeAt(u2), !(l3 !== M2 && l3 !== B2 && l3 !== H2 && l3 !== G2 && l3 !== Q2 && l3 !== j2 && l3 !== z2 && l3 !== Y2 && l3 !== q2)); u2++) ;
        o = u2 - 1;
        let i = ae(r.slice(a, u2));
        n ? n.nodes.push(i) : e.push(i);
        break;
      }
      case he:
      case ce: {
        let a = o;
        for (let u2 = o + 1; u2 < r.length; u2++) if (l3 = r.charCodeAt(u2), l3 === _2) u2 += 1;
        else if (l3 === f2) {
          o = u2;
          break;
        }
        t += r.slice(a, o + 1);
        break;
      }
      case de2: {
        let a = oe(t, []);
        t = "", n ? n.nodes.push(a) : e.push(a), s2.push(a), n = a;
        break;
      }
      case fe: {
        let a = s2.pop();
        if (t.length > 0) {
          let u2 = O2(t);
          a.nodes.push(u2), t = "";
        }
        s2.length > 0 ? n = s2[s2.length - 1] : n = null;
        break;
      }
      default:
        t += String.fromCharCode(f2);
    }
  }
  return t.length > 0 && e.push(O2(t)), e;
}
function J2(r) {
  let e = [];
  return C2(X2(r), (s2) => {
    if (!(s2.kind !== "function" || s2.value !== "var")) return C2(s2.nodes, (n) => {
      n.kind !== "word" || n.value[0] !== "-" || n.value[1] !== "-" || e.push(n.value);
    }), 1;
  }), e;
}
var ge2 = 64;
function me(r, e = []) {
  return { kind: "rule", selector: r, nodes: e };
}
function V2(r, e = "", s2 = []) {
  return { kind: "at-rule", name: r, params: e, nodes: s2 };
}
function ee2(r, e = []) {
  return r.charCodeAt(0) === ge2 ? k2(r, e) : me(r, e);
}
function te2(r, e, s2 = false) {
  return { kind: "declaration", property: r, value: e, important: s2 };
}
function re2(r) {
  return { kind: "comment", value: r };
}
function We(r, e) {
  return { kind: "context", context: r, nodes: e };
}
function De(r) {
  return { kind: "at-root", nodes: r };
}
function w2(r, e, s2 = [], n = {}) {
  for (let t = 0; t < r.length; t++) {
    let l3 = r[t], o = s2[s2.length - 1] ?? null;
    if (l3.kind === "context") {
      if (w2(l3.nodes, e, s2, { ...n, ...l3.context }) === 2) return 2;
      continue;
    }
    s2.push(l3);
    let f2 = false, a = 0, u2 = e(l3, { parent: o, context: n, path: s2, replaceWith(i) {
      f2 = true, Array.isArray(i) ? i.length === 0 ? (r.splice(t, 1), a = 0) : i.length === 1 ? (r[t] = i[0], a = 1) : (r.splice(t, 1, ...i), a = i.length) : (r[t] = i, a = 1);
    } }) ?? 0;
    if (s2.pop(), f2) {
      u2 === 0 ? t-- : t += a - 1;
      continue;
    }
    if (u2 === 2) return 2;
    if (u2 !== 1 && "nodes" in l3) {
      s2.push(l3);
      let i = w2(l3.nodes, e, s2, n);
      if (s2.pop(), i === 2) return 2;
    }
  }
}
function Z2(r, e, s2 = [], n = {}) {
  for (let t = 0; t < r.length; t++) {
    let l3 = r[t], o = s2[s2.length - 1] ?? null;
    if (l3.kind === "rule" || l3.kind === "at-rule") s2.push(l3), Z2(l3.nodes, e, s2, n), s2.pop();
    else if (l3.kind === "context") {
      Z2(l3.nodes, e, s2, { ...n, ...l3.context });
      continue;
    }
    s2.push(l3), e(l3, { parent: o, context: n, path: s2, replaceWith(f2) {
      Array.isArray(f2) ? f2.length === 0 ? r.splice(t, 1) : f2.length === 1 ? r[t] = f2[0] : r.splice(t, 1, ...f2) : r[t] = f2, t += f2.length - 1;
    } }), s2.pop();
  }
}
function Pe(r, e) {
  let s2 = [], n = /* @__PURE__ */ new Set(), t = new N2(() => /* @__PURE__ */ new Set()), l3 = /* @__PURE__ */ new Set(), o = /* @__PURE__ */ new Set(), f2 = new N2(() => /* @__PURE__ */ new Set());
  function a(i, c, h2 = {}, g2 = 0) {
    if (i.kind === "declaration") {
      if (i.property === "--tw-sort" || i.value === void 0 || i.value === null) return;
      if (h2.theme && i.property[0] === "-" && i.property[1] === "-" && (h2.keyframes || t.get(c).add(i)), i.value.includes("var(")) if (h2.theme && i.property[0] === "-" && i.property[1] === "-") for (let p2 of J2(i.value)) f2.get(p2).add(i.property);
      else e.trackUsedVariables(i.value);
      if (i.property === "animation") {
        let p2 = i.value.split(/\s+/);
        for (let d2 of p2) o.add(d2);
      }
      c.push(i);
    } else if (i.kind === "rule") if (i.selector === "&") for (let p2 of i.nodes) {
      let d2 = [];
      a(p2, d2, h2, g2 + 1), d2.length > 0 && c.push(...d2);
    }
    else {
      let p2 = { ...i, nodes: [] };
      for (let d2 of i.nodes) a(d2, p2.nodes, h2, g2 + 1);
      p2.nodes.length > 0 && c.push(p2);
    }
    else if (i.kind === "at-rule" && i.name === "@property" && g2 === 0) {
      if (n.has(i.params)) return;
      n.add(i.params);
      let p2 = { ...i, nodes: [] };
      for (let d2 of i.nodes) a(d2, p2.nodes, h2, g2 + 1);
      c.push(p2);
    } else if (i.kind === "at-rule") {
      i.name === "@keyframes" && (h2 = { ...h2, keyframes: true });
      let p2 = { ...i, nodes: [] };
      for (let d2 of i.nodes) a(d2, p2.nodes, h2, g2 + 1);
      i.name === "@keyframes" && h2.theme && l3.add(p2), (p2.nodes.length > 0 || p2.name === "@layer" || p2.name === "@charset" || p2.name === "@custom-media" || p2.name === "@namespace" || p2.name === "@import") && c.push(p2);
    } else if (i.kind === "at-root") for (let p2 of i.nodes) {
      let d2 = [];
      a(p2, d2, h2, 0);
      for (let m of d2) s2.push(m);
    }
    else if (i.kind === "context") {
      if (i.context.reference) return;
      for (let p2 of i.nodes) a(p2, c, { ...h2, ...i.context }, g2);
    } else i.kind === "comment" && c.push(i);
  }
  let u2 = [];
  for (let i of r) a(i, u2, {}, 0);
  e: for (let [i, c] of t) for (let h2 of c) {
    if (ne2(h2.property, e.theme, f2)) {
      if (h2.property.startsWith(e.theme.prefixKey("--animate-"))) {
        let d2 = h2.value.split(/\s+/);
        for (let m of d2) o.add(m);
      }
      continue;
    }
    let p2 = i.indexOf(h2);
    if (i.splice(p2, 1), i.length === 0) {
      let d2 = Ae(u2, (m) => m.kind === "rule" && m.nodes === i);
      if (!d2 || d2.length === 0) continue e;
      d2.unshift({ kind: "at-root", nodes: u2 });
      do {
        let m = d2.pop();
        if (!m) break;
        let x = d2[d2.length - 1];
        if (!x || x.kind !== "at-root" && x.kind !== "at-rule") break;
        let I2 = x.nodes.indexOf(m);
        if (I2 === -1) break;
        x.nodes.splice(I2, 1);
      } while (true);
      continue e;
    }
  }
  for (let i of l3) if (!o.has(i.params)) {
    let c = s2.indexOf(i);
    s2.splice(c, 1);
  }
  return u2.concat(s2);
}
function Fe(r) {
  function e(n, t = 0) {
    let l3 = "", o = "  ".repeat(t);
    if (n.kind === "declaration") l3 += `${o}${n.property}: ${n.value}${n.important ? " !important" : ""};
`;
    else if (n.kind === "rule") {
      l3 += `${o}${n.selector} {
`;
      for (let f2 of n.nodes) l3 += e(f2, t + 1);
      l3 += `${o}}
`;
    } else if (n.kind === "at-rule") {
      if (n.nodes.length === 0) return `${o}${n.name} ${n.params};
`;
      l3 += `${o}${n.name}${n.params ? ` ${n.params} ` : " "}{
`;
      for (let f2 of n.nodes) l3 += e(f2, t + 1);
      l3 += `${o}}
`;
    } else if (n.kind === "comment") l3 += `${o}/*${n.value}*/
`;
    else if (n.kind === "context" || n.kind === "at-root") return "";
    return l3;
  }
  let s2 = "";
  for (let n of r) {
    let t = e(n);
    t !== "" && (s2 += t);
  }
  return s2;
}
function Ae(r, e) {
  let s2 = [];
  return w2(r, (n, { path: t }) => {
    if (e(n)) return s2 = [...t], 2;
  }), s2;
}
function ne2(r, e, s2, n = /* @__PURE__ */ new Set()) {
  if (n.has(r) || (n.add(r), e.getOptions(r) & 24)) return true;
  {
    let l3 = s2.get(r) ?? [];
    for (let o of l3) if (ne2(o, e, s2, n)) return true;
  }
  return false;
}
var y2 = 92;
var S2 = 47;
var E2 = 42;
var xe = 34;
var Ne = 39;
var ke = 58;
var R2 = 59;
var A2 = 10;
var v = 32;
var T2 = 9;
var se = 123;
var b2 = 125;
var U2 = 40;
var le = 41;
var ye2 = 91;
var ve = 93;
var ie2 = 45;
var K2 = 64;
var Ce = 33;
function Be(r) {
  r[0] === "\uFEFF" && (r = r.slice(1)), r = r.replaceAll(`\r
`, `
`);
  let e = [], s2 = [], n = [], t = null, l3 = null, o = "", f2 = "", a;
  for (let u2 = 0; u2 < r.length; u2++) {
    let i = r.charCodeAt(u2);
    if (i === y2) o += r.slice(u2, u2 + 2), u2 += 1;
    else if (i === S2 && r.charCodeAt(u2 + 1) === E2) {
      let c = u2;
      for (let g2 = u2 + 2; g2 < r.length; g2++) if (a = r.charCodeAt(g2), a === y2) g2 += 1;
      else if (a === E2 && r.charCodeAt(g2 + 1) === S2) {
        u2 = g2 + 1;
        break;
      }
      let h2 = r.slice(c, u2 + 1);
      h2.charCodeAt(2) === Ce && s2.push(re2(h2.slice(2, -2)));
    } else if (i === Ne || i === xe) {
      let c = u2;
      for (let h2 = u2 + 1; h2 < r.length; h2++) if (a = r.charCodeAt(h2), a === y2) h2 += 1;
      else if (a === i) {
        u2 = h2;
        break;
      } else {
        if (a === R2 && r.charCodeAt(h2 + 1) === A2) throw new Error(`Unterminated string: ${r.slice(c, h2 + 1) + String.fromCharCode(i)}`);
        if (a === A2) throw new Error(`Unterminated string: ${r.slice(c, h2) + String.fromCharCode(i)}`);
      }
      o += r.slice(c, u2 + 1);
    } else {
      if ((i === v || i === A2 || i === T2) && (a = r.charCodeAt(u2 + 1)) && (a === v || a === A2 || a === T2)) continue;
      if (i === A2) {
        if (o.length === 0) continue;
        a = o.charCodeAt(o.length - 1), a !== v && a !== A2 && a !== T2 && (o += " ");
      } else if (i === ie2 && r.charCodeAt(u2 + 1) === ie2 && o.length === 0) {
        let c = "", h2 = u2, g2 = -1;
        for (let d2 = u2 + 2; d2 < r.length; d2++) if (a = r.charCodeAt(d2), a === y2) d2 += 1;
        else if (a === S2 && r.charCodeAt(d2 + 1) === E2) {
          for (let m = d2 + 2; m < r.length; m++) if (a = r.charCodeAt(m), a === y2) m += 1;
          else if (a === E2 && r.charCodeAt(m + 1) === S2) {
            d2 = m + 1;
            break;
          }
        } else if (g2 === -1 && a === ke) g2 = o.length + d2 - h2;
        else if (a === R2 && c.length === 0) {
          o += r.slice(h2, d2), u2 = d2;
          break;
        } else if (a === U2) c += ")";
        else if (a === ye2) c += "]";
        else if (a === se) c += "}";
        else if ((a === b2 || r.length - 1 === d2) && c.length === 0) {
          u2 = d2 - 1, o += r.slice(h2, d2);
          break;
        } else (a === le || a === ve || a === b2) && c.length > 0 && r[d2] === c[c.length - 1] && (c = c.slice(0, -1));
        let p2 = L2(o, g2);
        if (!p2) throw new Error("Invalid custom property, expected a value");
        t ? t.nodes.push(p2) : e.push(p2), o = "";
      } else if (i === R2 && o.charCodeAt(0) === K2) l3 = k2(o), t ? t.nodes.push(l3) : e.push(l3), o = "", l3 = null;
      else if (i === R2 && f2[f2.length - 1] !== ")") {
        let c = L2(o);
        if (!c) throw o.length === 0 ? new Error("Unexpected semicolon") : new Error(`Invalid declaration: \`${o.trim()}\``);
        t ? t.nodes.push(c) : e.push(c), o = "";
      } else if (i === se && f2[f2.length - 1] !== ")") f2 += "}", l3 = ee2(o.trim()), t && t.nodes.push(l3), n.push(t), t = l3, o = "", l3 = null;
      else if (i === b2 && f2[f2.length - 1] !== ")") {
        if (f2 === "") throw new Error("Missing opening {");
        if (f2 = f2.slice(0, -1), o.length > 0) if (o.charCodeAt(0) === K2) l3 = k2(o), t ? t.nodes.push(l3) : e.push(l3), o = "", l3 = null;
        else {
          let h2 = o.indexOf(":");
          if (t) {
            let g2 = L2(o, h2);
            if (!g2) throw new Error(`Invalid declaration: \`${o.trim()}\``);
            t.nodes.push(g2);
          }
        }
        let c = n.pop() ?? null;
        c === null && t && e.push(t), t = c, o = "", l3 = null;
      } else if (i === U2) f2 += ")", o += "(";
      else if (i === le) {
        if (f2[f2.length - 1] !== ")") throw new Error("Missing opening (");
        f2 = f2.slice(0, -1), o += ")";
      } else {
        if (o.length === 0 && (i === v || i === A2 || i === T2)) continue;
        o += String.fromCharCode(i);
      }
    }
  }
  if (o.charCodeAt(0) === K2 && e.push(k2(o)), f2.length > 0 && t) {
    if (t.kind === "rule") throw new Error(`Missing closing } at ${t.selector}`);
    if (t.kind === "at-rule") throw new Error(`Missing closing } at ${t.name} ${t.params}`);
  }
  return s2.length > 0 ? s2.concat(e) : e;
}
function k2(r, e = []) {
  for (let s2 = 5; s2 < r.length; s2++) {
    let n = r.charCodeAt(s2);
    if (n === v || n === U2) {
      let t = r.slice(0, s2).trim(), l3 = r.slice(s2).trim();
      return V2(t, l3, e);
    }
  }
  return V2(r.trim(), "", e);
}
function L2(r, e = r.indexOf(":")) {
  if (e === -1) return null;
  let s2 = r.indexOf("!important", e + 1);
  return te2(r.slice(0, e).trim(), r.slice(e + 1, s2 === -1 ? r.length : s2).trim(), s2 !== -1);
}

// node_modules/tailwindcss/dist/lib.mjs
var Ge = "4.0.12";
function H3(r) {
  if (r.indexOf("(") === -1) return le2(r);
  let t = X2(r);
  return Se(t), r = ue2(t), r = ie(r), r;
}
function le2(r, t = false) {
  let i = "";
  for (let e = 0; e < r.length; e++) {
    let l3 = r[e];
    l3 === "\\" && r[e + 1] === "_" ? (i += "_", e += 1) : l3 === "_" && !t ? i += " " : i += l3;
  }
  return i;
}
function Se(r) {
  for (let t of r) switch (t.kind) {
    case "function": {
      if (t.value === "url" || t.value.endsWith("_url")) {
        t.value = le2(t.value);
        break;
      }
      if (t.value === "var" || t.value.endsWith("_var") || t.value === "theme" || t.value.endsWith("_theme")) {
        t.value = le2(t.value);
        for (let i = 0; i < t.nodes.length; i++) {
          if (i == 0 && t.nodes[i].kind === "word") {
            t.nodes[i].value = le2(t.nodes[i].value, true);
            continue;
          }
          Se([t.nodes[i]]);
        }
        break;
      }
      t.value = le2(t.value), Se(t.nodes);
      break;
    }
    case "separator":
    case "word": {
      t.value = le2(t.value);
      break;
    }
    default:
      Yt(t);
  }
}
function Yt(r) {
  throw new Error(`Unexpected value: ${r}`);
}
var Zt = 58;
var Ye = 45;
var Ze = 97;
var He = 122;
function* Xe(r, t) {
  var _a2;
  let i = u(r, ":");
  if (t.theme.prefix) {
    if (i.length === 1 || i[0] !== t.theme.prefix) return null;
    i.shift();
  }
  let e = i.pop(), l3 = [];
  for (let h2 = i.length - 1; h2 >= 0; --h2) {
    let m = t.parseVariant(i[h2]);
    if (m === null) return;
    l3.push(m);
  }
  let f2 = false;
  e[e.length - 1] === "!" ? (f2 = true, e = e.slice(0, -1)) : e[0] === "!" && (f2 = true, e = e.slice(1)), t.utilities.has(e, "static") && !e.includes("[") && (yield { kind: "static", root: e, variants: l3, important: f2, raw: r });
  let [s2, p2 = null, g2] = u(e, "/");
  if (g2) return;
  let c = p2 === null ? null : Re(p2);
  if (p2 !== null && c === null) return;
  if (s2[0] === "[") {
    if (s2[s2.length - 1] !== "]") return;
    let h2 = s2.charCodeAt(1);
    if (h2 !== Ye && !(h2 >= Ze && h2 <= He)) return;
    s2 = s2.slice(1, -1);
    let m = s2.indexOf(":");
    if (m === -1 || m === 0 || m === s2.length - 1) return;
    let v2 = s2.slice(0, m), y3 = H3(s2.slice(m + 1));
    yield { kind: "arbitrary", property: v2, value: y3, modifier: c, variants: l3, important: f2, raw: r };
    return;
  }
  let d2;
  if (s2[s2.length - 1] === "]") {
    let h2 = s2.indexOf("-[");
    if (h2 === -1) return;
    let m = s2.slice(0, h2);
    if (!t.utilities.has(m, "functional")) return;
    let v2 = s2.slice(h2 + 1);
    d2 = [[m, v2]];
  } else if (s2[s2.length - 1] === ")") {
    let h2 = s2.indexOf("-(");
    if (h2 === -1) return;
    let m = s2.slice(0, h2);
    if (!t.utilities.has(m, "functional")) return;
    let v2 = s2.slice(h2 + 2, -1), y3 = u(v2, ":"), b3 = null;
    if (y3.length === 2 && (b3 = y3[0], v2 = y3[1]), v2[0] !== "-" && v2[1] !== "-") return;
    d2 = [[m, b3 === null ? `[var(${v2})]` : `[${b3}:var(${v2})]`]];
  } else d2 = et(s2, (h2) => t.utilities.has(h2, "functional"));
  for (let [h2, m] of d2) {
    let v2 = { kind: "functional", root: h2, modifier: c, value: null, variants: l3, important: f2, raw: r };
    if (m === null) {
      yield v2;
      continue;
    }
    {
      let y3 = m.indexOf("[");
      if (y3 !== -1) {
        if (m[m.length - 1] !== "]") return;
        let A3 = H3(m.slice(y3 + 1, -1)), T3 = "";
        for (let N3 = 0; N3 < A3.length; N3++) {
          let K3 = A3.charCodeAt(N3);
          if (K3 === Zt) {
            T3 = A3.slice(0, N3), A3 = A3.slice(N3 + 1);
            break;
          }
          if (!(K3 === Ye || K3 >= Ze && K3 <= He)) break;
        }
        if (A3.length === 0 || A3.trim().length === 0) continue;
        v2.value = { kind: "arbitrary", dataType: T3 || null, value: A3 };
      } else {
        let A3 = p2 === null || ((_a2 = v2.modifier) == null ? void 0 : _a2.kind) === "arbitrary" ? null : `${m}/${p2}`;
        v2.value = { kind: "named", value: m, fraction: A3 };
      }
    }
    yield v2;
  }
}
function Re(r) {
  if (r[0] === "[" && r[r.length - 1] === "]") {
    let t = H3(r.slice(1, -1));
    return t.length === 0 || t.trim().length === 0 ? null : { kind: "arbitrary", value: t };
  }
  if (r[0] === "(" && r[r.length - 1] === ")") {
    let t = H3(r.slice(1, -1));
    return t.length === 0 || t.trim().length === 0 || t[0] !== "-" && t[1] !== "-" ? null : { kind: "arbitrary", value: `var(${t})` };
  }
  return { kind: "named", value: r };
}
function Qe(r, t) {
  if (r[0] === "[" && r[r.length - 1] === "]") {
    if (r[1] === "@" && r.includes("&")) return null;
    let i = H3(r.slice(1, -1));
    if (i.length === 0 || i.trim().length === 0) return null;
    let e = i[0] === ">" || i[0] === "+" || i[0] === "~";
    return !e && i[0] !== "@" && !i.includes("&") && (i = `&:is(${i})`), { kind: "arbitrary", selector: i, relative: e };
  }
  {
    let [i, e = null, l3] = u(r, "/");
    if (l3) return null;
    let f2 = et(i, (s2) => t.variants.has(s2));
    for (let [s2, p2] of f2) switch (t.variants.kind(s2)) {
      case "static":
        return p2 !== null || e !== null ? null : { kind: "static", root: s2 };
      case "functional": {
        let g2 = e === null ? null : Re(e);
        if (e !== null && g2 === null) return null;
        if (p2 === null) return { kind: "functional", root: s2, modifier: g2, value: null };
        if (p2[p2.length - 1] === "]") {
          if (p2[0] !== "[") continue;
          let c = H3(p2.slice(1, -1));
          return c.length === 0 || c.trim().length === 0 ? null : { kind: "functional", root: s2, modifier: g2, value: { kind: "arbitrary", value: c } };
        }
        if (p2[p2.length - 1] === ")") {
          if (p2[0] !== "(") continue;
          let c = H3(p2.slice(1, -1));
          return c.length === 0 || c.trim().length === 0 || c[0] !== "-" && c[1] !== "-" ? null : { kind: "functional", root: s2, modifier: g2, value: { kind: "arbitrary", value: `var(${c})` } };
        }
        return { kind: "functional", root: s2, modifier: g2, value: { kind: "named", value: p2 } };
      }
      case "compound": {
        if (p2 === null) return null;
        let g2 = t.parseVariant(p2);
        if (g2 === null || !t.variants.compoundsWith(s2, g2)) return null;
        let c = e === null ? null : Re(e);
        return e !== null && c === null ? null : { kind: "compound", root: s2, modifier: c, variant: g2 };
      }
    }
  }
  return null;
}
function* et(r, t) {
  t(r) && (yield [r, null]);
  let i = r.lastIndexOf("-");
  if (i === -1) {
    r[0] === "@" && t("@") && (yield ["@", r.slice(1)]);
    return;
  }
  do {
    let e = r.slice(0, i);
    if (t(e)) {
      let l3 = [e, r.slice(i + 1)];
      if (l3[1] === "") break;
      yield l3;
    }
    i = r.lastIndexOf("-", i - 1);
  } while (i > 0);
}
function te3(r, t, i) {
  if (r === t) return 0;
  let e = r.indexOf("("), l3 = t.indexOf("("), f2 = e === -1 ? r.replace(/[\d.]+/g, "") : r.slice(0, e), s2 = l3 === -1 ? t.replace(/[\d.]+/g, "") : t.slice(0, l3), p2 = (f2 === s2 ? 0 : f2 < s2 ? -1 : 1) || (i === "asc" ? parseInt(r) - parseInt(t) : parseInt(t) - parseInt(r));
  return Number.isNaN(p2) ? r < t ? -1 : 1 : p2;
}
var Ht = /* @__PURE__ */ new Set(["inset", "inherit", "initial", "revert", "unset"]);
var tt = /^-?(\d+|\.\d+)(.*?)$/g;
function re3(r, t) {
  return u(r, ",").map((e) => {
    e = e.trim();
    let l3 = u(e, " ").filter((c) => c.trim() !== ""), f2 = null, s2 = null, p2 = null;
    for (let c of l3) Ht.has(c) || (tt.test(c) ? (s2 === null ? s2 = c : p2 === null && (p2 = c), tt.lastIndex = 0) : f2 === null && (f2 = c));
    if (s2 === null || p2 === null) return e;
    let g2 = t(f2 ?? "currentcolor");
    return f2 !== null ? e.replace(f2, g2) : `${e} ${g2}`;
  }).join(", ");
}
var Qt = /^-?[a-z][a-zA-Z0-9/%._-]*$/;
var er = /^-?[a-z][a-zA-Z0-9/%._-]*-\*$/;
var Ke = class {
  constructor() {
    __publicField(this, "utilities", new N2(() => []));
    __publicField(this, "completions", /* @__PURE__ */ new Map());
  }
  static(t, i) {
    this.utilities.get(t).push({ kind: "static", compileFn: i });
  }
  functional(t, i, e) {
    this.utilities.get(t).push({ kind: "functional", compileFn: i, options: e });
  }
  has(t, i) {
    return this.utilities.has(t) && this.utilities.get(t).some((e) => e.kind === i);
  }
  get(t) {
    return this.utilities.has(t) ? this.utilities.get(t) : [];
  }
  getCompletions(t) {
    var _a2;
    return ((_a2 = this.completions.get(t)) == null ? void 0 : _a2()) ?? [];
  }
  suggest(t, i) {
    this.completions.set(t, i);
  }
  keys(t) {
    let i = [];
    for (let [e, l3] of this.utilities.entries()) for (let f2 of l3) if (f2.kind === t) {
      i.push(e);
      break;
    }
    return i;
  }
};
function V3(r, t, i) {
  return V2("@property", r, [te2("syntax", i ? `"${i}"` : '"*"'), te2("inherits", "false"), ...t ? [te2("initial-value", t)] : []]);
}
function G3(r, t) {
  if (t === null) return r;
  let i = Number(t);
  return Number.isNaN(i) || (t = `${i * 100}%`), `color-mix(in oklab, ${r} ${t}, transparent)`;
}
function L3(r, t, i) {
  if (!t) return r;
  if (t.kind === "arbitrary") return G3(r, t.value);
  let e = i.resolve(t.value, ["--opacity"]);
  return e ? G3(r, e) : de(t.value) ? G3(r, `${t.value}%`) : null;
}
function W3(r, t, i) {
  let e = null;
  switch (r.value.value) {
    case "inherit": {
      e = "inherit";
      break;
    }
    case "transparent": {
      e = "transparent";
      break;
    }
    case "current": {
      e = "currentColor";
      break;
    }
    default: {
      e = t.resolve(r.value.value, i);
      break;
    }
  }
  return e ? L3(e, r.modifier, t) : null;
}
function nt(r) {
  let t = new Ke();
  function i(n, a) {
    let u2 = /(\d+)_(\d+)/g;
    function* k3($3) {
      for (let E3 of r.keysInNamespaces($3)) yield E3.replace(u2, (C3, x, U3) => `${x}.${U3}`);
    }
    let w3 = ["1/2", "1/3", "2/3", "1/4", "2/4", "3/4", "1/5", "2/5", "3/5", "4/5", "1/6", "2/6", "3/6", "4/6", "5/6", "1/12", "2/12", "3/12", "4/12", "5/12", "6/12", "7/12", "8/12", "9/12", "10/12", "11/12"];
    t.suggest(n, () => {
      let $3 = [];
      for (let E3 of a()) {
        if (typeof E3 == "string") {
          $3.push({ values: [E3], modifiers: [] });
          continue;
        }
        let C3 = [...E3.values ?? [], ...k3(E3.valueThemeKeys ?? [])], x = [...E3.modifiers ?? [], ...k3(E3.modifierThemeKeys ?? [])];
        E3.supportsFractions && C3.push(...w3), E3.hasDefaultValue && C3.unshift(null), $3.push({ supportsNegative: E3.supportsNegative, values: C3, modifiers: x });
      }
      return $3;
    });
  }
  function e(n, a) {
    t.static(n, () => a.map((u2) => typeof u2 == "function" ? u2() : te2(u2[0], u2[1])));
  }
  function l3(n, a) {
    function u2({ negative: k3 }) {
      return (w3) => {
        let $3 = null;
        if (w3.value) if (w3.value.kind === "arbitrary") {
          if (w3.modifier) return;
          $3 = w3.value.value;
        } else {
          if ($3 = r.resolve(w3.value.fraction ?? w3.value.value, a.themeKeys ?? []), $3 === null && a.supportsFractions && w3.value.fraction) {
            let [E3, C3] = u(w3.value.fraction, "/");
            if (!p(E3) || !p(C3)) return;
            $3 = `calc(${w3.value.fraction} * 100%)`;
          }
          if ($3 === null && k3 && a.handleNegativeBareValue) {
            if ($3 = a.handleNegativeBareValue(w3.value), !($3 == null ? void 0 : $3.includes("/")) && w3.modifier) return;
            if ($3 !== null) return a.handle($3);
          }
          if ($3 === null && a.handleBareValue && ($3 = a.handleBareValue(w3.value), !($3 == null ? void 0 : $3.includes("/")) && w3.modifier)) return;
        }
        else {
          if (w3.modifier) return;
          $3 = a.defaultValue !== void 0 ? a.defaultValue : r.resolve(null, a.themeKeys ?? []);
        }
        if ($3 !== null) return a.handle(k3 ? `calc(${$3} * -1)` : $3);
      };
    }
    a.supportsNegative && t.functional(`-${n}`, u2({ negative: true })), t.functional(n, u2({ negative: false })), i(n, () => [{ supportsNegative: a.supportsNegative, valueThemeKeys: a.themeKeys ?? [], hasDefaultValue: a.defaultValue !== void 0 && a.defaultValue !== null, supportsFractions: a.supportsFractions }]);
  }
  function f2(n, a) {
    t.functional(n, (u2) => {
      if (!u2.value) return;
      let k3 = null;
      if (u2.value.kind === "arbitrary" ? (k3 = u2.value.value, k3 = L3(k3, u2.modifier, r)) : k3 = W3(u2, r, a.themeKeys), k3 !== null) return a.handle(k3);
    }), i(n, () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: a.themeKeys, modifiers: Array.from({ length: 21 }, (u2, k3) => `${k3 * 5}`) }]);
  }
  function s2(n, a, u2, { supportsNegative: k3 = false, supportsFractions: w3 = false } = {}) {
    k3 && t.static(`-${n}-px`, () => u2("-1px")), t.static(`${n}-px`, () => u2("1px")), l3(n, { themeKeys: a, supportsFractions: w3, supportsNegative: k3, defaultValue: null, handleBareValue: ({ value: $3 }) => {
      let E3 = r.resolve(null, ["--spacing"]);
      return !E3 || !ue($3) ? null : `calc(${E3} * ${$3})`;
    }, handleNegativeBareValue: ({ value: $3 }) => {
      let E3 = r.resolve(null, ["--spacing"]);
      return !E3 || !ue($3) ? null : `calc(${E3} * -${$3})`;
    }, handle: u2 }), i(n, () => [{ values: r.get(["--spacing"]) ? ["0", "0.5", "1", "1.5", "2", "2.5", "3", "3.5", "4", "5", "6", "7", "8", "9", "10", "11", "12", "14", "16", "20", "24", "28", "32", "36", "40", "44", "48", "52", "56", "60", "64", "72", "80", "96"] : [], supportsNegative: k3, supportsFractions: w3, valueThemeKeys: a }]);
  }
  e("sr-only", [["position", "absolute"], ["width", "1px"], ["height", "1px"], ["padding", "0"], ["margin", "-1px"], ["overflow", "hidden"], ["clip", "rect(0, 0, 0, 0)"], ["white-space", "nowrap"], ["border-width", "0"]]), e("not-sr-only", [["position", "static"], ["width", "auto"], ["height", "auto"], ["padding", "0"], ["margin", "0"], ["overflow", "visible"], ["clip", "auto"], ["white-space", "normal"]]), e("pointer-events-none", [["pointer-events", "none"]]), e("pointer-events-auto", [["pointer-events", "auto"]]), e("visible", [["visibility", "visible"]]), e("invisible", [["visibility", "hidden"]]), e("collapse", [["visibility", "collapse"]]), e("static", [["position", "static"]]), e("fixed", [["position", "fixed"]]), e("absolute", [["position", "absolute"]]), e("relative", [["position", "relative"]]), e("sticky", [["position", "sticky"]]);
  for (let [n, a] of [["inset", "inset"], ["inset-x", "inset-inline"], ["inset-y", "inset-block"], ["start", "inset-inline-start"], ["end", "inset-inline-end"], ["top", "top"], ["right", "right"], ["bottom", "bottom"], ["left", "left"]]) e(`${n}-auto`, [[a, "auto"]]), e(`${n}-full`, [[a, "100%"]]), e(`-${n}-full`, [[a, "-100%"]]), s2(n, ["--inset", "--spacing"], (u2) => [te2(a, u2)], { supportsNegative: true, supportsFractions: true });
  e("isolate", [["isolation", "isolate"]]), e("isolation-auto", [["isolation", "auto"]]), e("z-auto", [["z-index", "auto"]]), l3("z", { supportsNegative: true, handleBareValue: ({ value: n }) => p(n) ? n : null, themeKeys: ["--z-index"], handle: (n) => [te2("z-index", n)] }), i("z", () => [{ supportsNegative: true, values: ["0", "10", "20", "30", "40", "50"], valueThemeKeys: ["--z-index"] }]), e("order-first", [["order", "-9999"]]), e("order-last", [["order", "9999"]]), e("order-none", [["order", "0"]]), l3("order", { supportsNegative: true, handleBareValue: ({ value: n }) => p(n) ? n : null, themeKeys: ["--order"], handle: (n) => [te2("order", n)] }), i("order", () => [{ supportsNegative: true, values: Array.from({ length: 12 }, (n, a) => `${a + 1}`), valueThemeKeys: ["--order"] }]), e("col-auto", [["grid-column", "auto"]]), l3("col", { supportsNegative: true, handleBareValue: ({ value: n }) => p(n) ? n : null, themeKeys: ["--grid-column"], handle: (n) => [te2("grid-column", n)] }), e("col-span-full", [["grid-column", "1 / -1"]]), l3("col-span", { handleBareValue: ({ value: n }) => p(n) ? n : null, handle: (n) => [te2("grid-column", `span ${n} / span ${n}`)] }), e("col-start-auto", [["grid-column-start", "auto"]]), l3("col-start", { supportsNegative: true, handleBareValue: ({ value: n }) => p(n) ? n : null, themeKeys: ["--grid-column-start"], handle: (n) => [te2("grid-column-start", n)] }), e("col-end-auto", [["grid-column-end", "auto"]]), l3("col-end", { supportsNegative: true, handleBareValue: ({ value: n }) => p(n) ? n : null, themeKeys: ["--grid-column-end"], handle: (n) => [te2("grid-column-end", n)] }), i("col-span", () => [{ values: Array.from({ length: 12 }, (n, a) => `${a + 1}`), valueThemeKeys: [] }]), i("col-start", () => [{ supportsNegative: true, values: Array.from({ length: 13 }, (n, a) => `${a + 1}`), valueThemeKeys: ["--grid-column-start"] }]), i("col-end", () => [{ supportsNegative: true, values: Array.from({ length: 13 }, (n, a) => `${a + 1}`), valueThemeKeys: ["--grid-column-end"] }]), e("row-auto", [["grid-row", "auto"]]), l3("row", { supportsNegative: true, handleBareValue: ({ value: n }) => p(n) ? n : null, themeKeys: ["--grid-row"], handle: (n) => [te2("grid-row", n)] }), e("row-span-full", [["grid-row", "1 / -1"]]), l3("row-span", { themeKeys: [], handleBareValue: ({ value: n }) => p(n) ? n : null, handle: (n) => [te2("grid-row", `span ${n} / span ${n}`)] }), e("row-start-auto", [["grid-row-start", "auto"]]), l3("row-start", { supportsNegative: true, handleBareValue: ({ value: n }) => p(n) ? n : null, themeKeys: ["--grid-row-start"], handle: (n) => [te2("grid-row-start", n)] }), e("row-end-auto", [["grid-row-end", "auto"]]), l3("row-end", { supportsNegative: true, handleBareValue: ({ value: n }) => p(n) ? n : null, themeKeys: ["--grid-row-end"], handle: (n) => [te2("grid-row-end", n)] }), i("row-span", () => [{ values: Array.from({ length: 12 }, (n, a) => `${a + 1}`), valueThemeKeys: [] }]), i("row-start", () => [{ supportsNegative: true, values: Array.from({ length: 13 }, (n, a) => `${a + 1}`), valueThemeKeys: ["--grid-row-start"] }]), i("row-end", () => [{ supportsNegative: true, values: Array.from({ length: 13 }, (n, a) => `${a + 1}`), valueThemeKeys: ["--grid-row-end"] }]), e("float-start", [["float", "inline-start"]]), e("float-end", [["float", "inline-end"]]), e("float-right", [["float", "right"]]), e("float-left", [["float", "left"]]), e("float-none", [["float", "none"]]), e("clear-start", [["clear", "inline-start"]]), e("clear-end", [["clear", "inline-end"]]), e("clear-right", [["clear", "right"]]), e("clear-left", [["clear", "left"]]), e("clear-both", [["clear", "both"]]), e("clear-none", [["clear", "none"]]);
  for (let [n, a] of [["m", "margin"], ["mx", "margin-inline"], ["my", "margin-block"], ["ms", "margin-inline-start"], ["me", "margin-inline-end"], ["mt", "margin-top"], ["mr", "margin-right"], ["mb", "margin-bottom"], ["ml", "margin-left"]]) e(`${n}-auto`, [[a, "auto"]]), s2(n, ["--margin", "--spacing"], (u2) => [te2(a, u2)], { supportsNegative: true });
  e("box-border", [["box-sizing", "border-box"]]), e("box-content", [["box-sizing", "content-box"]]), e("line-clamp-none", [["overflow", "visible"], ["display", "block"], ["-webkit-box-orient", "horizontal"], ["-webkit-line-clamp", "unset"]]), l3("line-clamp", { themeKeys: ["--line-clamp"], handleBareValue: ({ value: n }) => p(n) ? n : null, handle: (n) => [te2("overflow", "hidden"), te2("display", "-webkit-box"), te2("-webkit-box-orient", "vertical"), te2("-webkit-line-clamp", n)] }), i("line-clamp", () => [{ values: ["1", "2", "3", "4", "5", "6"], valueThemeKeys: ["--line-clamp"] }]), e("block", [["display", "block"]]), e("inline-block", [["display", "inline-block"]]), e("inline", [["display", "inline"]]), e("hidden", [["display", "none"]]), e("inline-flex", [["display", "inline-flex"]]), e("table", [["display", "table"]]), e("inline-table", [["display", "inline-table"]]), e("table-caption", [["display", "table-caption"]]), e("table-cell", [["display", "table-cell"]]), e("table-column", [["display", "table-column"]]), e("table-column-group", [["display", "table-column-group"]]), e("table-footer-group", [["display", "table-footer-group"]]), e("table-header-group", [["display", "table-header-group"]]), e("table-row-group", [["display", "table-row-group"]]), e("table-row", [["display", "table-row"]]), e("flow-root", [["display", "flow-root"]]), e("flex", [["display", "flex"]]), e("grid", [["display", "grid"]]), e("inline-grid", [["display", "inline-grid"]]), e("contents", [["display", "contents"]]), e("list-item", [["display", "list-item"]]), e("field-sizing-content", [["field-sizing", "content"]]), e("field-sizing-fixed", [["field-sizing", "fixed"]]), e("aspect-auto", [["aspect-ratio", "auto"]]), e("aspect-square", [["aspect-ratio", "1 / 1"]]), l3("aspect", { themeKeys: ["--aspect"], handleBareValue: ({ fraction: n }) => {
    if (n === null) return null;
    let [a, u2] = u(n, "/");
    return !p(a) || !p(u2) ? null : n;
  }, handle: (n) => [te2("aspect-ratio", n)] });
  for (let [n, a] of [["auto", "auto"], ["full", "100%"], ["svw", "100svw"], ["lvw", "100lvw"], ["dvw", "100dvw"], ["svh", "100svh"], ["lvh", "100lvh"], ["dvh", "100dvh"], ["min", "min-content"], ["max", "max-content"], ["fit", "fit-content"]]) e(`size-${n}`, [["--tw-sort", "size"], ["width", a], ["height", a]]), e(`w-${n}`, [["width", a]]), e(`h-${n}`, [["height", a]]), e(`min-w-${n}`, [["min-width", a]]), e(`min-h-${n}`, [["min-height", a]]), n !== "auto" && (e(`max-w-${n}`, [["max-width", a]]), e(`max-h-${n}`, [["max-height", a]]));
  e("w-screen", [["width", "100vw"]]), e("min-w-screen", [["min-width", "100vw"]]), e("max-w-screen", [["max-width", "100vw"]]), e("h-screen", [["height", "100vh"]]), e("min-h-screen", [["min-height", "100vh"]]), e("max-h-screen", [["max-height", "100vh"]]), e("max-w-none", [["max-width", "none"]]), e("max-h-none", [["max-height", "none"]]), s2("size", ["--size", "--spacing"], (n) => [te2("--tw-sort", "size"), te2("width", n), te2("height", n)], { supportsFractions: true });
  for (let [n, a, u2] of [["w", ["--width", "--spacing", "--container"], "width"], ["min-w", ["--min-width", "--spacing", "--container"], "min-width"], ["max-w", ["--max-width", "--spacing", "--container"], "max-width"], ["h", ["--height", "--spacing"], "height"], ["min-h", ["--min-height", "--height", "--spacing"], "min-height"], ["max-h", ["--max-height", "--height", "--spacing"], "max-height"]]) s2(n, a, (k3) => [te2(u2, k3)], { supportsFractions: true });
  t.static("container", () => {
    let n = [...r.namespace("--breakpoint").values()];
    n.sort((u2, k3) => te3(u2, k3, "asc"));
    let a = [te2("--tw-sort", "--tw-container-component"), te2("width", "100%")];
    for (let u2 of n) a.push(V2("@media", `(width >= ${u2})`, [te2("max-width", u2)]));
    return a;
  }), e("flex-auto", [["flex", "auto"]]), e("flex-initial", [["flex", "0 auto"]]), e("flex-none", [["flex", "none"]]), t.functional("flex", (n) => {
    if (n.value) {
      if (n.value.kind === "arbitrary") return n.modifier ? void 0 : [te2("flex", n.value.value)];
      if (n.value.fraction) {
        let [a, u2] = u(n.value.fraction, "/");
        return !p(a) || !p(u2) ? void 0 : [te2("flex", `calc(${n.value.fraction} * 100%)`)];
      }
      if (p(n.value.value)) return n.modifier ? void 0 : [te2("flex", n.value.value)];
    }
  }), i("flex", () => [{ supportsFractions: true }]), l3("shrink", { defaultValue: "1", handleBareValue: ({ value: n }) => p(n) ? n : null, handle: (n) => [te2("flex-shrink", n)] }), l3("grow", { defaultValue: "1", handleBareValue: ({ value: n }) => p(n) ? n : null, handle: (n) => [te2("flex-grow", n)] }), i("shrink", () => [{ values: ["0"], valueThemeKeys: [], hasDefaultValue: true }]), i("grow", () => [{ values: ["0"], valueThemeKeys: [], hasDefaultValue: true }]), e("basis-auto", [["flex-basis", "auto"]]), e("basis-full", [["flex-basis", "100%"]]), s2("basis", ["--flex-basis", "--spacing", "--container"], (n) => [te2("flex-basis", n)], { supportsFractions: true }), e("table-auto", [["table-layout", "auto"]]), e("table-fixed", [["table-layout", "fixed"]]), e("caption-top", [["caption-side", "top"]]), e("caption-bottom", [["caption-side", "bottom"]]), e("border-collapse", [["border-collapse", "collapse"]]), e("border-separate", [["border-collapse", "separate"]]);
  let p2 = () => De([V3("--tw-border-spacing-x", "0", "<length>"), V3("--tw-border-spacing-y", "0", "<length>")]);
  s2("border-spacing", ["--border-spacing", "--spacing"], (n) => [p2(), te2("--tw-border-spacing-x", n), te2("--tw-border-spacing-y", n), te2("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")]), s2("border-spacing-x", ["--border-spacing", "--spacing"], (n) => [p2(), te2("--tw-border-spacing-x", n), te2("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")]), s2("border-spacing-y", ["--border-spacing", "--spacing"], (n) => [p2(), te2("--tw-border-spacing-y", n), te2("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")]), e("origin-center", [["transform-origin", "center"]]), e("origin-top", [["transform-origin", "top"]]), e("origin-top-right", [["transform-origin", "top right"]]), e("origin-right", [["transform-origin", "right"]]), e("origin-bottom-right", [["transform-origin", "bottom right"]]), e("origin-bottom", [["transform-origin", "bottom"]]), e("origin-bottom-left", [["transform-origin", "bottom left"]]), e("origin-left", [["transform-origin", "left"]]), e("origin-top-left", [["transform-origin", "top left"]]), l3("origin", { themeKeys: ["--transform-origin"], handle: (n) => [te2("transform-origin", n)] }), e("perspective-origin-center", [["perspective-origin", "center"]]), e("perspective-origin-top", [["perspective-origin", "top"]]), e("perspective-origin-top-right", [["perspective-origin", "top right"]]), e("perspective-origin-right", [["perspective-origin", "right"]]), e("perspective-origin-bottom-right", [["perspective-origin", "bottom right"]]), e("perspective-origin-bottom", [["perspective-origin", "bottom"]]), e("perspective-origin-bottom-left", [["perspective-origin", "bottom left"]]), e("perspective-origin-left", [["perspective-origin", "left"]]), e("perspective-origin-top-left", [["perspective-origin", "top left"]]), l3("perspective-origin", { themeKeys: ["--perspective-origin"], handle: (n) => [te2("perspective-origin", n)] }), e("perspective-none", [["perspective", "none"]]), l3("perspective", { themeKeys: ["--perspective"], handle: (n) => [te2("perspective", n)] });
  let g2 = () => De([V3("--tw-translate-x", "0"), V3("--tw-translate-y", "0"), V3("--tw-translate-z", "0")]);
  e("translate-none", [["translate", "none"]]), e("-translate-full", [g2, ["--tw-translate-x", "-100%"], ["--tw-translate-y", "-100%"], ["translate", "var(--tw-translate-x) var(--tw-translate-y)"]]), e("translate-full", [g2, ["--tw-translate-x", "100%"], ["--tw-translate-y", "100%"], ["translate", "var(--tw-translate-x) var(--tw-translate-y)"]]), s2("translate", ["--translate", "--spacing"], (n) => [g2(), te2("--tw-translate-x", n), te2("--tw-translate-y", n), te2("translate", "var(--tw-translate-x) var(--tw-translate-y)")], { supportsNegative: true, supportsFractions: true });
  for (let n of ["x", "y"]) e(`-translate-${n}-full`, [g2, [`--tw-translate-${n}`, "-100%"], ["translate", "var(--tw-translate-x) var(--tw-translate-y)"]]), e(`translate-${n}-full`, [g2, [`--tw-translate-${n}`, "100%"], ["translate", "var(--tw-translate-x) var(--tw-translate-y)"]]), s2(`translate-${n}`, ["--translate", "--spacing"], (a) => [g2(), te2(`--tw-translate-${n}`, a), te2("translate", "var(--tw-translate-x) var(--tw-translate-y)")], { supportsNegative: true, supportsFractions: true });
  s2("translate-z", ["--translate", "--spacing"], (n) => [g2(), te2("--tw-translate-z", n), te2("translate", "var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z)")], { supportsNegative: true }), e("translate-3d", [g2, ["translate", "var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z)"]]);
  let c = () => De([V3("--tw-scale-x", "1"), V3("--tw-scale-y", "1"), V3("--tw-scale-z", "1")]);
  e("scale-none", [["scale", "none"]]);
  function d2({ negative: n }) {
    return (a) => {
      if (!a.value || a.modifier) return;
      let u2;
      return a.value.kind === "arbitrary" ? (u2 = a.value.value, [te2("scale", u2)]) : (u2 = r.resolve(a.value.value, ["--scale"]), !u2 && p(a.value.value) && (u2 = `${a.value.value}%`), u2 ? (u2 = n ? `calc(${u2} * -1)` : u2, [c(), te2("--tw-scale-x", u2), te2("--tw-scale-y", u2), te2("--tw-scale-z", u2), te2("scale", "var(--tw-scale-x) var(--tw-scale-y)")]) : void 0);
    };
  }
  t.functional("-scale", d2({ negative: true })), t.functional("scale", d2({ negative: false })), i("scale", () => [{ supportsNegative: true, values: ["0", "50", "75", "90", "95", "100", "105", "110", "125", "150", "200"], valueThemeKeys: ["--scale"] }]);
  for (let n of ["x", "y", "z"]) l3(`scale-${n}`, { supportsNegative: true, themeKeys: ["--scale"], handleBareValue: ({ value: a }) => p(a) ? `${a}%` : null, handle: (a) => [c(), te2(`--tw-scale-${n}`, a), te2("scale", `var(--tw-scale-x) var(--tw-scale-y)${n === "z" ? " var(--tw-scale-z)" : ""}`)] }), i(`scale-${n}`, () => [{ supportsNegative: true, values: ["0", "50", "75", "90", "95", "100", "105", "110", "125", "150", "200"], valueThemeKeys: ["--scale"] }]);
  e("scale-3d", [c, ["scale", "var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z)"]]), e("rotate-none", [["rotate", "none"]]);
  function h2({ negative: n }) {
    return (a) => {
      if (!a.value || a.modifier) return;
      let u2;
      if (a.value.kind === "arbitrary") {
        u2 = a.value.value;
        let k3 = a.value.dataType ?? pe(u2, ["angle", "vector"]);
        if (k3 === "vector") return [te2("rotate", `${u2} var(--tw-rotate)`)];
        if (k3 !== "angle") return [te2("rotate", u2)];
      } else if (u2 = r.resolve(a.value.value, ["--rotate"]), !u2 && p(a.value.value) && (u2 = `${a.value.value}deg`), !u2) return;
      return [te2("rotate", n ? `calc(${u2} * -1)` : u2)];
    };
  }
  t.functional("-rotate", h2({ negative: true })), t.functional("rotate", h2({ negative: false })), i("rotate", () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12", "45", "90", "180"], valueThemeKeys: ["--rotate"] }]);
  {
    let n = ["var(--tw-rotate-x)", "var(--tw-rotate-y)", "var(--tw-rotate-z)", "var(--tw-skew-x)", "var(--tw-skew-y)"].join(" "), a = () => De([V3("--tw-rotate-x", "rotateX(0)"), V3("--tw-rotate-y", "rotateY(0)"), V3("--tw-rotate-z", "rotateZ(0)"), V3("--tw-skew-x", "skewX(0)"), V3("--tw-skew-y", "skewY(0)")]);
    for (let u2 of ["x", "y", "z"]) l3(`rotate-${u2}`, { supportsNegative: true, themeKeys: ["--rotate"], handleBareValue: ({ value: k3 }) => p(k3) ? `${k3}deg` : null, handle: (k3) => [a(), te2(`--tw-rotate-${u2}`, `rotate${u2.toUpperCase()}(${k3})`), te2("transform", n)] }), i(`rotate-${u2}`, () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12", "45", "90", "180"], valueThemeKeys: ["--rotate"] }]);
    l3("skew", { supportsNegative: true, themeKeys: ["--skew"], handleBareValue: ({ value: u2 }) => p(u2) ? `${u2}deg` : null, handle: (u2) => [a(), te2("--tw-skew-x", `skewX(${u2})`), te2("--tw-skew-y", `skewY(${u2})`), te2("transform", n)] }), l3("skew-x", { supportsNegative: true, themeKeys: ["--skew"], handleBareValue: ({ value: u2 }) => p(u2) ? `${u2}deg` : null, handle: (u2) => [a(), te2("--tw-skew-x", `skewX(${u2})`), te2("transform", n)] }), l3("skew-y", { supportsNegative: true, themeKeys: ["--skew"], handleBareValue: ({ value: u2 }) => p(u2) ? `${u2}deg` : null, handle: (u2) => [a(), te2("--tw-skew-y", `skewY(${u2})`), te2("transform", n)] }), i("skew", () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12"], valueThemeKeys: ["--skew"] }]), i("skew-x", () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12"], valueThemeKeys: ["--skew"] }]), i("skew-y", () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12"], valueThemeKeys: ["--skew"] }]), t.functional("transform", (u2) => {
      if (u2.modifier) return;
      let k3 = null;
      if (u2.value ? u2.value.kind === "arbitrary" && (k3 = u2.value.value) : k3 = n, k3 !== null) return [a(), te2("transform", k3)];
    }), i("transform", () => [{ hasDefaultValue: true }]), e("transform-cpu", [["transform", n]]), e("transform-gpu", [["transform", `translateZ(0) ${n}`]]), e("transform-none", [["transform", "none"]]);
  }
  e("transform-flat", [["transform-style", "flat"]]), e("transform-3d", [["transform-style", "preserve-3d"]]), e("transform-content", [["transform-box", "content-box"]]), e("transform-border", [["transform-box", "border-box"]]), e("transform-fill", [["transform-box", "fill-box"]]), e("transform-stroke", [["transform-box", "stroke-box"]]), e("transform-view", [["transform-box", "view-box"]]), e("backface-visible", [["backface-visibility", "visible"]]), e("backface-hidden", [["backface-visibility", "hidden"]]);
  for (let n of ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out"]) e(`cursor-${n}`, [["cursor", n]]);
  l3("cursor", { themeKeys: ["--cursor"], handle: (n) => [te2("cursor", n)] });
  for (let n of ["auto", "none", "manipulation"]) e(`touch-${n}`, [["touch-action", n]]);
  let m = () => De([V3("--tw-pan-x"), V3("--tw-pan-y"), V3("--tw-pinch-zoom")]);
  for (let n of ["x", "left", "right"]) e(`touch-pan-${n}`, [m, ["--tw-pan-x", `pan-${n}`], ["touch-action", "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"]]);
  for (let n of ["y", "up", "down"]) e(`touch-pan-${n}`, [m, ["--tw-pan-y", `pan-${n}`], ["touch-action", "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"]]);
  e("touch-pinch-zoom", [m, ["--tw-pinch-zoom", "pinch-zoom"], ["touch-action", "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"]]);
  for (let n of ["none", "text", "all", "auto"]) e(`select-${n}`, [["-webkit-user-select", n], ["user-select", n]]);
  e("resize-none", [["resize", "none"]]), e("resize-x", [["resize", "horizontal"]]), e("resize-y", [["resize", "vertical"]]), e("resize", [["resize", "both"]]), e("snap-none", [["scroll-snap-type", "none"]]);
  let v2 = () => De([V3("--tw-scroll-snap-strictness", "proximity", "*")]);
  for (let n of ["x", "y", "both"]) e(`snap-${n}`, [v2, ["scroll-snap-type", `${n} var(--tw-scroll-snap-strictness)`]]);
  e("snap-mandatory", [v2, ["--tw-scroll-snap-strictness", "mandatory"]]), e("snap-proximity", [v2, ["--tw-scroll-snap-strictness", "proximity"]]), e("snap-align-none", [["scroll-snap-align", "none"]]), e("snap-start", [["scroll-snap-align", "start"]]), e("snap-end", [["scroll-snap-align", "end"]]), e("snap-center", [["scroll-snap-align", "center"]]), e("snap-normal", [["scroll-snap-stop", "normal"]]), e("snap-always", [["scroll-snap-stop", "always"]]);
  for (let [n, a] of [["scroll-m", "scroll-margin"], ["scroll-mx", "scroll-margin-inline"], ["scroll-my", "scroll-margin-block"], ["scroll-ms", "scroll-margin-inline-start"], ["scroll-me", "scroll-margin-inline-end"], ["scroll-mt", "scroll-margin-top"], ["scroll-mr", "scroll-margin-right"], ["scroll-mb", "scroll-margin-bottom"], ["scroll-ml", "scroll-margin-left"]]) s2(n, ["--scroll-margin", "--spacing"], (u2) => [te2(a, u2)], { supportsNegative: true });
  for (let [n, a] of [["scroll-p", "scroll-padding"], ["scroll-px", "scroll-padding-inline"], ["scroll-py", "scroll-padding-block"], ["scroll-ps", "scroll-padding-inline-start"], ["scroll-pe", "scroll-padding-inline-end"], ["scroll-pt", "scroll-padding-top"], ["scroll-pr", "scroll-padding-right"], ["scroll-pb", "scroll-padding-bottom"], ["scroll-pl", "scroll-padding-left"]]) s2(n, ["--scroll-padding", "--spacing"], (u2) => [te2(a, u2)]);
  e("list-inside", [["list-style-position", "inside"]]), e("list-outside", [["list-style-position", "outside"]]), e("list-none", [["list-style-type", "none"]]), e("list-disc", [["list-style-type", "disc"]]), e("list-decimal", [["list-style-type", "decimal"]]), l3("list", { themeKeys: ["--list-style-type"], handle: (n) => [te2("list-style-type", n)] }), e("list-image-none", [["list-style-image", "none"]]), l3("list-image", { themeKeys: ["--list-style-image"], handle: (n) => [te2("list-style-image", n)] }), e("appearance-none", [["appearance", "none"]]), e("appearance-auto", [["appearance", "auto"]]), e("scheme-normal", [["color-scheme", "normal"]]), e("scheme-dark", [["color-scheme", "dark"]]), e("scheme-light", [["color-scheme", "light"]]), e("scheme-light-dark", [["color-scheme", "light dark"]]), e("scheme-only-dark", [["color-scheme", "only dark"]]), e("scheme-only-light", [["color-scheme", "only light"]]), e("columns-auto", [["columns", "auto"]]), l3("columns", { themeKeys: ["--columns", "--container"], handleBareValue: ({ value: n }) => p(n) ? n : null, handle: (n) => [te2("columns", n)] }), i("columns", () => [{ values: Array.from({ length: 12 }, (n, a) => `${a + 1}`), valueThemeKeys: ["--columns", "--container"] }]);
  for (let n of ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"]) e(`break-before-${n}`, [["break-before", n]]);
  for (let n of ["auto", "avoid", "avoid-page", "avoid-column"]) e(`break-inside-${n}`, [["break-inside", n]]);
  for (let n of ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"]) e(`break-after-${n}`, [["break-after", n]]);
  e("grid-flow-row", [["grid-auto-flow", "row"]]), e("grid-flow-col", [["grid-auto-flow", "column"]]), e("grid-flow-dense", [["grid-auto-flow", "dense"]]), e("grid-flow-row-dense", [["grid-auto-flow", "row dense"]]), e("grid-flow-col-dense", [["grid-auto-flow", "column dense"]]), e("auto-cols-auto", [["grid-auto-columns", "auto"]]), e("auto-cols-min", [["grid-auto-columns", "min-content"]]), e("auto-cols-max", [["grid-auto-columns", "max-content"]]), e("auto-cols-fr", [["grid-auto-columns", "minmax(0, 1fr)"]]), l3("auto-cols", { themeKeys: ["--grid-auto-columns"], handle: (n) => [te2("grid-auto-columns", n)] }), e("auto-rows-auto", [["grid-auto-rows", "auto"]]), e("auto-rows-min", [["grid-auto-rows", "min-content"]]), e("auto-rows-max", [["grid-auto-rows", "max-content"]]), e("auto-rows-fr", [["grid-auto-rows", "minmax(0, 1fr)"]]), l3("auto-rows", { themeKeys: ["--grid-auto-rows"], handle: (n) => [te2("grid-auto-rows", n)] }), e("grid-cols-none", [["grid-template-columns", "none"]]), e("grid-cols-subgrid", [["grid-template-columns", "subgrid"]]), l3("grid-cols", { themeKeys: ["--grid-template-columns"], handleBareValue: ({ value: n }) => ge(n) ? `repeat(${n}, minmax(0, 1fr))` : null, handle: (n) => [te2("grid-template-columns", n)] }), e("grid-rows-none", [["grid-template-rows", "none"]]), e("grid-rows-subgrid", [["grid-template-rows", "subgrid"]]), l3("grid-rows", { themeKeys: ["--grid-template-rows"], handleBareValue: ({ value: n }) => ge(n) ? `repeat(${n}, minmax(0, 1fr))` : null, handle: (n) => [te2("grid-template-rows", n)] }), i("grid-cols", () => [{ values: Array.from({ length: 12 }, (n, a) => `${a + 1}`), valueThemeKeys: ["--grid-template-columns"] }]), i("grid-rows", () => [{ values: Array.from({ length: 12 }, (n, a) => `${a + 1}`), valueThemeKeys: ["--grid-template-rows"] }]), e("flex-row", [["flex-direction", "row"]]), e("flex-row-reverse", [["flex-direction", "row-reverse"]]), e("flex-col", [["flex-direction", "column"]]), e("flex-col-reverse", [["flex-direction", "column-reverse"]]), e("flex-wrap", [["flex-wrap", "wrap"]]), e("flex-nowrap", [["flex-wrap", "nowrap"]]), e("flex-wrap-reverse", [["flex-wrap", "wrap-reverse"]]), e("place-content-center", [["place-content", "center"]]), e("place-content-start", [["place-content", "start"]]), e("place-content-end", [["place-content", "end"]]), e("place-content-between", [["place-content", "space-between"]]), e("place-content-around", [["place-content", "space-around"]]), e("place-content-evenly", [["place-content", "space-evenly"]]), e("place-content-baseline", [["place-content", "baseline"]]), e("place-content-stretch", [["place-content", "stretch"]]), e("place-items-center", [["place-items", "center"]]), e("place-items-start", [["place-items", "start"]]), e("place-items-end", [["place-items", "end"]]), e("place-items-baseline", [["place-items", "baseline"]]), e("place-items-stretch", [["place-items", "stretch"]]), e("content-normal", [["align-content", "normal"]]), e("content-center", [["align-content", "center"]]), e("content-start", [["align-content", "flex-start"]]), e("content-end", [["align-content", "flex-end"]]), e("content-between", [["align-content", "space-between"]]), e("content-around", [["align-content", "space-around"]]), e("content-evenly", [["align-content", "space-evenly"]]), e("content-baseline", [["align-content", "baseline"]]), e("content-stretch", [["align-content", "stretch"]]), e("items-center", [["align-items", "center"]]), e("items-start", [["align-items", "flex-start"]]), e("items-end", [["align-items", "flex-end"]]), e("items-baseline", [["align-items", "baseline"]]), e("items-stretch", [["align-items", "stretch"]]), e("justify-normal", [["justify-content", "normal"]]), e("justify-center", [["justify-content", "center"]]), e("justify-start", [["justify-content", "flex-start"]]), e("justify-end", [["justify-content", "flex-end"]]), e("justify-between", [["justify-content", "space-between"]]), e("justify-around", [["justify-content", "space-around"]]), e("justify-evenly", [["justify-content", "space-evenly"]]), e("justify-baseline", [["justify-content", "baseline"]]), e("justify-stretch", [["justify-content", "stretch"]]), e("justify-items-normal", [["justify-items", "normal"]]), e("justify-items-center", [["justify-items", "center"]]), e("justify-items-start", [["justify-items", "start"]]), e("justify-items-end", [["justify-items", "end"]]), e("justify-items-stretch", [["justify-items", "stretch"]]), s2("gap", ["--gap", "--spacing"], (n) => [te2("gap", n)]), s2("gap-x", ["--gap", "--spacing"], (n) => [te2("column-gap", n)]), s2("gap-y", ["--gap", "--spacing"], (n) => [te2("row-gap", n)]), s2("space-x", ["--space", "--spacing"], (n) => [De([V3("--tw-space-x-reverse", "0")]), me(":where(& > :not(:last-child))", [te2("--tw-sort", "row-gap"), te2("--tw-space-x-reverse", "0"), te2("margin-inline-start", `calc(${n} * var(--tw-space-x-reverse))`), te2("margin-inline-end", `calc(${n} * calc(1 - var(--tw-space-x-reverse)))`)])], { supportsNegative: true }), s2("space-y", ["--space", "--spacing"], (n) => [De([V3("--tw-space-y-reverse", "0")]), me(":where(& > :not(:last-child))", [te2("--tw-sort", "column-gap"), te2("--tw-space-y-reverse", "0"), te2("margin-block-start", `calc(${n} * var(--tw-space-y-reverse))`), te2("margin-block-end", `calc(${n} * calc(1 - var(--tw-space-y-reverse)))`)])], { supportsNegative: true }), e("space-x-reverse", [() => De([V3("--tw-space-x-reverse", "0")]), () => me(":where(& > :not(:last-child))", [te2("--tw-sort", "row-gap"), te2("--tw-space-x-reverse", "1")])]), e("space-y-reverse", [() => De([V3("--tw-space-y-reverse", "0")]), () => me(":where(& > :not(:last-child))", [te2("--tw-sort", "column-gap"), te2("--tw-space-y-reverse", "1")])]), e("accent-auto", [["accent-color", "auto"]]), f2("accent", { themeKeys: ["--accent-color", "--color"], handle: (n) => [te2("accent-color", n)] }), f2("caret", { themeKeys: ["--caret-color", "--color"], handle: (n) => [te2("caret-color", n)] }), f2("divide", { themeKeys: ["--divide-color", "--color"], handle: (n) => [me(":where(& > :not(:last-child))", [te2("--tw-sort", "divide-color"), te2("border-color", n)])] }), e("place-self-auto", [["place-self", "auto"]]), e("place-self-start", [["place-self", "start"]]), e("place-self-end", [["place-self", "end"]]), e("place-self-center", [["place-self", "center"]]), e("place-self-stretch", [["place-self", "stretch"]]), e("self-auto", [["align-self", "auto"]]), e("self-start", [["align-self", "flex-start"]]), e("self-end", [["align-self", "flex-end"]]), e("self-center", [["align-self", "center"]]), e("self-stretch", [["align-self", "stretch"]]), e("self-baseline", [["align-self", "baseline"]]), e("justify-self-auto", [["justify-self", "auto"]]), e("justify-self-start", [["justify-self", "flex-start"]]), e("justify-self-end", [["justify-self", "flex-end"]]), e("justify-self-center", [["justify-self", "center"]]), e("justify-self-stretch", [["justify-self", "stretch"]]);
  for (let n of ["auto", "hidden", "clip", "visible", "scroll"]) e(`overflow-${n}`, [["overflow", n]]), e(`overflow-x-${n}`, [["overflow-x", n]]), e(`overflow-y-${n}`, [["overflow-y", n]]);
  for (let n of ["auto", "contain", "none"]) e(`overscroll-${n}`, [["overscroll-behavior", n]]), e(`overscroll-x-${n}`, [["overscroll-behavior-x", n]]), e(`overscroll-y-${n}`, [["overscroll-behavior-y", n]]);
  e("scroll-auto", [["scroll-behavior", "auto"]]), e("scroll-smooth", [["scroll-behavior", "smooth"]]), e("truncate", [["overflow", "hidden"], ["text-overflow", "ellipsis"], ["white-space", "nowrap"]]), e("text-ellipsis", [["text-overflow", "ellipsis"]]), e("text-clip", [["text-overflow", "clip"]]), e("hyphens-none", [["-webkit-hyphens", "none"], ["hyphens", "none"]]), e("hyphens-manual", [["-webkit-hyphens", "manual"], ["hyphens", "manual"]]), e("hyphens-auto", [["-webkit-hyphens", "auto"], ["hyphens", "auto"]]), e("whitespace-normal", [["white-space", "normal"]]), e("whitespace-nowrap", [["white-space", "nowrap"]]), e("whitespace-pre", [["white-space", "pre"]]), e("whitespace-pre-line", [["white-space", "pre-line"]]), e("whitespace-pre-wrap", [["white-space", "pre-wrap"]]), e("whitespace-break-spaces", [["white-space", "break-spaces"]]), e("text-wrap", [["text-wrap", "wrap"]]), e("text-nowrap", [["text-wrap", "nowrap"]]), e("text-balance", [["text-wrap", "balance"]]), e("text-pretty", [["text-wrap", "pretty"]]), e("break-normal", [["overflow-wrap", "normal"], ["word-break", "normal"]]), e("break-words", [["overflow-wrap", "break-word"]]), e("break-all", [["word-break", "break-all"]]), e("break-keep", [["word-break", "keep-all"]]), false;
  for (let [n, a] of [["rounded", ["border-radius"]], ["rounded-s", ["border-start-start-radius", "border-end-start-radius"]], ["rounded-e", ["border-start-end-radius", "border-end-end-radius"]], ["rounded-t", ["border-top-left-radius", "border-top-right-radius"]], ["rounded-r", ["border-top-right-radius", "border-bottom-right-radius"]], ["rounded-b", ["border-bottom-right-radius", "border-bottom-left-radius"]], ["rounded-l", ["border-top-left-radius", "border-bottom-left-radius"]], ["rounded-ss", ["border-start-start-radius"]], ["rounded-se", ["border-start-end-radius"]], ["rounded-ee", ["border-end-end-radius"]], ["rounded-es", ["border-end-start-radius"]], ["rounded-tl", ["border-top-left-radius"]], ["rounded-tr", ["border-top-right-radius"]], ["rounded-br", ["border-bottom-right-radius"]], ["rounded-bl", ["border-bottom-left-radius"]]]) e(`${n}-none`, a.map((u2) => [u2, "0"])), e(`${n}-full`, a.map((u2) => [u2, "calc(infinity * 1px)"])), l3(n, { themeKeys: ["--radius"], handle: (u2) => a.map((k3) => te2(k3, u2)) });
  e("border-solid", [["--tw-border-style", "solid"], ["border-style", "solid"]]), e("border-dashed", [["--tw-border-style", "dashed"], ["border-style", "dashed"]]), e("border-dotted", [["--tw-border-style", "dotted"], ["border-style", "dotted"]]), e("border-double", [["--tw-border-style", "double"], ["border-style", "double"]]), e("border-hidden", [["--tw-border-style", "hidden"], ["border-style", "hidden"]]), e("border-none", [["--tw-border-style", "none"], ["border-style", "none"]]);
  {
    let a = function(u2, k3) {
      t.functional(u2, (w3) => {
        if (!w3.value) {
          if (w3.modifier) return;
          let $3 = r.get(["--default-border-width"]) ?? "1px", E3 = k3.width($3);
          return E3 ? [n(), ...E3] : void 0;
        }
        if (w3.value.kind === "arbitrary") {
          let $3 = w3.value.value;
          switch (w3.value.dataType ?? pe($3, ["color", "line-width", "length"])) {
            case "line-width":
            case "length": {
              if (w3.modifier) return;
              let C3 = k3.width($3);
              return C3 ? [n(), ...C3] : void 0;
            }
            default:
              return $3 = L3($3, w3.modifier, r), $3 === null ? void 0 : k3.color($3);
          }
        }
        {
          let $3 = W3(w3, r, ["--border-color", "--color"]);
          if ($3) return k3.color($3);
        }
        {
          if (w3.modifier) return;
          let $3 = r.resolve(w3.value.value, ["--border-width"]);
          if ($3) {
            let E3 = k3.width($3);
            return E3 ? [n(), ...E3] : void 0;
          }
          if (p(w3.value.value)) {
            let E3 = k3.width(`${w3.value.value}px`);
            return E3 ? [n(), ...E3] : void 0;
          }
        }
      }), i(u2, () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--border-color", "--color"], modifiers: Array.from({ length: 21 }, (w3, $3) => `${$3 * 5}`), hasDefaultValue: true }, { values: ["0", "2", "4", "8"], valueThemeKeys: ["--border-width"] }]);
    };
    var A3 = a;
    let n = () => De([V3("--tw-border-style", "solid")]);
    a("border", { width: (u2) => [te2("border-style", "var(--tw-border-style)"), te2("border-width", u2)], color: (u2) => [te2("border-color", u2)] }), a("border-x", { width: (u2) => [te2("border-inline-style", "var(--tw-border-style)"), te2("border-inline-width", u2)], color: (u2) => [te2("border-inline-color", u2)] }), a("border-y", { width: (u2) => [te2("border-block-style", "var(--tw-border-style)"), te2("border-block-width", u2)], color: (u2) => [te2("border-block-color", u2)] }), a("border-s", { width: (u2) => [te2("border-inline-start-style", "var(--tw-border-style)"), te2("border-inline-start-width", u2)], color: (u2) => [te2("border-inline-start-color", u2)] }), a("border-e", { width: (u2) => [te2("border-inline-end-style", "var(--tw-border-style)"), te2("border-inline-end-width", u2)], color: (u2) => [te2("border-inline-end-color", u2)] }), a("border-t", { width: (u2) => [te2("border-top-style", "var(--tw-border-style)"), te2("border-top-width", u2)], color: (u2) => [te2("border-top-color", u2)] }), a("border-r", { width: (u2) => [te2("border-right-style", "var(--tw-border-style)"), te2("border-right-width", u2)], color: (u2) => [te2("border-right-color", u2)] }), a("border-b", { width: (u2) => [te2("border-bottom-style", "var(--tw-border-style)"), te2("border-bottom-width", u2)], color: (u2) => [te2("border-bottom-color", u2)] }), a("border-l", { width: (u2) => [te2("border-left-style", "var(--tw-border-style)"), te2("border-left-width", u2)], color: (u2) => [te2("border-left-color", u2)] }), l3("divide-x", { defaultValue: r.get(["--default-border-width"]) ?? "1px", themeKeys: ["--divide-width", "--border-width"], handleBareValue: ({ value: u2 }) => p(u2) ? `${u2}px` : null, handle: (u2) => [De([V3("--tw-divide-x-reverse", "0")]), me(":where(& > :not(:last-child))", [te2("--tw-sort", "divide-x-width"), n(), te2("--tw-divide-x-reverse", "0"), te2("border-inline-style", "var(--tw-border-style)"), te2("border-inline-start-width", `calc(${u2} * var(--tw-divide-x-reverse))`), te2("border-inline-end-width", `calc(${u2} * calc(1 - var(--tw-divide-x-reverse)))`)])] }), l3("divide-y", { defaultValue: r.get(["--default-border-width"]) ?? "1px", themeKeys: ["--divide-width", "--border-width"], handleBareValue: ({ value: u2 }) => p(u2) ? `${u2}px` : null, handle: (u2) => [De([V3("--tw-divide-y-reverse", "0")]), me(":where(& > :not(:last-child))", [te2("--tw-sort", "divide-y-width"), n(), te2("--tw-divide-y-reverse", "0"), te2("border-bottom-style", "var(--tw-border-style)"), te2("border-top-style", "var(--tw-border-style)"), te2("border-top-width", `calc(${u2} * var(--tw-divide-y-reverse))`), te2("border-bottom-width", `calc(${u2} * calc(1 - var(--tw-divide-y-reverse)))`)])] }), i("divide-x", () => [{ values: ["0", "2", "4", "8"], valueThemeKeys: ["--divide-width", "--border-width"], hasDefaultValue: true }]), i("divide-y", () => [{ values: ["0", "2", "4", "8"], valueThemeKeys: ["--divide-width", "--border-width"], hasDefaultValue: true }]), e("divide-x-reverse", [() => De([V3("--tw-divide-x-reverse", "0")]), () => me(":where(& > :not(:last-child))", [te2("--tw-divide-x-reverse", "1")])]), e("divide-y-reverse", [() => De([V3("--tw-divide-y-reverse", "0")]), () => me(":where(& > :not(:last-child))", [te2("--tw-divide-y-reverse", "1")])]);
    for (let u2 of ["solid", "dashed", "dotted", "double", "none"]) e(`divide-${u2}`, [() => me(":where(& > :not(:last-child))", [te2("--tw-sort", "divide-style"), te2("--tw-border-style", u2), te2("border-style", u2)])]);
  }
  e("bg-auto", [["background-size", "auto"]]), e("bg-cover", [["background-size", "cover"]]), e("bg-contain", [["background-size", "contain"]]), e("bg-fixed", [["background-attachment", "fixed"]]), e("bg-local", [["background-attachment", "local"]]), e("bg-scroll", [["background-attachment", "scroll"]]), e("bg-center", [["background-position", "center"]]), e("bg-top", [["background-position", "top"]]), e("bg-right-top", [["background-position", "right top"]]), e("bg-right", [["background-position", "right"]]), e("bg-right-bottom", [["background-position", "right bottom"]]), e("bg-bottom", [["background-position", "bottom"]]), e("bg-left-bottom", [["background-position", "left bottom"]]), e("bg-left", [["background-position", "left"]]), e("bg-left-top", [["background-position", "left top"]]), e("bg-repeat", [["background-repeat", "repeat"]]), e("bg-no-repeat", [["background-repeat", "no-repeat"]]), e("bg-repeat-x", [["background-repeat", "repeat-x"]]), e("bg-repeat-y", [["background-repeat", "repeat-y"]]), e("bg-repeat-round", [["background-repeat", "round"]]), e("bg-repeat-space", [["background-repeat", "space"]]), e("bg-none", [["background-image", "none"]]);
  {
    let u2 = function($3) {
      let E3 = "in oklab";
      if (($3 == null ? void 0 : $3.kind) === "named") switch ($3.value) {
        case "longer":
        case "shorter":
        case "increasing":
        case "decreasing":
          E3 = `in oklch ${$3.value} hue`;
          break;
        default:
          E3 = `in ${$3.value}`;
      }
      else ($3 == null ? void 0 : $3.kind) === "arbitrary" && (E3 = $3.value);
      return E3;
    }, k3 = function({ negative: $3 }) {
      return (E3) => {
        if (!E3.value) return;
        if (E3.value.kind === "arbitrary") {
          if (E3.modifier) return;
          let U3 = E3.value.value;
          switch (E3.value.dataType ?? pe(U3, ["angle"])) {
            case "angle":
              return U3 = $3 ? `calc(${U3} * -1)` : `${U3}`, [te2("--tw-gradient-position", U3), te2("background-image", `linear-gradient(var(--tw-gradient-stops,${U3}))`)];
            default:
              return $3 ? void 0 : [te2("--tw-gradient-position", U3), te2("background-image", `linear-gradient(var(--tw-gradient-stops,${U3}))`)];
          }
        }
        let C3 = E3.value.value;
        if (!$3 && a.has(C3)) C3 = a.get(C3);
        else if (p(C3)) C3 = $3 ? `calc(${C3}deg * -1)` : `${C3}deg`;
        else return;
        let x = u2(E3.modifier);
        return [te2("--tw-gradient-position", `${C3} ${x}`), te2("background-image", "linear-gradient(var(--tw-gradient-stops))")];
      };
    }, w3 = function({ negative: $3 }) {
      return (E3) => {
        var _a2;
        if (((_a2 = E3.value) == null ? void 0 : _a2.kind) === "arbitrary") {
          if (E3.modifier) return;
          let U3 = E3.value.value;
          return [te2("--tw-gradient-position", U3), te2("background-image", `conic-gradient(var(--tw-gradient-stops,${U3}))`)];
        }
        let C3 = u2(E3.modifier);
        if (!E3.value) return [te2("--tw-gradient-position", C3), te2("background-image", "conic-gradient(var(--tw-gradient-stops))")];
        let x = E3.value.value;
        if (p(x)) return x = $3 ? `calc(${x} * -1)` : `${x}deg`, [te2("--tw-gradient-position", `from ${x} ${C3}`), te2("background-image", "conic-gradient(var(--tw-gradient-stops))")];
      };
    };
    var T3 = u2, N3 = k3, K3 = w3;
    let n = ["oklab", "oklch", "srgb", "hsl", "longer", "shorter", "increasing", "decreasing"], a = /* @__PURE__ */ new Map([["to-t", "to top"], ["to-tr", "to top right"], ["to-r", "to right"], ["to-br", "to bottom right"], ["to-b", "to bottom"], ["to-bl", "to bottom left"], ["to-l", "to left"], ["to-tl", "to top left"]]);
    t.functional("-bg-linear", k3({ negative: true })), t.functional("bg-linear", k3({ negative: false })), i("bg-linear", () => [{ values: [...a.keys()], modifiers: n }, { values: ["0", "30", "60", "90", "120", "150", "180", "210", "240", "270", "300", "330"], supportsNegative: true, modifiers: n }]), t.functional("-bg-conic", w3({ negative: true })), t.functional("bg-conic", w3({ negative: false })), i("bg-conic", () => [{ hasDefaultValue: true, modifiers: n }, { values: ["0", "30", "60", "90", "120", "150", "180", "210", "240", "270", "300", "330"], supportsNegative: true, modifiers: n }]), t.functional("bg-radial", ($3) => {
      if (!$3.value) {
        let E3 = u2($3.modifier);
        return [te2("--tw-gradient-position", E3), te2("background-image", "radial-gradient(var(--tw-gradient-stops))")];
      }
      if ($3.value.kind === "arbitrary") {
        if ($3.modifier) return;
        let E3 = $3.value.value;
        return [te2("--tw-gradient-position", E3), te2("background-image", `radial-gradient(var(--tw-gradient-stops,${E3}))`)];
      }
    }), i("bg-radial", () => [{ hasDefaultValue: true, modifiers: n }]);
  }
  t.functional("bg", (n) => {
    if (n.value) {
      if (n.value.kind === "arbitrary") {
        let a = n.value.value;
        switch (n.value.dataType ?? pe(a, ["image", "color", "percentage", "position", "bg-size", "length", "url"])) {
          case "percentage":
          case "position":
            return n.modifier ? void 0 : [te2("background-position", a)];
          case "bg-size":
          case "length":
          case "size":
            return n.modifier ? void 0 : [te2("background-size", a)];
          case "image":
          case "url":
            return n.modifier ? void 0 : [te2("background-image", a)];
          default:
            return a = L3(a, n.modifier, r), a === null ? void 0 : [te2("background-color", a)];
        }
      }
      {
        let a = W3(n, r, ["--background-color", "--color"]);
        if (a) return [te2("background-color", a)];
      }
      {
        if (n.modifier) return;
        let a = r.resolve(n.value.value, ["--background-image"]);
        if (a) return [te2("background-image", a)];
      }
    }
  }), i("bg", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--background-color", "--color"], modifiers: Array.from({ length: 21 }, (n, a) => `${a * 5}`) }, { values: [], valueThemeKeys: ["--background-image"] }]);
  let y3 = () => De([V3("--tw-gradient-position"), V3("--tw-gradient-from", "#0000", "<color>"), V3("--tw-gradient-via", "#0000", "<color>"), V3("--tw-gradient-to", "#0000", "<color>"), V3("--tw-gradient-stops"), V3("--tw-gradient-via-stops"), V3("--tw-gradient-from-position", "0%", "<length-percentage>"), V3("--tw-gradient-via-position", "50%", "<length-percentage>"), V3("--tw-gradient-to-position", "100%", "<length-percentage>")]);
  function b3(n, a) {
    t.functional(n, (u2) => {
      if (u2.value) {
        if (u2.value.kind === "arbitrary") {
          let k3 = u2.value.value;
          switch (u2.value.dataType ?? pe(k3, ["color", "length", "percentage"])) {
            case "length":
            case "percentage":
              return u2.modifier ? void 0 : a.position(k3);
            default:
              return k3 = L3(k3, u2.modifier, r), k3 === null ? void 0 : a.color(k3);
          }
        }
        {
          let k3 = W3(u2, r, ["--background-color", "--color"]);
          if (k3) return a.color(k3);
        }
        {
          if (u2.modifier) return;
          let k3 = r.resolve(u2.value.value, ["--gradient-color-stop-positions"]);
          if (k3) return a.position(k3);
          if (u2.value.value[u2.value.value.length - 1] === "%" && p(u2.value.value.slice(0, -1))) return a.position(u2.value.value);
        }
      }
    }), i(n, () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--background-color", "--color"], modifiers: Array.from({ length: 21 }, (u2, k3) => `${k3 * 5}`) }, { values: Array.from({ length: 21 }, (u2, k3) => `${k3 * 5}%`), valueThemeKeys: ["--gradient-color-stop-positions"] }]);
  }
  b3("from", { color: (n) => [y3(), te2("--tw-sort", "--tw-gradient-from"), te2("--tw-gradient-from", n), te2("--tw-gradient-stops", "var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position))")], position: (n) => [y3(), te2("--tw-gradient-from-position", n)] }), e("via-none", [["--tw-gradient-via-stops", "initial"]]), b3("via", { color: (n) => [y3(), te2("--tw-sort", "--tw-gradient-via"), te2("--tw-gradient-via", n), te2("--tw-gradient-via-stops", "var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position)"), te2("--tw-gradient-stops", "var(--tw-gradient-via-stops)")], position: (n) => [y3(), te2("--tw-gradient-via-position", n)] }), b3("to", { color: (n) => [y3(), te2("--tw-sort", "--tw-gradient-to"), te2("--tw-gradient-to", n), te2("--tw-gradient-stops", "var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position))")], position: (n) => [y3(), te2("--tw-gradient-to-position", n)] }), e("box-decoration-slice", [["-webkit-box-decoration-break", "slice"], ["box-decoration-break", "slice"]]), e("box-decoration-clone", [["-webkit-box-decoration-break", "clone"], ["box-decoration-break", "clone"]]), e("bg-clip-text", [["background-clip", "text"]]), e("bg-clip-border", [["background-clip", "border-box"]]), e("bg-clip-padding", [["background-clip", "padding-box"]]), e("bg-clip-content", [["background-clip", "content-box"]]), e("bg-origin-border", [["background-origin", "border-box"]]), e("bg-origin-padding", [["background-origin", "padding-box"]]), e("bg-origin-content", [["background-origin", "content-box"]]);
  for (let n of ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"]) e(`bg-blend-${n}`, [["background-blend-mode", n]]), e(`mix-blend-${n}`, [["mix-blend-mode", n]]);
  e("mix-blend-plus-darker", [["mix-blend-mode", "plus-darker"]]), e("mix-blend-plus-lighter", [["mix-blend-mode", "plus-lighter"]]), e("fill-none", [["fill", "none"]]), t.functional("fill", (n) => {
    if (!n.value) return;
    if (n.value.kind === "arbitrary") {
      let u2 = L3(n.value.value, n.modifier, r);
      return u2 === null ? void 0 : [te2("fill", u2)];
    }
    let a = W3(n, r, ["--fill", "--color"]);
    if (a) return [te2("fill", a)];
  }), i("fill", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--fill", "--color"], modifiers: Array.from({ length: 21 }, (n, a) => `${a * 5}`) }]), e("stroke-none", [["stroke", "none"]]), t.functional("stroke", (n) => {
    if (n.value) {
      if (n.value.kind === "arbitrary") {
        let a = n.value.value;
        switch (n.value.dataType ?? pe(a, ["color", "number", "length", "percentage"])) {
          case "number":
          case "length":
          case "percentage":
            return n.modifier ? void 0 : [te2("stroke-width", a)];
          default:
            return a = L3(n.value.value, n.modifier, r), a === null ? void 0 : [te2("stroke", a)];
        }
      }
      {
        let a = W3(n, r, ["--stroke", "--color"]);
        if (a) return [te2("stroke", a)];
      }
      {
        let a = r.resolve(n.value.value, ["--stroke-width"]);
        if (a) return [te2("stroke-width", a)];
        if (p(n.value.value)) return [te2("stroke-width", n.value.value)];
      }
    }
  }), i("stroke", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--stroke", "--color"], modifiers: Array.from({ length: 21 }, (n, a) => `${a * 5}`) }, { values: ["0", "1", "2", "3"], valueThemeKeys: ["--stroke-width"] }]), e("object-contain", [["object-fit", "contain"]]), e("object-cover", [["object-fit", "cover"]]), e("object-fill", [["object-fit", "fill"]]), e("object-none", [["object-fit", "none"]]), e("object-scale-down", [["object-fit", "scale-down"]]), e("object-bottom", [["object-position", "bottom"]]), e("object-center", [["object-position", "center"]]), e("object-left", [["object-position", "left"]]), e("object-left-bottom", [["object-position", "left bottom"]]), e("object-left-top", [["object-position", "left top"]]), e("object-right", [["object-position", "right"]]), e("object-right-bottom", [["object-position", "right bottom"]]), e("object-right-top", [["object-position", "right top"]]), e("object-top", [["object-position", "top"]]), l3("object", { themeKeys: ["--object-position"], handle: (n) => [te2("object-position", n)] });
  for (let [n, a] of [["p", "padding"], ["px", "padding-inline"], ["py", "padding-block"], ["ps", "padding-inline-start"], ["pe", "padding-inline-end"], ["pt", "padding-top"], ["pr", "padding-right"], ["pb", "padding-bottom"], ["pl", "padding-left"]]) s2(n, ["--padding", "--spacing"], (u2) => [te2(a, u2)]);
  e("text-left", [["text-align", "left"]]), e("text-center", [["text-align", "center"]]), e("text-right", [["text-align", "right"]]), e("text-justify", [["text-align", "justify"]]), e("text-start", [["text-align", "start"]]), e("text-end", [["text-align", "end"]]), s2("indent", ["--text-indent", "--spacing"], (n) => [te2("text-indent", n)], { supportsNegative: true }), e("align-baseline", [["vertical-align", "baseline"]]), e("align-top", [["vertical-align", "top"]]), e("align-middle", [["vertical-align", "middle"]]), e("align-bottom", [["vertical-align", "bottom"]]), e("align-text-top", [["vertical-align", "text-top"]]), e("align-text-bottom", [["vertical-align", "text-bottom"]]), e("align-sub", [["vertical-align", "sub"]]), e("align-super", [["vertical-align", "super"]]), l3("align", { themeKeys: [], handle: (n) => [te2("vertical-align", n)] }), t.functional("font", (n) => {
    if (!(!n.value || n.modifier)) {
      if (n.value.kind === "arbitrary") {
        let a = n.value.value;
        switch (n.value.dataType ?? pe(a, ["number", "generic-name", "family-name"])) {
          case "generic-name":
          case "family-name":
            return [te2("font-family", a)];
          default:
            return [De([V3("--tw-font-weight")]), te2("--tw-font-weight", a), te2("font-weight", a)];
        }
      }
      {
        let a = r.resolveWith(n.value.value, ["--font"], ["--font-feature-settings", "--font-variation-settings"]);
        if (a) {
          let [u2, k3 = {}] = a;
          return [te2("font-family", u2), te2("font-feature-settings", k3["--font-feature-settings"]), te2("font-variation-settings", k3["--font-variation-settings"])];
        }
      }
      {
        let a = r.resolve(n.value.value, ["--font-weight"]);
        if (a) return [De([V3("--tw-font-weight")]), te2("--tw-font-weight", a), te2("font-weight", a)];
      }
    }
  }), i("font", () => [{ values: [], valueThemeKeys: ["--font"] }, { values: [], valueThemeKeys: ["--font-weight"] }]), e("uppercase", [["text-transform", "uppercase"]]), e("lowercase", [["text-transform", "lowercase"]]), e("capitalize", [["text-transform", "capitalize"]]), e("normal-case", [["text-transform", "none"]]), e("italic", [["font-style", "italic"]]), e("not-italic", [["font-style", "normal"]]), e("underline", [["text-decoration-line", "underline"]]), e("overline", [["text-decoration-line", "overline"]]), e("line-through", [["text-decoration-line", "line-through"]]), e("no-underline", [["text-decoration-line", "none"]]), e("font-stretch-normal", [["font-stretch", "normal"]]), e("font-stretch-ultra-condensed", [["font-stretch", "ultra-condensed"]]), e("font-stretch-extra-condensed", [["font-stretch", "extra-condensed"]]), e("font-stretch-condensed", [["font-stretch", "condensed"]]), e("font-stretch-semi-condensed", [["font-stretch", "semi-condensed"]]), e("font-stretch-semi-expanded", [["font-stretch", "semi-expanded"]]), e("font-stretch-expanded", [["font-stretch", "expanded"]]), e("font-stretch-extra-expanded", [["font-stretch", "extra-expanded"]]), e("font-stretch-ultra-expanded", [["font-stretch", "ultra-expanded"]]), l3("font-stretch", { handleBareValue: ({ value: n }) => {
    if (!n.endsWith("%")) return null;
    let a = Number(n.slice(0, -1));
    return !p(a) || Number.isNaN(a) || a < 50 || a > 200 ? null : n;
  }, handle: (n) => [te2("font-stretch", n)] }), i("font-stretch", () => [{ values: ["50%", "75%", "90%", "95%", "100%", "105%", "110%", "125%", "150%", "200%"] }]), f2("placeholder", { themeKeys: ["--background-color", "--color"], handle: (n) => [me("&::placeholder", [te2("--tw-sort", "placeholder-color"), te2("color", n)])] }), e("decoration-solid", [["text-decoration-style", "solid"]]), e("decoration-double", [["text-decoration-style", "double"]]), e("decoration-dotted", [["text-decoration-style", "dotted"]]), e("decoration-dashed", [["text-decoration-style", "dashed"]]), e("decoration-wavy", [["text-decoration-style", "wavy"]]), e("decoration-auto", [["text-decoration-thickness", "auto"]]), e("decoration-from-font", [["text-decoration-thickness", "from-font"]]), t.functional("decoration", (n) => {
    if (n.value) {
      if (n.value.kind === "arbitrary") {
        let a = n.value.value;
        switch (n.value.dataType ?? pe(a, ["color", "length", "percentage"])) {
          case "length":
          case "percentage":
            return n.modifier ? void 0 : [te2("text-decoration-thickness", a)];
          default:
            return a = L3(a, n.modifier, r), a === null ? void 0 : [te2("text-decoration-color", a)];
        }
      }
      {
        let a = r.resolve(n.value.value, ["--text-decoration-thickness"]);
        if (a) return n.modifier ? void 0 : [te2("text-decoration-thickness", a)];
        if (p(n.value.value)) return n.modifier ? void 0 : [te2("text-decoration-thickness", `${n.value.value}px`)];
      }
      {
        let a = W3(n, r, ["--text-decoration-color", "--color"]);
        if (a) return [te2("text-decoration-color", a)];
      }
    }
  }), i("decoration", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--text-decoration-color", "--color"], modifiers: Array.from({ length: 21 }, (n, a) => `${a * 5}`) }, { values: ["0", "1", "2"], valueThemeKeys: ["--text-decoration-thickness"] }]), e("animate-none", [["animation", "none"]]), l3("animate", { themeKeys: ["--animate"], handle: (n) => [te2("animation", n)] });
  {
    let n = ["var(--tw-blur,)", "var(--tw-brightness,)", "var(--tw-contrast,)", "var(--tw-grayscale,)", "var(--tw-hue-rotate,)", "var(--tw-invert,)", "var(--tw-saturate,)", "var(--tw-sepia,)", "var(--tw-drop-shadow,)"].join(" "), a = ["var(--tw-backdrop-blur,)", "var(--tw-backdrop-brightness,)", "var(--tw-backdrop-contrast,)", "var(--tw-backdrop-grayscale,)", "var(--tw-backdrop-hue-rotate,)", "var(--tw-backdrop-invert,)", "var(--tw-backdrop-opacity,)", "var(--tw-backdrop-saturate,)", "var(--tw-backdrop-sepia,)"].join(" "), u2 = () => De([V3("--tw-blur"), V3("--tw-brightness"), V3("--tw-contrast"), V3("--tw-grayscale"), V3("--tw-hue-rotate"), V3("--tw-invert"), V3("--tw-opacity"), V3("--tw-saturate"), V3("--tw-sepia"), V3("--tw-drop-shadow")]), k3 = () => De([V3("--tw-backdrop-blur"), V3("--tw-backdrop-brightness"), V3("--tw-backdrop-contrast"), V3("--tw-backdrop-grayscale"), V3("--tw-backdrop-hue-rotate"), V3("--tw-backdrop-invert"), V3("--tw-backdrop-opacity"), V3("--tw-backdrop-saturate"), V3("--tw-backdrop-sepia")]);
    t.functional("filter", (w3) => {
      if (!w3.modifier) {
        if (w3.value === null) return [u2(), te2("filter", n)];
        if (w3.value.kind === "arbitrary") return [te2("filter", w3.value.value)];
        switch (w3.value.value) {
          case "none":
            return [te2("filter", "none")];
        }
      }
    }), t.functional("backdrop-filter", (w3) => {
      if (!w3.modifier) {
        if (w3.value === null) return [k3(), te2("-webkit-backdrop-filter", a), te2("backdrop-filter", a)];
        if (w3.value.kind === "arbitrary") return [te2("-webkit-backdrop-filter", w3.value.value), te2("backdrop-filter", w3.value.value)];
        switch (w3.value.value) {
          case "none":
            return [te2("-webkit-backdrop-filter", "none"), te2("backdrop-filter", "none")];
        }
      }
    }), l3("blur", { themeKeys: ["--blur"], handle: (w3) => [u2(), te2("--tw-blur", `blur(${w3})`), te2("filter", n)] }), e("blur-none", [u2, ["--tw-blur", " "], ["filter", n]]), l3("backdrop-blur", { themeKeys: ["--backdrop-blur", "--blur"], handle: (w3) => [k3(), te2("--tw-backdrop-blur", `blur(${w3})`), te2("-webkit-backdrop-filter", a), te2("backdrop-filter", a)] }), e("backdrop-blur-none", [k3, ["--tw-backdrop-blur", " "], ["-webkit-backdrop-filter", a], ["backdrop-filter", a]]), l3("brightness", { themeKeys: ["--brightness"], handleBareValue: ({ value: w3 }) => p(w3) ? `${w3}%` : null, handle: (w3) => [u2(), te2("--tw-brightness", `brightness(${w3})`), te2("filter", n)] }), l3("backdrop-brightness", { themeKeys: ["--backdrop-brightness", "--brightness"], handleBareValue: ({ value: w3 }) => p(w3) ? `${w3}%` : null, handle: (w3) => [k3(), te2("--tw-backdrop-brightness", `brightness(${w3})`), te2("-webkit-backdrop-filter", a), te2("backdrop-filter", a)] }), i("brightness", () => [{ values: ["0", "50", "75", "90", "95", "100", "105", "110", "125", "150", "200"], valueThemeKeys: ["--brightness"] }]), i("backdrop-brightness", () => [{ values: ["0", "50", "75", "90", "95", "100", "105", "110", "125", "150", "200"], valueThemeKeys: ["--backdrop-brightness", "--brightness"] }]), l3("contrast", { themeKeys: ["--contrast"], handleBareValue: ({ value: w3 }) => p(w3) ? `${w3}%` : null, handle: (w3) => [u2(), te2("--tw-contrast", `contrast(${w3})`), te2("filter", n)] }), l3("backdrop-contrast", { themeKeys: ["--backdrop-contrast", "--contrast"], handleBareValue: ({ value: w3 }) => p(w3) ? `${w3}%` : null, handle: (w3) => [k3(), te2("--tw-backdrop-contrast", `contrast(${w3})`), te2("-webkit-backdrop-filter", a), te2("backdrop-filter", a)] }), i("contrast", () => [{ values: ["0", "50", "75", "100", "125", "150", "200"], valueThemeKeys: ["--contrast"] }]), i("backdrop-contrast", () => [{ values: ["0", "50", "75", "100", "125", "150", "200"], valueThemeKeys: ["--backdrop-contrast", "--contrast"] }]), l3("grayscale", { themeKeys: ["--grayscale"], handleBareValue: ({ value: w3 }) => p(w3) ? `${w3}%` : null, defaultValue: "100%", handle: (w3) => [u2(), te2("--tw-grayscale", `grayscale(${w3})`), te2("filter", n)] }), l3("backdrop-grayscale", { themeKeys: ["--backdrop-grayscale", "--grayscale"], handleBareValue: ({ value: w3 }) => p(w3) ? `${w3}%` : null, defaultValue: "100%", handle: (w3) => [k3(), te2("--tw-backdrop-grayscale", `grayscale(${w3})`), te2("-webkit-backdrop-filter", a), te2("backdrop-filter", a)] }), i("grayscale", () => [{ values: ["0", "25", "50", "75", "100"], valueThemeKeys: ["--grayscale"], hasDefaultValue: true }]), i("backdrop-grayscale", () => [{ values: ["0", "25", "50", "75", "100"], valueThemeKeys: ["--backdrop-grayscale", "--grayscale"], hasDefaultValue: true }]), l3("hue-rotate", { supportsNegative: true, themeKeys: ["--hue-rotate"], handleBareValue: ({ value: w3 }) => p(w3) ? `${w3}deg` : null, handle: (w3) => [u2(), te2("--tw-hue-rotate", `hue-rotate(${w3})`), te2("filter", n)] }), l3("backdrop-hue-rotate", { supportsNegative: true, themeKeys: ["--backdrop-hue-rotate", "--hue-rotate"], handleBareValue: ({ value: w3 }) => p(w3) ? `${w3}deg` : null, handle: (w3) => [k3(), te2("--tw-backdrop-hue-rotate", `hue-rotate(${w3})`), te2("-webkit-backdrop-filter", a), te2("backdrop-filter", a)] }), i("hue-rotate", () => [{ values: ["0", "15", "30", "60", "90", "180"], valueThemeKeys: ["--hue-rotate"] }]), i("backdrop-hue-rotate", () => [{ values: ["0", "15", "30", "60", "90", "180"], valueThemeKeys: ["--backdrop-hue-rotate", "--hue-rotate"] }]), l3("invert", { themeKeys: ["--invert"], handleBareValue: ({ value: w3 }) => p(w3) ? `${w3}%` : null, defaultValue: "100%", handle: (w3) => [u2(), te2("--tw-invert", `invert(${w3})`), te2("filter", n)] }), l3("backdrop-invert", { themeKeys: ["--backdrop-invert", "--invert"], handleBareValue: ({ value: w3 }) => p(w3) ? `${w3}%` : null, defaultValue: "100%", handle: (w3) => [k3(), te2("--tw-backdrop-invert", `invert(${w3})`), te2("-webkit-backdrop-filter", a), te2("backdrop-filter", a)] }), i("invert", () => [{ values: ["0", "25", "50", "75", "100"], valueThemeKeys: ["--invert"], hasDefaultValue: true }]), i("backdrop-invert", () => [{ values: ["0", "25", "50", "75", "100"], valueThemeKeys: ["--backdrop-invert", "--invert"], hasDefaultValue: true }]), l3("saturate", { themeKeys: ["--saturate"], handleBareValue: ({ value: w3 }) => p(w3) ? `${w3}%` : null, handle: (w3) => [u2(), te2("--tw-saturate", `saturate(${w3})`), te2("filter", n)] }), l3("backdrop-saturate", { themeKeys: ["--backdrop-saturate", "--saturate"], handleBareValue: ({ value: w3 }) => p(w3) ? `${w3}%` : null, handle: (w3) => [k3(), te2("--tw-backdrop-saturate", `saturate(${w3})`), te2("-webkit-backdrop-filter", a), te2("backdrop-filter", a)] }), i("saturate", () => [{ values: ["0", "50", "100", "150", "200"], valueThemeKeys: ["--saturate"] }]), i("backdrop-saturate", () => [{ values: ["0", "50", "100", "150", "200"], valueThemeKeys: ["--backdrop-saturate", "--saturate"] }]), l3("sepia", { themeKeys: ["--sepia"], handleBareValue: ({ value: w3 }) => p(w3) ? `${w3}%` : null, defaultValue: "100%", handle: (w3) => [u2(), te2("--tw-sepia", `sepia(${w3})`), te2("filter", n)] }), l3("backdrop-sepia", { themeKeys: ["--backdrop-sepia", "--sepia"], handleBareValue: ({ value: w3 }) => p(w3) ? `${w3}%` : null, defaultValue: "100%", handle: (w3) => [k3(), te2("--tw-backdrop-sepia", `sepia(${w3})`), te2("-webkit-backdrop-filter", a), te2("backdrop-filter", a)] }), i("sepia", () => [{ values: ["0", "50", "100"], valueThemeKeys: ["--sepia"], hasDefaultValue: true }]), i("backdrop-sepia", () => [{ values: ["0", "50", "100"], valueThemeKeys: ["--backdrop-sepia", "--sepia"], hasDefaultValue: true }]), e("drop-shadow-none", [u2, ["--tw-drop-shadow", " "], ["filter", n]]), l3("drop-shadow", { themeKeys: ["--drop-shadow"], handle: (w3) => [u2(), te2("--tw-drop-shadow", u(w3, ",").map(($3) => `drop-shadow(${$3})`).join(" ")), te2("filter", n)] }), l3("backdrop-opacity", { themeKeys: ["--backdrop-opacity", "--opacity"], handleBareValue: ({ value: w3 }) => de(w3) ? `${w3}%` : null, handle: (w3) => [k3(), te2("--tw-backdrop-opacity", `opacity(${w3})`), te2("-webkit-backdrop-filter", a), te2("backdrop-filter", a)] }), i("backdrop-opacity", () => [{ values: Array.from({ length: 21 }, (w3, $3) => `${$3 * 5}`), valueThemeKeys: ["--backdrop-opacity", "--opacity"] }]);
  }
  {
    let n = `var(--tw-ease, ${r.resolve(null, ["--default-transition-timing-function"]) ?? "ease"})`, a = `var(--tw-duration, ${r.resolve(null, ["--default-transition-duration"]) ?? "0s"})`;
    e("transition-none", [["transition-property", "none"]]), e("transition-all", [["transition-property", "all"], ["transition-timing-function", n], ["transition-duration", a]]), e("transition-colors", [["transition-property", "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to"], ["transition-timing-function", n], ["transition-duration", a]]), e("transition-opacity", [["transition-property", "opacity"], ["transition-timing-function", n], ["transition-duration", a]]), e("transition-shadow", [["transition-property", "box-shadow"], ["transition-timing-function", n], ["transition-duration", a]]), e("transition-transform", [["transition-property", "transform, translate, scale, rotate"], ["transition-timing-function", n], ["transition-duration", a]]), l3("transition", { defaultValue: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter", themeKeys: ["--transition-property"], handle: (u2) => [te2("transition-property", u2), te2("transition-timing-function", n), te2("transition-duration", a)] }), e("transition-discrete", [["transition-behavior", "allow-discrete"]]), e("transition-normal", [["transition-behavior", "normal"]]), l3("delay", { handleBareValue: ({ value: u2 }) => p(u2) ? `${u2}ms` : null, themeKeys: ["--transition-delay"], handle: (u2) => [te2("transition-delay", u2)] });
    {
      let u2 = () => De([V3("--tw-duration")]);
      e("duration-initial", [u2, ["--tw-duration", "initial"]]), t.functional("duration", (k3) => {
        if (k3.modifier || !k3.value) return;
        let w3 = null;
        if (k3.value.kind === "arbitrary" ? w3 = k3.value.value : (w3 = r.resolve(k3.value.fraction ?? k3.value.value, ["--transition-duration"]), w3 === null && p(k3.value.value) && (w3 = `${k3.value.value}ms`)), w3 !== null) return [u2(), te2("--tw-duration", w3), te2("transition-duration", w3)];
      });
    }
    i("delay", () => [{ values: ["75", "100", "150", "200", "300", "500", "700", "1000"], valueThemeKeys: ["--transition-delay"] }]), i("duration", () => [{ values: ["75", "100", "150", "200", "300", "500", "700", "1000"], valueThemeKeys: ["--transition-duration"] }]);
  }
  {
    let n = () => De([V3("--tw-ease")]);
    e("ease-initial", [n, ["--tw-ease", "initial"]]), e("ease-linear", [n, ["--tw-ease", "linear"], ["transition-timing-function", "linear"]]), l3("ease", { themeKeys: ["--ease"], handle: (a) => [n(), te2("--tw-ease", a), te2("transition-timing-function", a)] });
  }
  e("will-change-auto", [["will-change", "auto"]]), e("will-change-scroll", [["will-change", "scroll-position"]]), e("will-change-contents", [["will-change", "contents"]]), e("will-change-transform", [["will-change", "transform"]]), l3("will-change", { themeKeys: [], handle: (n) => [te2("will-change", n)] }), e("content-none", [["--tw-content", "none"], ["content", "none"]]), l3("content", { themeKeys: [], handle: (n) => [De([V3("--tw-content", '""')]), te2("--tw-content", n), te2("content", "var(--tw-content)")] });
  {
    let n = "var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,)", a = () => De([V3("--tw-contain-size"), V3("--tw-contain-layout"), V3("--tw-contain-paint"), V3("--tw-contain-style")]);
    e("contain-none", [["contain", "none"]]), e("contain-content", [["contain", "content"]]), e("contain-strict", [["contain", "strict"]]), e("contain-size", [a, ["--tw-contain-size", "size"], ["contain", n]]), e("contain-inline-size", [a, ["--tw-contain-size", "inline-size"], ["contain", n]]), e("contain-layout", [a, ["--tw-contain-layout", "layout"], ["contain", n]]), e("contain-paint", [a, ["--tw-contain-paint", "paint"], ["contain", n]]), e("contain-style", [a, ["--tw-contain-style", "style"], ["contain", n]]), l3("contain", { themeKeys: [], handle: (u2) => [te2("contain", u2)] });
  }
  e("forced-color-adjust-none", [["forced-color-adjust", "none"]]), e("forced-color-adjust-auto", [["forced-color-adjust", "auto"]]), e("leading-none", [() => De([V3("--tw-leading")]), ["--tw-leading", "1"], ["line-height", "1"]]), s2("leading", ["--leading", "--spacing"], (n) => [De([V3("--tw-leading")]), te2("--tw-leading", n), te2("line-height", n)]), l3("tracking", { supportsNegative: true, themeKeys: ["--tracking"], handle: (n) => [De([V3("--tw-tracking")]), te2("--tw-tracking", n), te2("letter-spacing", n)] }), e("antialiased", [["-webkit-font-smoothing", "antialiased"], ["-moz-osx-font-smoothing", "grayscale"]]), e("subpixel-antialiased", [["-webkit-font-smoothing", "auto"], ["-moz-osx-font-smoothing", "auto"]]);
  {
    let n = "var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,)", a = () => De([V3("--tw-ordinal"), V3("--tw-slashed-zero"), V3("--tw-numeric-figure"), V3("--tw-numeric-spacing"), V3("--tw-numeric-fraction")]);
    e("normal-nums", [["font-variant-numeric", "normal"]]), e("ordinal", [a, ["--tw-ordinal", "ordinal"], ["font-variant-numeric", n]]), e("slashed-zero", [a, ["--tw-slashed-zero", "slashed-zero"], ["font-variant-numeric", n]]), e("lining-nums", [a, ["--tw-numeric-figure", "lining-nums"], ["font-variant-numeric", n]]), e("oldstyle-nums", [a, ["--tw-numeric-figure", "oldstyle-nums"], ["font-variant-numeric", n]]), e("proportional-nums", [a, ["--tw-numeric-spacing", "proportional-nums"], ["font-variant-numeric", n]]), e("tabular-nums", [a, ["--tw-numeric-spacing", "tabular-nums"], ["font-variant-numeric", n]]), e("diagonal-fractions", [a, ["--tw-numeric-fraction", "diagonal-fractions"], ["font-variant-numeric", n]]), e("stacked-fractions", [a, ["--tw-numeric-fraction", "stacked-fractions"], ["font-variant-numeric", n]]);
  }
  {
    let n = () => De([V3("--tw-outline-style", "solid")]);
    t.static("outline-hidden", () => [te2("--tw-outline-style", "none"), te2("outline-style", "none"), V2("@media", "(forced-colors: active)", [te2("outline", "2px solid transparent"), te2("outline-offset", "2px")])]), e("outline-none", [["--tw-outline-style", "none"], ["outline-style", "none"]]), e("outline-solid", [["--tw-outline-style", "solid"], ["outline-style", "solid"]]), e("outline-dashed", [["--tw-outline-style", "dashed"], ["outline-style", "dashed"]]), e("outline-dotted", [["--tw-outline-style", "dotted"], ["outline-style", "dotted"]]), e("outline-double", [["--tw-outline-style", "double"], ["outline-style", "double"]]), t.functional("outline", (a) => {
      if (a.value === null) {
        if (a.modifier) return;
        let u2 = r.get(["--default-outline-width"]) ?? "1px";
        return [n(), te2("outline-style", "var(--tw-outline-style)"), te2("outline-width", u2)];
      }
      if (a.value.kind === "arbitrary") {
        let u2 = a.value.value;
        switch (a.value.dataType ?? pe(u2, ["color", "length", "number", "percentage"])) {
          case "length":
          case "number":
          case "percentage":
            return a.modifier ? void 0 : [n(), te2("outline-style", "var(--tw-outline-style)"), te2("outline-width", u2)];
          default:
            return u2 = L3(u2, a.modifier, r), u2 === null ? void 0 : [te2("outline-color", u2)];
        }
      }
      {
        let u2 = W3(a, r, ["--outline-color", "--color"]);
        if (u2) return [te2("outline-color", u2)];
      }
      {
        if (a.modifier) return;
        let u2 = r.resolve(a.value.value, ["--outline-width"]);
        if (u2) return [n(), te2("outline-style", "var(--tw-outline-style)"), te2("outline-width", u2)];
        if (p(a.value.value)) return [n(), te2("outline-style", "var(--tw-outline-style)"), te2("outline-width", `${a.value.value}px`)];
      }
    }), i("outline", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--outline-color", "--color"], modifiers: Array.from({ length: 21 }, (a, u2) => `${u2 * 5}`), hasDefaultValue: true }, { values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--outline-width"] }]), l3("outline-offset", { supportsNegative: true, themeKeys: ["--outline-offset"], handleBareValue: ({ value: a }) => p(a) ? `${a}px` : null, handle: (a) => [te2("outline-offset", a)] }), i("outline-offset", () => [{ supportsNegative: true, values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--outline-offset"] }]);
  }
  l3("opacity", { themeKeys: ["--opacity"], handleBareValue: ({ value: n }) => de(n) ? `${n}%` : null, handle: (n) => [te2("opacity", n)] }), i("opacity", () => [{ values: Array.from({ length: 21 }, (n, a) => `${a * 5}`), valueThemeKeys: ["--opacity"] }]), e("underline-offset-auto", [["text-underline-offset", "auto"]]), l3("underline-offset", { supportsNegative: true, themeKeys: ["--text-underline-offset"], handleBareValue: ({ value: n }) => p(n) ? `${n}px` : null, handle: (n) => [te2("text-underline-offset", n)] }), i("underline-offset", () => [{ supportsNegative: true, values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--text-underline-offset"] }]), t.functional("text", (n) => {
    if (n.value) {
      if (n.value.kind === "arbitrary") {
        let a = n.value.value;
        switch (n.value.dataType ?? pe(a, ["color", "length", "percentage", "absolute-size", "relative-size"])) {
          case "size":
          case "length":
          case "percentage":
          case "absolute-size":
          case "relative-size": {
            if (n.modifier) {
              let k3 = n.modifier.kind === "arbitrary" ? n.modifier.value : r.resolve(n.modifier.value, ["--leading"]);
              if (!k3 && ue(n.modifier.value)) {
                let w3 = r.resolve(null, ["--spacing"]);
                if (!w3) return null;
                k3 = `calc(${w3} * ${n.modifier.value})`;
              }
              return !k3 && n.modifier.value === "none" && (k3 = "1"), k3 ? [te2("font-size", a), te2("line-height", k3)] : null;
            }
            return [te2("font-size", a)];
          }
          default:
            return a = L3(a, n.modifier, r), a === null ? void 0 : [te2("color", a)];
        }
      }
      {
        let a = W3(n, r, ["--text-color", "--color"]);
        if (a) return [te2("color", a)];
      }
      {
        let a = r.resolveWith(n.value.value, ["--text"], ["--line-height", "--letter-spacing", "--font-weight"]);
        if (a) {
          let [u2, k3 = {}] = Array.isArray(a) ? a : [a];
          if (n.modifier) {
            let w3 = n.modifier.kind === "arbitrary" ? n.modifier.value : r.resolve(n.modifier.value, ["--leading"]);
            if (!w3 && ue(n.modifier.value)) {
              let E3 = r.resolve(null, ["--spacing"]);
              if (!E3) return null;
              w3 = `calc(${E3} * ${n.modifier.value})`;
            }
            if (!w3 && n.modifier.value === "none" && (w3 = "1"), !w3) return null;
            let $3 = [te2("font-size", u2)];
            return w3 && $3.push(te2("line-height", w3)), $3;
          }
          return typeof k3 == "string" ? [te2("font-size", u2), te2("line-height", k3)] : [te2("font-size", u2), te2("line-height", k3["--line-height"] ? `var(--tw-leading, ${k3["--line-height"]})` : void 0), te2("letter-spacing", k3["--letter-spacing"] ? `var(--tw-tracking, ${k3["--letter-spacing"]})` : void 0), te2("font-weight", k3["--font-weight"] ? `var(--tw-font-weight, ${k3["--font-weight"]})` : void 0)];
        }
      }
    }
  }), i("text", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--text-color", "--color"], modifiers: Array.from({ length: 21 }, (n, a) => `${a * 5}`) }, { values: [], valueThemeKeys: ["--text"], modifiers: [], modifierThemeKeys: ["--leading"] }]);
  {
    let w3 = function(C3) {
      return `var(--tw-ring-inset,) 0 0 0 calc(${C3} + var(--tw-ring-offset-width)) var(--tw-ring-color, ${k3})`;
    }, $3 = function(C3) {
      return `inset 0 0 0 ${C3} var(--tw-inset-ring-color, currentColor)`;
    };
    var R3 = w3, j3 = $3;
    let n = ["var(--tw-inset-shadow)", "var(--tw-inset-ring-shadow)", "var(--tw-ring-offset-shadow)", "var(--tw-ring-shadow)", "var(--tw-shadow)"].join(", "), a = "0 0 #0000", u2 = () => De([V3("--tw-shadow", a), V3("--tw-shadow-color"), V3("--tw-inset-shadow", a), V3("--tw-inset-shadow-color"), V3("--tw-ring-color"), V3("--tw-ring-shadow", a), V3("--tw-inset-ring-color"), V3("--tw-inset-ring-shadow", a), V3("--tw-ring-inset"), V3("--tw-ring-offset-width", "0px", "<length>"), V3("--tw-ring-offset-color", "#fff"), V3("--tw-ring-offset-shadow", a)]);
    e("shadow-initial", [u2, ["--tw-shadow-color", "initial"]]), t.functional("shadow", (C3) => {
      if (!C3.value) {
        let x = r.get(["--shadow"]);
        return x === null ? void 0 : [u2(), te2("--tw-shadow", re3(x, (U3) => `var(--tw-shadow-color, ${U3})`)), te2("box-shadow", n)];
      }
      if (C3.value.kind === "arbitrary") {
        let x = C3.value.value;
        switch (C3.value.dataType ?? pe(x, ["color"])) {
          case "color":
            return x = L3(x, C3.modifier, r), x === null ? void 0 : [u2(), te2("--tw-shadow-color", x)];
          default:
            return [u2(), te2("--tw-shadow", re3(x, (be) => `var(--tw-shadow-color, ${be})`)), te2("box-shadow", n)];
        }
      }
      switch (C3.value.value) {
        case "none":
          return C3.modifier ? void 0 : [u2(), te2("--tw-shadow", a), te2("box-shadow", n)];
      }
      {
        let x = r.get([`--shadow-${C3.value.value}`]);
        if (x) return C3.modifier ? void 0 : [u2(), te2("--tw-shadow", re3(x, (U3) => `var(--tw-shadow-color, ${U3})`)), te2("box-shadow", n)];
      }
      {
        let x = W3(C3, r, ["--box-shadow-color", "--color"]);
        if (x) return [u2(), te2("--tw-shadow-color", x)];
      }
    }), i("shadow", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--box-shadow-color", "--color"], modifiers: Array.from({ length: 21 }, (C3, x) => `${x * 5}`) }, { values: ["none"], valueThemeKeys: ["--shadow"], hasDefaultValue: true }]), e("inset-shadow-initial", [u2, ["--tw-inset-shadow-color", "initial"]]), t.functional("inset-shadow", (C3) => {
      if (!C3.value) {
        let x = r.get(["--inset-shadow"]);
        return x === null ? void 0 : [u2(), te2("--tw-inset-shadow", re3(x, (U3) => `var(--tw-inset-shadow-color, ${U3})`)), te2("box-shadow", n)];
      }
      if (C3.value.kind === "arbitrary") {
        let x = C3.value.value;
        switch (C3.value.dataType ?? pe(x, ["color"])) {
          case "color":
            return x = L3(x, C3.modifier, r), x === null ? void 0 : [u2(), te2("--tw-inset-shadow-color", x)];
          default:
            return [u2(), te2("--tw-inset-shadow", `inset ${re3(x, (be) => `var(--tw-inset-shadow-color, ${be})`)}`), te2("box-shadow", n)];
        }
      }
      switch (C3.value.value) {
        case "none":
          return C3.modifier ? void 0 : [u2(), te2("--tw-inset-shadow", a), te2("box-shadow", n)];
      }
      {
        let x = r.get([`--inset-shadow-${C3.value.value}`]);
        if (x) return C3.modifier ? void 0 : [u2(), te2("--tw-inset-shadow", re3(x, (U3) => `var(--tw-inset-shadow-color, ${U3})`)), te2("box-shadow", n)];
      }
      {
        let x = W3(C3, r, ["--box-shadow-color", "--color"]);
        if (x) return [u2(), te2("--tw-inset-shadow-color", x)];
      }
    }), i("inset-shadow", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--box-shadow-color", "--color"], modifiers: Array.from({ length: 21 }, (C3, x) => `${x * 5}`) }, { values: [], valueThemeKeys: ["--inset-shadow"], hasDefaultValue: true }]), e("ring-inset", [u2, ["--tw-ring-inset", "inset"]]);
    let k3 = r.get(["--default-ring-color"]) ?? "currentColor";
    t.functional("ring", (C3) => {
      if (!C3.value) {
        if (C3.modifier) return;
        let x = r.get(["--default-ring-width"]) ?? "1px";
        return [u2(), te2("--tw-ring-shadow", w3(x)), te2("box-shadow", n)];
      }
      if (C3.value.kind === "arbitrary") {
        let x = C3.value.value;
        switch (C3.value.dataType ?? pe(x, ["color", "length"])) {
          case "length":
            return C3.modifier ? void 0 : [u2(), te2("--tw-ring-shadow", w3(x)), te2("box-shadow", n)];
          default:
            return x = L3(x, C3.modifier, r), x === null ? void 0 : [te2("--tw-ring-color", x)];
        }
      }
      {
        let x = W3(C3, r, ["--ring-color", "--color"]);
        if (x) return [te2("--tw-ring-color", x)];
      }
      {
        if (C3.modifier) return;
        let x = r.resolve(C3.value.value, ["--ring-width"]);
        if (x === null && p(C3.value.value) && (x = `${C3.value.value}px`), x) return [u2(), te2("--tw-ring-shadow", w3(x)), te2("box-shadow", n)];
      }
    }), i("ring", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--ring-color", "--color"], modifiers: Array.from({ length: 21 }, (C3, x) => `${x * 5}`) }, { values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--ring-width"], hasDefaultValue: true }]), t.functional("inset-ring", (C3) => {
      if (!C3.value) return C3.modifier ? void 0 : [u2(), te2("--tw-inset-ring-shadow", $3("1px")), te2("box-shadow", n)];
      if (C3.value.kind === "arbitrary") {
        let x = C3.value.value;
        switch (C3.value.dataType ?? pe(x, ["color", "length"])) {
          case "length":
            return C3.modifier ? void 0 : [u2(), te2("--tw-inset-ring-shadow", $3(x)), te2("box-shadow", n)];
          default:
            return x = L3(x, C3.modifier, r), x === null ? void 0 : [te2("--tw-inset-ring-color", x)];
        }
      }
      {
        let x = W3(C3, r, ["--ring-color", "--color"]);
        if (x) return [te2("--tw-inset-ring-color", x)];
      }
      {
        if (C3.modifier) return;
        let x = r.resolve(C3.value.value, ["--ring-width"]);
        if (x === null && p(C3.value.value) && (x = `${C3.value.value}px`), x) return [u2(), te2("--tw-inset-ring-shadow", $3(x)), te2("box-shadow", n)];
      }
    }), i("inset-ring", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--ring-color", "--color"], modifiers: Array.from({ length: 21 }, (C3, x) => `${x * 5}`) }, { values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--ring-width"], hasDefaultValue: true }]);
    let E3 = "var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)";
    t.functional("ring-offset", (C3) => {
      if (C3.value) {
        if (C3.value.kind === "arbitrary") {
          let x = C3.value.value;
          switch (C3.value.dataType ?? pe(x, ["color", "length"])) {
            case "length":
              return C3.modifier ? void 0 : [te2("--tw-ring-offset-width", x), te2("--tw-ring-offset-shadow", E3)];
            default:
              return x = L3(x, C3.modifier, r), x === null ? void 0 : [te2("--tw-ring-offset-color", x)];
          }
        }
        {
          let x = r.resolve(C3.value.value, ["--ring-offset-width"]);
          if (x) return C3.modifier ? void 0 : [te2("--tw-ring-offset-width", x), te2("--tw-ring-offset-shadow", E3)];
          if (p(C3.value.value)) return C3.modifier ? void 0 : [te2("--tw-ring-offset-width", `${C3.value.value}px`), te2("--tw-ring-offset-shadow", E3)];
        }
        {
          let x = W3(C3, r, ["--ring-offset-color", "--color"]);
          if (x) return [te2("--tw-ring-offset-color", x)];
        }
      }
    });
  }
  return i("ring-offset", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--ring-offset-color", "--color"], modifiers: Array.from({ length: 21 }, (n, a) => `${a * 5}`) }, { values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--ring-offset-width"] }]), t.functional("@container", (n) => {
    let a = null;
    if (n.value === null ? a = "inline-size" : n.value.kind === "arbitrary" ? a = n.value.value : n.value.kind === "named" && n.value.value === "normal" && (a = "normal"), a !== null) return n.modifier ? [te2("container-type", a), te2("container-name", n.modifier.value)] : [te2("container-type", a)];
  }), i("@container", () => [{ values: ["normal"], valueThemeKeys: [], hasDefaultValue: true }]), t;
}
function it(r) {
  let t = r.params;
  return er.test(t) ? (i) => {
    let e = /* @__PURE__ */ new Set(), l3 = /* @__PURE__ */ new Set();
    w2(r.nodes, (f2) => {
      if (f2.kind !== "declaration" || !f2.value || !f2.value.includes("--value(") && !f2.value.includes("--modifier(")) return;
      let s2 = X2(f2.value);
      C2(s2, (p2) => {
        if (p2.kind !== "function" || p2.value !== "--value" && p2.value !== "--modifier") return;
        let g2 = u(ue2(p2.nodes), ",");
        for (let [c, d2] of g2.entries()) d2 = d2.replace(/\\\*/g, "*"), d2 = d2.replace(/--(.*?)\s--(.*?)/g, "--$1-*--$2"), d2 = d2.replace(/\s+/g, ""), d2 = d2.replace(/(-\*){2,}/g, "-*"), d2[0] === "-" && d2[1] === "-" && !d2.includes("-*") && (d2 += "-*"), g2[c] = d2;
        p2.nodes = X2(g2.join(","));
        for (let c of p2.nodes) if (c.kind === "word" && c.value[0] === "-" && c.value[1] === "-") {
          let d2 = c.value.replace(/-\*.*$/g, "");
          p2.value === "--value" ? e.add(d2) : p2.value === "--modifier" && l3.add(d2);
        }
      }), f2.value = ue2(s2);
    }), i.utilities.functional(t.slice(0, -2), (f2) => {
      let s2 = structuredClone(r), p2 = f2.value, g2 = f2.modifier;
      if (p2 === null) return;
      let c = false, d2 = false, h2 = false, m = false, v2 = /* @__PURE__ */ new Map(), y3 = false;
      if (w2([s2], (b3, { parent: A3, replaceWith: T3 }) => {
        if ((A3 == null ? void 0 : A3.kind) !== "rule" && (A3 == null ? void 0 : A3.kind) !== "at-rule" || b3.kind !== "declaration" || !b3.value) return;
        let N3 = X2(b3.value);
        (C2(N3, (R3, { replaceWith: j3 }) => {
          if (R3.kind === "function") {
            if (R3.value === "--value") {
              c = true;
              let n = rt(p2, R3, i);
              return n ? (d2 = true, n.ratio ? y3 = true : v2.set(b3, A3), j3(n.nodes), 1) : (c || (c = false), T3([]), 2);
            } else if (R3.value === "--modifier") {
              if (g2 === null) return T3([]), 1;
              h2 = true;
              let n = rt(g2, R3, i);
              return n ? (m = true, j3(n.nodes), 1) : (h2 || (h2 = false), T3([]), 2);
            }
          }
        }) ?? 0) === 0 && (b3.value = ue2(N3));
      }), c && !d2 || h2 && !m || y3 && m || g2 && !y3 && !m) return null;
      if (y3) for (let [b3, A3] of v2) {
        let T3 = A3.nodes.indexOf(b3);
        T3 !== -1 && A3.nodes.splice(T3, 1);
      }
      return s2.nodes;
    }), i.utilities.suggest(t.slice(0, -2), () => [{ values: i.theme.keysInNamespaces(e).map((f2) => f2.replaceAll("_", ".")), modifiers: i.theme.keysInNamespaces(l3).map((f2) => f2.replaceAll("_", ".")) }]);
  } : Qt.test(t) ? (i) => {
    i.utilities.static(t, () => structuredClone(r.nodes));
  } : null;
}
function rt(r, t, i) {
  for (let e of t.nodes) if (r.kind === "named" && e.kind === "word" && e.value[0] === "-" && e.value[1] === "-") {
    let l3 = e.value;
    if (l3.endsWith("-*")) {
      l3 = l3.slice(0, -2);
      let f2 = i.theme.resolve(r.value, [l3]);
      if (f2) return { nodes: X2(f2) };
    } else {
      let f2 = l3.split("-*");
      if (f2.length <= 1) continue;
      let s2 = [f2.shift()], p2 = i.theme.resolveWith(r.value, s2, f2);
      if (p2) {
        let [, g2 = {}] = p2;
        {
          let c = g2[f2.pop()];
          if (c) return { nodes: X2(c) };
        }
      }
    }
  } else if (r.kind === "named" && e.kind === "word") {
    if (e.value !== "number" && e.value !== "integer" && e.value !== "ratio" && e.value !== "percentage") continue;
    let l3 = e.value === "ratio" && "fraction" in r ? r.fraction : r.value;
    if (!l3) continue;
    let f2 = pe(l3, [e.value]);
    if (f2 === null) continue;
    if (f2 === "ratio") {
      let [s2, p2] = u(l3, "/");
      if (!p(s2) || !p(p2)) continue;
    } else {
      if (f2 === "number" && !ue(l3)) continue;
      if (f2 === "percentage" && !p(l3.slice(0, -1))) continue;
    }
    return { nodes: X2(l3), ratio: f2 === "ratio" };
  } else if (r.kind === "arbitrary" && e.kind === "word" && e.value[0] === "[" && e.value[e.value.length - 1] === "]") {
    let l3 = e.value.slice(1, -1);
    if (l3 === "*") return { nodes: X2(r.value) };
    if ("dataType" in r && r.dataType && r.dataType !== l3) continue;
    if ("dataType" in r && r.dataType) return { nodes: X2(r.value) };
    if (pe(r.value, [l3]) !== null) return { nodes: X2(r.value) };
  }
}
var je = { "--alpha": tr, "--spacing": rr, "--theme": nr, theme: at };
function tr(r, t, ...i) {
  let [e, l3] = u(t, "/").map((f2) => f2.trim());
  if (!e || !l3) throw new Error(`The --alpha(…) function requires a color and an alpha value, e.g.: \`--alpha(${e || "var(--my-color)"} / ${l3 || "50%"})\``);
  if (i.length > 0) throw new Error(`The --alpha(…) function only accepts one argument, e.g.: \`--alpha(${e || "var(--my-color)"} / ${l3 || "50%"})\``);
  return G3(e, l3);
}
function rr(r, t, ...i) {
  if (!t) throw new Error("The --spacing(…) function requires an argument, but received none.");
  if (i.length > 0) throw new Error(`The --spacing(…) function only accepts a single argument, but received ${i.length + 1}.`);
  let e = r.theme.resolve(null, ["--spacing"]);
  if (!e) throw new Error("The --spacing(…) function requires that the `--spacing` theme variable exists, but it was not found.");
  return `calc(${e} * ${t})`;
}
function nr(r, t, ...i) {
  if (!t.startsWith("--")) throw new Error("The --theme(…) function can only be used with CSS variables from your theme.");
  return at(r, t, ...i);
}
function at(r, t, ...i) {
  t = ir(t);
  let e = r.resolveThemeValue(t);
  if (!e && i.length > 0) return i.join(", ");
  if (!e) throw new Error(`Could not resolve value for theme function: \`theme(${t})\`. Consider checking if the path is correct or provide a fallback value to silence this error.`);
  return e;
}
var ot = new RegExp(Object.keys(je).map((r) => `${r}\\(`).join("|"));
function ae2(r, t) {
  let i = 0;
  return w2(r, (e) => {
    if (e.kind === "declaration" && e.value && ot.test(e.value)) {
      i |= 8, e.value = lt(e.value, t);
      return;
    }
    e.kind === "at-rule" && (e.name === "@media" || e.name === "@custom-media" || e.name === "@container" || e.name === "@supports") && ot.test(e.params) && (i |= 8, e.params = lt(e.params, t));
  }), i;
}
function lt(r, t) {
  let i = X2(r);
  return C2(i, (e, { replaceWith: l3 }) => {
    if (e.kind === "function" && e.value in je) {
      let f2 = u(ue2(e.nodes).trim(), ",").map((p2) => p2.trim()), s2 = je[e.value](t, ...f2);
      return l3(X2(s2));
    }
  }), ue2(i);
}
function ir(r) {
  if (r[0] !== "'" && r[0] !== '"') return r;
  let t = "", i = r[0];
  for (let e = 1; e < r.length - 1; e++) {
    let l3 = r[e], f2 = r[e + 1];
    l3 === "\\" && (f2 === i || f2 === "\\") ? (t += f2, e++) : t += l3;
  }
  return t;
}
function xe2(r, t) {
  let i = r.length, e = t.length, l3 = i < e ? i : e;
  for (let f2 = 0; f2 < l3; f2++) {
    let s2 = r.charCodeAt(f2), p2 = t.charCodeAt(f2);
    if (s2 >= 48 && s2 <= 57 && p2 >= 48 && p2 <= 57) {
      let g2 = f2, c = f2 + 1, d2 = f2, h2 = f2 + 1;
      for (s2 = r.charCodeAt(c); s2 >= 48 && s2 <= 57; ) s2 = r.charCodeAt(++c);
      for (p2 = t.charCodeAt(h2); p2 >= 48 && p2 <= 57; ) p2 = t.charCodeAt(++h2);
      let m = r.slice(g2, c), v2 = t.slice(d2, h2), y3 = Number(m) - Number(v2);
      if (y3) return y3;
      if (m < v2) return -1;
      if (m > v2) return 1;
      continue;
    }
    if (s2 !== p2) return s2 - p2;
  }
  return r.length - t.length;
}
var or = /^\d+\/\d+$/;
function st(r) {
  let t = [];
  for (let e of r.utilities.keys("static")) t.push({ name: e, utility: e, fraction: false, modifiers: [] });
  for (let e of r.utilities.keys("functional")) {
    let l3 = r.utilities.getCompletions(e);
    for (let f2 of l3) for (let s2 of f2.values) {
      let p2 = s2 !== null && or.test(s2), g2 = s2 === null ? e : `${e}-${s2}`;
      t.push({ name: g2, utility: e, fraction: p2, modifiers: f2.modifiers }), f2.supportsNegative && t.push({ name: `-${g2}`, utility: `-${e}`, fraction: p2, modifiers: f2.modifiers });
    }
  }
  return t.length === 0 ? [] : (t.sort((e, l3) => xe2(e.name, l3.name)), lr(t));
}
function lr(r) {
  let t = [], i = null, e = /* @__PURE__ */ new Map(), l3 = new N2(() => []);
  for (let s2 of r) {
    let { utility: p2, fraction: g2 } = s2;
    i || (i = { utility: p2, items: [] }, e.set(p2, i)), p2 !== i.utility && (t.push(i), i = { utility: p2, items: [] }, e.set(p2, i)), g2 ? l3.get(p2).push(s2) : i.items.push(s2);
  }
  i && t[t.length - 1] !== i && t.push(i);
  for (let [s2, p2] of l3) {
    let g2 = e.get(s2);
    g2 && g2.items.push(...p2);
  }
  let f2 = [];
  for (let s2 of t) for (let p2 of s2.items) f2.push([p2.name, { modifiers: p2.modifiers }]);
  return f2;
}
function ut(r) {
  let t = [];
  for (let [e, l3] of r.variants.entries()) {
    let p2 = function({ value: g2, modifier: c } = {}) {
      let d2 = e;
      g2 && (d2 += f2 ? `-${g2}` : g2), c && (d2 += `/${c}`);
      let h2 = r.parseVariant(d2);
      if (!h2) return [];
      let m = me(".__placeholder__", []);
      if (se2(m, h2, r.variants) === null) return [];
      let v2 = [];
      return Z2(m.nodes, (y3, { path: b3 }) => {
        if (y3.kind !== "rule" && y3.kind !== "at-rule" || y3.nodes.length > 0) return;
        b3.sort((N3, K3) => {
          let R3 = N3.kind === "at-rule", j3 = K3.kind === "at-rule";
          return R3 && !j3 ? -1 : !R3 && j3 ? 1 : 0;
        });
        let A3 = b3.flatMap((N3) => N3.kind === "rule" ? N3.selector === "&" ? [] : [N3.selector] : N3.kind === "at-rule" ? [`${N3.name} ${N3.params}`] : []), T3 = "";
        for (let N3 = A3.length - 1; N3 >= 0; N3--) T3 = T3 === "" ? A3[N3] : `${A3[N3]} { ${T3} }`;
        v2.push(T3);
      }), v2;
    };
    var i = p2;
    if (l3.kind === "arbitrary") continue;
    let f2 = e !== "@", s2 = r.variants.getCompletions(e);
    switch (l3.kind) {
      case "static": {
        t.push({ name: e, values: s2, isArbitrary: false, hasDash: f2, selectors: p2 });
        break;
      }
      case "functional": {
        t.push({ name: e, values: s2, isArbitrary: true, hasDash: f2, selectors: p2 });
        break;
      }
      case "compound": {
        t.push({ name: e, values: s2, isArbitrary: true, hasDash: f2, selectors: p2 });
        break;
      }
    }
  }
  return t;
}
function ft(r, t) {
  var _a2;
  let { astNodes: i, nodeSorting: e } = X3(Array.from(t), r), l3 = new Map(t.map((s2) => [s2, null])), f2 = 0n;
  for (let s2 of i) {
    let p2 = (_a2 = e.get(s2)) == null ? void 0 : _a2.candidate;
    p2 && l3.set(p2, l3.get(p2) ?? f2++);
  }
  return t.map((s2) => [s2, l3.get(s2) ?? null]);
}
var Ae2 = /^@?[a-zA-Z0-9_-]*$/;
var Pe2 = class {
  constructor() {
    __publicField(this, "compareFns", /* @__PURE__ */ new Map());
    __publicField(this, "variants", /* @__PURE__ */ new Map());
    __publicField(this, "completions", /* @__PURE__ */ new Map());
    __publicField(this, "groupOrder", null);
    __publicField(this, "lastOrder", 0);
  }
  static(t, i, { compounds: e, order: l3 } = {}) {
    this.set(t, { kind: "static", applyFn: i, compoundsWith: 0, compounds: e ?? 2, order: l3 });
  }
  fromAst(t, i) {
    let e = [];
    w2(i, (l3) => {
      l3.kind === "rule" ? e.push(l3.selector) : l3.kind === "at-rule" && l3.name !== "@slot" && e.push(`${l3.name} ${l3.params}`);
    }), this.static(t, (l3) => {
      let f2 = structuredClone(i);
      De2(f2, l3.nodes), l3.nodes = f2;
    }, { compounds: ne3(e) });
  }
  functional(t, i, { compounds: e, order: l3 } = {}) {
    this.set(t, { kind: "functional", applyFn: i, compoundsWith: 0, compounds: e ?? 2, order: l3 });
  }
  compound(t, i, e, { compounds: l3, order: f2 } = {}) {
    this.set(t, { kind: "compound", applyFn: e, compoundsWith: i, compounds: l3 ?? 2, order: f2 });
  }
  group(t, i) {
    this.groupOrder = this.nextOrder(), i && this.compareFns.set(this.groupOrder, i), t(), this.groupOrder = null;
  }
  has(t) {
    return this.variants.has(t);
  }
  get(t) {
    return this.variants.get(t);
  }
  kind(t) {
    var _a2;
    return (_a2 = this.variants.get(t)) == null ? void 0 : _a2.kind;
  }
  compoundsWith(t, i) {
    let e = this.variants.get(t), l3 = typeof i == "string" ? this.variants.get(i) : i.kind === "arbitrary" ? { compounds: ne3([i.selector]) } : this.variants.get(i.root);
    return !(!e || !l3 || e.kind !== "compound" || l3.compounds === 0 || e.compoundsWith === 0 || (e.compoundsWith & l3.compounds) === 0);
  }
  suggest(t, i) {
    this.completions.set(t, i);
  }
  getCompletions(t) {
    var _a2;
    return ((_a2 = this.completions.get(t)) == null ? void 0 : _a2()) ?? [];
  }
  compare(t, i) {
    if (t === i) return 0;
    if (t === null) return -1;
    if (i === null) return 1;
    if (t.kind === "arbitrary" && i.kind === "arbitrary") return t.selector < i.selector ? -1 : 1;
    if (t.kind === "arbitrary") return 1;
    if (i.kind === "arbitrary") return -1;
    let e = this.variants.get(t.root).order, l3 = this.variants.get(i.root).order, f2 = e - l3;
    if (f2 !== 0) return f2;
    if (t.kind === "compound" && i.kind === "compound") {
      let c = this.compare(t.variant, i.variant);
      return c !== 0 ? c : t.modifier && i.modifier ? t.modifier.value < i.modifier.value ? -1 : 1 : t.modifier ? 1 : i.modifier ? -1 : 0;
    }
    let s2 = this.compareFns.get(e);
    if (s2 !== void 0) return s2(t, i);
    if (t.root !== i.root) return t.root < i.root ? -1 : 1;
    let p2 = t.value, g2 = i.value;
    return p2 === null ? -1 : g2 === null || p2.kind === "arbitrary" && g2.kind !== "arbitrary" ? 1 : p2.kind !== "arbitrary" && g2.kind === "arbitrary" || p2.value < g2.value ? -1 : 1;
  }
  keys() {
    return this.variants.keys();
  }
  entries() {
    return this.variants.entries();
  }
  set(t, { kind: i, applyFn: e, compounds: l3, compoundsWith: f2, order: s2 }) {
    let p2 = this.variants.get(t);
    p2 ? Object.assign(p2, { kind: i, applyFn: e, compounds: l3 }) : (s2 === void 0 && (this.lastOrder = this.nextOrder(), s2 = this.lastOrder), this.variants.set(t, { kind: i, applyFn: e, order: s2, compoundsWith: f2, compounds: l3 }));
  }
  nextOrder() {
    return this.groupOrder ?? this.lastOrder + 1;
  }
};
function ne3(r) {
  let t = 0;
  for (let i of r) {
    if (i[0] === "@") {
      if (!i.startsWith("@media") && !i.startsWith("@supports") && !i.startsWith("@container")) return 0;
      t |= 1;
      continue;
    }
    if (i.includes("::")) return 0;
    t |= 2;
  }
  return t;
}
function dt(r) {
  let t = new Pe2();
  function i(c, d2, { compounds: h2 } = {}) {
    h2 = h2 ?? ne3(d2), t.static(c, (m) => {
      m.nodes = d2.map((v2) => ee2(v2, m.nodes));
    }, { compounds: h2 });
  }
  i("*", [":is(& > *)"], { compounds: 0 }), i("**", [":is(& *)"], { compounds: 0 });
  function e(c, d2) {
    return d2.map((h2) => {
      h2 = h2.trim();
      let m = u(h2, " ");
      return m[0] === "not" ? m.slice(1).join(" ") : c === "@container" ? m[0][0] === "(" ? `not ${h2}` : m[1] === "not" ? `${m[0]} ${m.slice(2).join(" ")}` : `${m[0]} not ${m.slice(1).join(" ")}` : `not ${h2}`;
    });
  }
  let l3 = ["@media", "@supports", "@container"];
  function f2(c) {
    for (let d2 of l3) {
      if (d2 !== c.name) continue;
      let h2 = u(c.params, ",");
      return h2.length > 1 ? null : (h2 = e(c.name, h2), V2(c.name, h2.join(", ")));
    }
    return null;
  }
  function s2(c) {
    return c.includes("::") ? null : `&:not(${u(c, ",").map((h2) => (h2 = h2.replaceAll("&", "*"), h2)).join(", ")})`;
  }
  t.compound("not", 3, (c, d2) => {
    if (d2.variant.kind === "arbitrary" && d2.variant.relative || d2.modifier) return null;
    let h2 = false;
    if (w2([c], (m, { path: v2 }) => {
      if (m.kind !== "rule" && m.kind !== "at-rule") return 0;
      if (m.nodes.length > 0) return 0;
      let y3 = [], b3 = [];
      for (let T3 of v2) T3.kind === "at-rule" ? y3.push(T3) : T3.kind === "rule" && b3.push(T3);
      if (y3.length > 1) return 2;
      if (b3.length > 1) return 2;
      let A3 = [];
      for (let T3 of b3) {
        let N3 = s2(T3.selector);
        if (!N3) return h2 = false, 2;
        A3.push(me(N3, []));
      }
      for (let T3 of y3) {
        let N3 = f2(T3);
        if (!N3) return h2 = false, 2;
        A3.push(N3);
      }
      return Object.assign(c, me("&", A3)), h2 = true, 1;
    }), c.kind === "rule" && c.selector === "&" && c.nodes.length === 1 && Object.assign(c, c.nodes[0]), !h2) return null;
  }), t.suggest("not", () => Array.from(t.keys()).filter((c) => t.compoundsWith("not", c))), t.compound("group", 2, (c, d2) => {
    if (d2.variant.kind === "arbitrary" && d2.variant.relative) return null;
    let h2 = d2.modifier ? `:where(.${r.prefix ? `${r.prefix}\\:` : ""}group\\/${d2.modifier.value})` : `:where(.${r.prefix ? `${r.prefix}\\:` : ""}group)`, m = false;
    if (w2([c], (v2, { path: y3 }) => {
      if (v2.kind !== "rule") return 0;
      for (let A3 of y3.slice(0, -1)) if (A3.kind === "rule") return m = false, 2;
      let b3 = v2.selector.replaceAll("&", h2);
      u(b3, ",").length > 1 && (b3 = `:is(${b3})`), v2.selector = `&:is(${b3} *)`, m = true;
    }), !m) return null;
  }), t.suggest("group", () => Array.from(t.keys()).filter((c) => t.compoundsWith("group", c))), t.compound("peer", 2, (c, d2) => {
    if (d2.variant.kind === "arbitrary" && d2.variant.relative) return null;
    let h2 = d2.modifier ? `:where(.${r.prefix ? `${r.prefix}\\:` : ""}peer\\/${d2.modifier.value})` : `:where(.${r.prefix ? `${r.prefix}\\:` : ""}peer)`, m = false;
    if (w2([c], (v2, { path: y3 }) => {
      if (v2.kind !== "rule") return 0;
      for (let A3 of y3.slice(0, -1)) if (A3.kind === "rule") return m = false, 2;
      let b3 = v2.selector.replaceAll("&", h2);
      u(b3, ",").length > 1 && (b3 = `:is(${b3})`), v2.selector = `&:is(${b3} ~ *)`, m = true;
    }), !m) return null;
  }), t.suggest("peer", () => Array.from(t.keys()).filter((c) => t.compoundsWith("peer", c))), i("first-letter", ["&::first-letter"]), i("first-line", ["&::first-line"]), i("marker", ["& *::marker", "&::marker"]), i("selection", ["& *::selection", "&::selection"]), i("file", ["&::file-selector-button"]), i("placeholder", ["&::placeholder"]), i("backdrop", ["&::backdrop"]), false;
  {
    let c = function() {
      return De([V2("@property", "--tw-content", [te2("syntax", '"*"'), te2("initial-value", '""'), te2("inherits", "false")])]);
    };
    var p2 = c;
    t.static("before", (d2) => {
      d2.nodes = [me("&::before", [c(), te2("content", "var(--tw-content)"), ...d2.nodes])];
    }, { compounds: 0 }), t.static("after", (d2) => {
      d2.nodes = [me("&::after", [c(), te2("content", "var(--tw-content)"), ...d2.nodes])];
    }, { compounds: 0 });
  }
  i("first", ["&:first-child"]), i("last", ["&:last-child"]), i("only", ["&:only-child"]), i("odd", ["&:nth-child(odd)"]), i("even", ["&:nth-child(even)"]), i("first-of-type", ["&:first-of-type"]), i("last-of-type", ["&:last-of-type"]), i("only-of-type", ["&:only-of-type"]), i("visited", ["&:visited"]), i("target", ["&:target"]), i("open", ["&:is([open], :popover-open, :open)"]), i("default", ["&:default"]), i("checked", ["&:checked"]), i("indeterminate", ["&:indeterminate"]), i("placeholder-shown", ["&:placeholder-shown"]), i("autofill", ["&:autofill"]), i("optional", ["&:optional"]), i("required", ["&:required"]), i("valid", ["&:valid"]), i("invalid", ["&:invalid"]), false, i("in-range", ["&:in-range"]), i("out-of-range", ["&:out-of-range"]), i("read-only", ["&:read-only"]), i("empty", ["&:empty"]), i("focus-within", ["&:focus-within"]), t.static("hover", (c) => {
    c.nodes = [me("&:hover", [V2("@media", "(hover: hover)", c.nodes)])];
  }), i("focus", ["&:focus"]), i("focus-visible", ["&:focus-visible"]), i("active", ["&:active"]), i("enabled", ["&:enabled"]), i("disabled", ["&:disabled"]), i("inert", ["&:is([inert], [inert] *)"]), t.compound("in", 2, (c, d2) => {
    if (d2.modifier) return null;
    let h2 = false;
    if (w2([c], (m, { path: v2 }) => {
      if (m.kind !== "rule") return 0;
      for (let y3 of v2.slice(0, -1)) if (y3.kind === "rule") return h2 = false, 2;
      m.selector = `:where(${m.selector.replaceAll("&", "*")}) &`, h2 = true;
    }), !h2) return null;
  }), t.suggest("in", () => Array.from(t.keys()).filter((c) => t.compoundsWith("in", c))), t.compound("has", 2, (c, d2) => {
    if (d2.modifier) return null;
    let h2 = false;
    if (w2([c], (m, { path: v2 }) => {
      if (m.kind !== "rule") return 0;
      for (let y3 of v2.slice(0, -1)) if (y3.kind === "rule") return h2 = false, 2;
      m.selector = `&:has(${m.selector.replaceAll("&", "*")})`, h2 = true;
    }), !h2) return null;
  }), t.suggest("has", () => Array.from(t.keys()).filter((c) => t.compoundsWith("has", c))), t.functional("aria", (c, d2) => {
    if (!d2.value || d2.modifier) return null;
    d2.value.kind === "arbitrary" ? c.nodes = [me(`&[aria-${ct(d2.value.value)}]`, c.nodes)] : c.nodes = [me(`&[aria-${d2.value.value}="true"]`, c.nodes)];
  }), t.suggest("aria", () => ["busy", "checked", "disabled", "expanded", "hidden", "pressed", "readonly", "required", "selected"]), t.functional("data", (c, d2) => {
    if (!d2.value || d2.modifier) return null;
    c.nodes = [me(`&[data-${ct(d2.value.value)}]`, c.nodes)];
  }), t.functional("nth", (c, d2) => {
    if (!d2.value || d2.modifier || d2.value.kind === "named" && !p(d2.value.value)) return null;
    c.nodes = [me(`&:nth-child(${d2.value.value})`, c.nodes)];
  }), t.functional("nth-last", (c, d2) => {
    if (!d2.value || d2.modifier || d2.value.kind === "named" && !p(d2.value.value)) return null;
    c.nodes = [me(`&:nth-last-child(${d2.value.value})`, c.nodes)];
  }), t.functional("nth-of-type", (c, d2) => {
    if (!d2.value || d2.modifier || d2.value.kind === "named" && !p(d2.value.value)) return null;
    c.nodes = [me(`&:nth-of-type(${d2.value.value})`, c.nodes)];
  }), t.functional("nth-last-of-type", (c, d2) => {
    if (!d2.value || d2.modifier || d2.value.kind === "named" && !p(d2.value.value)) return null;
    c.nodes = [me(`&:nth-last-of-type(${d2.value.value})`, c.nodes)];
  }), t.functional("supports", (c, d2) => {
    if (!d2.value || d2.modifier) return null;
    let h2 = d2.value.value;
    if (h2 === null) return null;
    if (/^[\w-]*\s*\(/.test(h2)) {
      let m = h2.replace(/\b(and|or|not)\b/g, " $1 ");
      c.nodes = [V2("@supports", m, c.nodes)];
      return;
    }
    h2.includes(":") || (h2 = `${h2}: var(--tw)`), (h2[0] !== "(" || h2[h2.length - 1] !== ")") && (h2 = `(${h2})`), c.nodes = [V2("@supports", h2, c.nodes)];
  }, { compounds: 1 }), i("motion-safe", ["@media (prefers-reduced-motion: no-preference)"]), i("motion-reduce", ["@media (prefers-reduced-motion: reduce)"]), i("contrast-more", ["@media (prefers-contrast: more)"]), i("contrast-less", ["@media (prefers-contrast: less)"]);
  {
    let c = function(d2, h2, m, v2) {
      if (d2 === h2) return 0;
      let y3 = v2.get(d2);
      if (y3 === null) return m === "asc" ? -1 : 1;
      let b3 = v2.get(h2);
      return b3 === null ? m === "asc" ? 1 : -1 : te3(y3, b3, m);
    };
    var g2 = c;
    {
      let d2 = r.namespace("--breakpoint"), h2 = new N2((m) => {
        switch (m.kind) {
          case "static":
            return r.resolveValue(m.root, ["--breakpoint"]) ?? null;
          case "functional": {
            if (!m.value || m.modifier) return null;
            let v2 = null;
            return m.value.kind === "arbitrary" ? v2 = m.value.value : m.value.kind === "named" && (v2 = r.resolveValue(m.value.value, ["--breakpoint"])), !v2 || v2.includes("var(") ? null : v2;
          }
          case "arbitrary":
          case "compound":
            return null;
        }
      });
      t.group(() => {
        t.functional("max", (m, v2) => {
          if (v2.modifier) return null;
          let y3 = h2.get(v2);
          if (y3 === null) return null;
          m.nodes = [V2("@media", `(width < ${y3})`, m.nodes)];
        }, { compounds: 1 });
      }, (m, v2) => c(m, v2, "desc", h2)), t.suggest("max", () => Array.from(d2.keys()).filter((m) => m !== null)), t.group(() => {
        for (let [m, v2] of r.namespace("--breakpoint")) m !== null && t.static(m, (y3) => {
          y3.nodes = [V2("@media", `(width >= ${v2})`, y3.nodes)];
        }, { compounds: 1 });
        t.functional("min", (m, v2) => {
          if (v2.modifier) return null;
          let y3 = h2.get(v2);
          if (y3 === null) return null;
          m.nodes = [V2("@media", `(width >= ${y3})`, m.nodes)];
        }, { compounds: 1 });
      }, (m, v2) => c(m, v2, "asc", h2)), t.suggest("min", () => Array.from(d2.keys()).filter((m) => m !== null));
    }
    {
      let d2 = r.namespace("--container"), h2 = new N2((m) => {
        switch (m.kind) {
          case "functional": {
            if (m.value === null) return null;
            let v2 = null;
            return m.value.kind === "arbitrary" ? v2 = m.value.value : m.value.kind === "named" && (v2 = r.resolveValue(m.value.value, ["--container"])), !v2 || v2.includes("var(") ? null : v2;
          }
          case "static":
          case "arbitrary":
          case "compound":
            return null;
        }
      });
      t.group(() => {
        t.functional("@max", (m, v2) => {
          let y3 = h2.get(v2);
          if (y3 === null) return null;
          m.nodes = [V2("@container", v2.modifier ? `${v2.modifier.value} (width < ${y3})` : `(width < ${y3})`, m.nodes)];
        }, { compounds: 1 });
      }, (m, v2) => c(m, v2, "desc", h2)), t.suggest("@max", () => Array.from(d2.keys()).filter((m) => m !== null)), t.group(() => {
        t.functional("@", (m, v2) => {
          let y3 = h2.get(v2);
          if (y3 === null) return null;
          m.nodes = [V2("@container", v2.modifier ? `${v2.modifier.value} (width >= ${y3})` : `(width >= ${y3})`, m.nodes)];
        }, { compounds: 1 }), t.functional("@min", (m, v2) => {
          let y3 = h2.get(v2);
          if (y3 === null) return null;
          m.nodes = [V2("@container", v2.modifier ? `${v2.modifier.value} (width >= ${y3})` : `(width >= ${y3})`, m.nodes)];
        }, { compounds: 1 });
      }, (m, v2) => c(m, v2, "asc", h2)), t.suggest("@min", () => Array.from(d2.keys()).filter((m) => m !== null)), t.suggest("@", () => Array.from(d2.keys()).filter((m) => m !== null));
    }
  }
  return i("portrait", ["@media (orientation: portrait)"]), i("landscape", ["@media (orientation: landscape)"]), i("ltr", ['&:where(:dir(ltr), [dir="ltr"], [dir="ltr"] *)']), i("rtl", ['&:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *)']), i("dark", ["@media (prefers-color-scheme: dark)"]), i("starting", ["@starting-style"]), i("print", ["@media print"]), i("forced-colors", ["@media (forced-colors: active)"]), false, false, false, t;
}
function ct(r) {
  if (r.includes("=")) {
    let [t, ...i] = u(r, "="), e = i.join("=").trim();
    if (e[0] === "'" || e[0] === '"') return r;
    if (e.length > 1) {
      let l3 = e[e.length - 1];
      if (e[e.length - 2] === " " && (l3 === "i" || l3 === "I" || l3 === "s" || l3 === "S")) return `${t}="${e.slice(0, -2)}" ${l3}`;
    }
    return `${t}="${e}"`;
  }
  return r;
}
function De2(r, t) {
  w2(r, (i, { replaceWith: e }) => {
    if (i.kind === "at-rule" && i.name === "@slot") e(t);
    else if (i.kind === "at-rule" && (i.name === "@keyframes" || i.name === "@property")) return Object.assign(i, De([V2(i.name, i.params, i.nodes)])), 1;
  });
}
function pt(r) {
  let t = nt(r), i = dt(r), e = new N2((g2) => Qe(g2, p2)), l3 = new N2((g2) => Array.from(Xe(g2, p2))), f2 = new N2((g2) => {
    let c = mt(g2, p2);
    try {
      ae2(c.map(({ node: d2 }) => d2), p2);
    } catch {
      return [];
    }
    return c;
  }), s2 = new N2((g2) => {
    for (let c of J2(g2)) r.markUsedVariable(c);
  }), p2 = { theme: r, utilities: t, variants: i, invalidCandidates: /* @__PURE__ */ new Set(), important: false, candidatesToCss(g2) {
    let c = [];
    for (let d2 of g2) {
      let h2 = false, { astNodes: m } = X3([d2], this, { onInvalidCandidate() {
        h2 = true;
      } });
      m = Pe(m, p2), m.length === 0 || h2 ? c.push(null) : c.push(Fe(m));
    }
    return c;
  }, getClassOrder(g2) {
    return ft(this, g2);
  }, getClassList() {
    return st(this);
  }, getVariants() {
    return ut(this);
  }, parseCandidate(g2) {
    return l3.get(g2);
  }, parseVariant(g2) {
    return e.get(g2);
  }, compileAstNodes(g2) {
    return f2.get(g2);
  }, getVariantOrder() {
    let g2 = Array.from(e.values());
    g2.sort((m, v2) => this.variants.compare(m, v2));
    let c = /* @__PURE__ */ new Map(), d2, h2 = 0;
    for (let m of g2) m !== null && (d2 !== void 0 && this.variants.compare(d2, m) !== 0 && h2++, c.set(m, h2), d2 = m);
    return c;
  }, resolveThemeValue(g2) {
    let c = g2.lastIndexOf("/"), d2 = null;
    c !== -1 && (d2 = g2.slice(c + 1).trim(), g2 = g2.slice(0, c).trim());
    let h2 = r.get([g2]) ?? void 0;
    return d2 && h2 ? G3(h2, d2) : h2;
  }, trackUsedVariables(g2) {
    s2.get(g2);
  } };
  return p2;
}
var Oe = ["container-type", "pointer-events", "visibility", "position", "inset", "inset-inline", "inset-block", "inset-inline-start", "inset-inline-end", "top", "right", "bottom", "left", "isolation", "z-index", "order", "grid-column", "grid-column-start", "grid-column-end", "grid-row", "grid-row-start", "grid-row-end", "float", "clear", "--tw-container-component", "margin", "margin-inline", "margin-block", "margin-inline-start", "margin-inline-end", "margin-top", "margin-right", "margin-bottom", "margin-left", "box-sizing", "display", "field-sizing", "aspect-ratio", "height", "max-height", "min-height", "width", "max-width", "min-width", "flex", "flex-shrink", "flex-grow", "flex-basis", "table-layout", "caption-side", "border-collapse", "border-spacing", "transform-origin", "translate", "--tw-translate-x", "--tw-translate-y", "--tw-translate-z", "scale", "--tw-scale-x", "--tw-scale-y", "--tw-scale-z", "rotate", "--tw-rotate-x", "--tw-rotate-y", "--tw-rotate-z", "--tw-skew-x", "--tw-skew-y", "transform", "animation", "cursor", "touch-action", "--tw-pan-x", "--tw-pan-y", "--tw-pinch-zoom", "resize", "scroll-snap-type", "--tw-scroll-snap-strictness", "scroll-snap-align", "scroll-snap-stop", "scroll-margin", "scroll-margin-inline", "scroll-margin-block", "scroll-margin-inline-start", "scroll-margin-inline-end", "scroll-margin-top", "scroll-margin-right", "scroll-margin-bottom", "scroll-margin-left", "scroll-padding", "scroll-padding-inline", "scroll-padding-block", "scroll-padding-inline-start", "scroll-padding-inline-end", "scroll-padding-top", "scroll-padding-right", "scroll-padding-bottom", "scroll-padding-left", "list-style-position", "list-style-type", "list-style-image", "appearance", "columns", "break-before", "break-inside", "break-after", "grid-auto-columns", "grid-auto-flow", "grid-auto-rows", "grid-template-columns", "grid-template-rows", "flex-direction", "flex-wrap", "place-content", "place-items", "align-content", "align-items", "justify-content", "justify-items", "gap", "column-gap", "row-gap", "--tw-space-x-reverse", "--tw-space-y-reverse", "divide-x-width", "divide-y-width", "--tw-divide-y-reverse", "divide-style", "divide-color", "place-self", "align-self", "justify-self", "overflow", "overflow-x", "overflow-y", "overscroll-behavior", "overscroll-behavior-x", "overscroll-behavior-y", "scroll-behavior", "border-radius", "border-start-radius", "border-end-radius", "border-top-radius", "border-right-radius", "border-bottom-radius", "border-left-radius", "border-start-start-radius", "border-start-end-radius", "border-end-end-radius", "border-end-start-radius", "border-top-left-radius", "border-top-right-radius", "border-bottom-right-radius", "border-bottom-left-radius", "border-width", "border-inline-width", "border-block-width", "border-inline-start-width", "border-inline-end-width", "border-top-width", "border-right-width", "border-bottom-width", "border-left-width", "border-style", "border-inline-style", "border-block-style", "border-inline-start-style", "border-inline-end-style", "border-top-style", "border-right-style", "border-bottom-style", "border-left-style", "border-color", "border-inline-color", "border-block-color", "border-inline-start-color", "border-inline-end-color", "border-top-color", "border-right-color", "border-bottom-color", "border-left-color", "background-color", "background-image", "--tw-gradient-position", "--tw-gradient-stops", "--tw-gradient-via-stops", "--tw-gradient-from", "--tw-gradient-from-position", "--tw-gradient-via", "--tw-gradient-via-position", "--tw-gradient-to", "--tw-gradient-to-position", "box-decoration-break", "background-size", "background-attachment", "background-clip", "background-position", "background-repeat", "background-origin", "fill", "stroke", "stroke-width", "object-fit", "object-position", "padding", "padding-inline", "padding-block", "padding-inline-start", "padding-inline-end", "padding-top", "padding-right", "padding-bottom", "padding-left", "text-align", "text-indent", "vertical-align", "font-family", "font-size", "line-height", "font-weight", "letter-spacing", "text-wrap", "overflow-wrap", "word-break", "text-overflow", "hyphens", "white-space", "color", "text-transform", "font-style", "font-stretch", "font-variant-numeric", "text-decoration-line", "text-decoration-color", "text-decoration-style", "text-decoration-thickness", "text-underline-offset", "-webkit-font-smoothing", "placeholder-color", "caret-color", "accent-color", "color-scheme", "opacity", "background-blend-mode", "mix-blend-mode", "box-shadow", "--tw-shadow", "--tw-shadow-color", "--tw-ring-shadow", "--tw-ring-color", "--tw-inset-shadow", "--tw-inset-shadow-color", "--tw-inset-ring-shadow", "--tw-inset-ring-color", "--tw-ring-offset-width", "--tw-ring-offset-color", "outline", "outline-width", "outline-offset", "outline-color", "--tw-blur", "--tw-brightness", "--tw-contrast", "--tw-drop-shadow", "--tw-grayscale", "--tw-hue-rotate", "--tw-invert", "--tw-saturate", "--tw-sepia", "filter", "--tw-backdrop-blur", "--tw-backdrop-brightness", "--tw-backdrop-contrast", "--tw-backdrop-grayscale", "--tw-backdrop-hue-rotate", "--tw-backdrop-invert", "--tw-backdrop-opacity", "--tw-backdrop-saturate", "--tw-backdrop-sepia", "backdrop-filter", "transition-property", "transition-behavior", "transition-delay", "transition-duration", "transition-timing-function", "will-change", "contain", "content", "forced-color-adjust"];
function X3(r, t, { onInvalidCandidate: i } = {}) {
  let e = /* @__PURE__ */ new Map(), l3 = [], f2 = /* @__PURE__ */ new Map();
  for (let p2 of r) {
    if (t.invalidCandidates.has(p2)) {
      i == null ? void 0 : i(p2);
      continue;
    }
    let g2 = t.parseCandidate(p2);
    if (g2.length === 0) {
      i == null ? void 0 : i(p2);
      continue;
    }
    f2.set(p2, g2);
  }
  let s2 = t.getVariantOrder();
  for (let [p2, g2] of f2) {
    let c = false;
    for (let d2 of g2) {
      let h2 = t.compileAstNodes(d2);
      if (h2.length !== 0) {
        c = true;
        for (let { node: m, propertySort: v2 } of h2) {
          let y3 = 0n;
          for (let b3 of d2.variants) y3 |= 1n << BigInt(s2.get(b3));
          e.set(m, { properties: v2, variants: y3, candidate: p2 }), l3.push(m);
        }
      }
    }
    c || (i == null ? void 0 : i(p2));
  }
  return l3.sort((p2, g2) => {
    let c = e.get(p2), d2 = e.get(g2);
    if (c.variants - d2.variants !== 0n) return Number(c.variants - d2.variants);
    let h2 = 0;
    for (; h2 < c.properties.order.length && h2 < d2.properties.order.length && c.properties.order[h2] === d2.properties.order[h2]; ) h2 += 1;
    return (c.properties.order[h2] ?? 1 / 0) - (d2.properties.order[h2] ?? 1 / 0) || d2.properties.count - c.properties.count || xe2(c.candidate, d2.candidate);
  }), { astNodes: l3, nodeSorting: e };
}
function mt(r, t) {
  let i = dr(r, t);
  if (i.length === 0) return [];
  let e = [], l3 = `.${W2(r.raw)}`;
  for (let f2 of i) {
    let s2 = pr(f2);
    (r.important || t.important) && ht(f2);
    let p2 = { kind: "rule", selector: l3, nodes: f2 };
    for (let g2 of r.variants) if (se2(p2, g2, t.variants) === null) return [];
    e.push({ node: p2, propertySort: s2 });
  }
  return e;
}
function se2(r, t, i, e = 0) {
  if (t.kind === "arbitrary") {
    if (t.relative && e === 0) return null;
    r.nodes = [ee2(t.selector, r.nodes)];
    return;
  }
  let { applyFn: l3 } = i.get(t.root);
  if (t.kind === "compound") {
    let s2 = V2("@slot");
    if (se2(s2, t.variant, i, e + 1) === null || t.root === "not" && s2.nodes.length > 1) return null;
    for (let g2 of s2.nodes) if (g2.kind !== "rule" && g2.kind !== "at-rule" || l3(g2, t) === null) return null;
    w2(s2.nodes, (g2) => {
      if ((g2.kind === "rule" || g2.kind === "at-rule") && g2.nodes.length <= 0) return g2.nodes = r.nodes, 1;
    }), r.nodes = s2.nodes;
    return;
  }
  if (l3(r, t) === null) return null;
}
function gt(r) {
  var _a2;
  let t = ((_a2 = r.options) == null ? void 0 : _a2.types) ?? [];
  return t.length > 1 && t.includes("any");
}
function dr(r, t) {
  if (r.kind === "arbitrary") {
    let s2 = r.value;
    return r.modifier && (s2 = L3(s2, r.modifier, t.theme)), s2 === null ? [] : [[te2(r.property, s2)]];
  }
  let i = t.utilities.get(r.root) ?? [], e = [], l3 = i.filter((s2) => !gt(s2));
  for (let s2 of l3) {
    if (s2.kind !== r.kind) continue;
    let p2 = s2.compileFn(r);
    if (p2 !== void 0) {
      if (p2 === null) return e;
      e.push(p2);
    }
  }
  if (e.length > 0) return e;
  let f2 = i.filter((s2) => gt(s2));
  for (let s2 of f2) {
    if (s2.kind !== r.kind) continue;
    let p2 = s2.compileFn(r);
    if (p2 !== void 0) {
      if (p2 === null) return e;
      e.push(p2);
    }
  }
  return e;
}
function ht(r) {
  for (let t of r) t.kind !== "at-root" && (t.kind === "declaration" ? t.important = true : (t.kind === "rule" || t.kind === "at-rule") && ht(t.nodes));
}
function pr(r) {
  let t = /* @__PURE__ */ new Set(), i = 0, e = r.slice(), l3 = false;
  for (; e.length > 0; ) {
    let f2 = e.shift();
    if (f2.kind === "declaration") {
      if (f2.value === void 0 || (i++, l3)) continue;
      if (f2.property === "--tw-sort") {
        let p2 = Oe.indexOf(f2.value ?? "");
        if (p2 !== -1) {
          t.add(p2), l3 = true;
          continue;
        }
      }
      let s2 = Oe.indexOf(f2.property);
      s2 !== -1 && t.add(s2);
    } else if (f2.kind === "rule" || f2.kind === "at-rule") for (let s2 of f2.nodes) e.push(s2);
  }
  return { order: Array.from(t).sort((f2, s2) => f2 - s2), count: i };
}
function me2(r, t) {
  let i = 0, e = ee2("&", r), l3 = /* @__PURE__ */ new Set(), f2 = new N2(() => /* @__PURE__ */ new Set()), s2 = new N2(() => /* @__PURE__ */ new Set());
  w2([e], (h2, { parent: m }) => {
    if (h2.kind === "at-rule") {
      if (h2.name === "@keyframes") return w2(h2.nodes, (v2) => {
        if (v2.kind === "at-rule" && v2.name === "@apply") throw new Error("You cannot use `@apply` inside `@keyframes`.");
      }), 1;
      if (h2.name === "@utility") {
        let v2 = h2.params.replace(/-\*$/, "");
        s2.get(v2).add(h2), w2(h2.nodes, (y3) => {
          if (!(y3.kind !== "at-rule" || y3.name !== "@apply")) {
            l3.add(h2);
            for (let b3 of vt(y3, t)) f2.get(h2).add(b3);
          }
        });
        return;
      }
      if (h2.name === "@apply") {
        if (m === null) return;
        i |= 1, l3.add(m);
        for (let v2 of vt(h2, t)) f2.get(m).add(v2);
      }
    }
  });
  let p2 = /* @__PURE__ */ new Set(), g2 = [], c = /* @__PURE__ */ new Set();
  function d2(h2, m = []) {
    if (!p2.has(h2)) {
      if (c.has(h2)) {
        let v2 = m[(m.indexOf(h2) + 1) % m.length];
        throw h2.kind === "at-rule" && h2.name === "@utility" && v2.kind === "at-rule" && v2.name === "@utility" && w2(h2.nodes, (y3) => {
          if (y3.kind !== "at-rule" || y3.name !== "@apply") return;
          let b3 = y3.params.split(/\s+/g);
          for (let A3 of b3) for (let T3 of t.parseCandidate(A3)) switch (T3.kind) {
            case "arbitrary":
              break;
            case "static":
            case "functional":
              if (v2.params.replace(/-\*$/, "") === T3.root) throw new Error(`You cannot \`@apply\` the \`${A3}\` utility here because it creates a circular dependency.`);
              break;
            default:
          }
        }), new Error(`Circular dependency detected:

${Fe([h2])}
Relies on:

${Fe([v2])}`);
      }
      c.add(h2);
      for (let v2 of f2.get(h2)) for (let y3 of s2.get(v2)) m.push(h2), d2(y3, m), m.pop();
      p2.add(h2), c.delete(h2), g2.push(h2);
    }
  }
  for (let h2 of l3) d2(h2);
  for (let h2 of g2) if ("nodes" in h2) for (let m = 0; m < h2.nodes.length; m++) {
    let v2 = h2.nodes[m];
    if (v2.kind !== "at-rule" || v2.name !== "@apply") continue;
    let y3 = v2.params.split(/\s+/g);
    {
      let b3 = X3(y3, t, { onInvalidCandidate: (T3) => {
        throw new Error(`Cannot apply unknown utility class: ${T3}`);
      } }).astNodes, A3 = [];
      for (let T3 of b3) if (T3.kind === "rule") for (let N3 of T3.nodes) A3.push(N3);
      else A3.push(T3);
      h2.nodes.splice(m, 1, ...A3);
    }
  }
  return i;
}
function* vt(r, t) {
  for (let i of r.params.split(/\s+/g)) for (let e of t.parseCandidate(i)) switch (e.kind) {
    case "arbitrary":
      break;
    case "static":
    case "functional":
      yield e.root;
      break;
    default:
  }
}
async function _e(r, t, i, e = 0) {
  let l3 = 0, f2 = [];
  return w2(r, (s2, { replaceWith: p2 }) => {
    if (s2.kind === "at-rule" && (s2.name === "@import" || s2.name === "@reference")) {
      let g2 = mr(X2(s2.params));
      if (g2 === null) return;
      s2.name === "@reference" && (g2.media = "reference"), l3 |= 2;
      let { uri: c, layer: d2, media: h2, supports: m } = g2;
      if (c.startsWith("data:") || c.startsWith("http://") || c.startsWith("https://")) return;
      let v2 = We({}, []);
      return f2.push((async () => {
        if (e > 100) throw new Error(`Exceeded maximum recursion depth while resolving \`${c}\` in \`${t}\`)`);
        let y3 = await i(c, t), b3 = Be(y3.content);
        await _e(b3, y3.base, i, e + 1), v2.nodes = gr([We({ base: y3.base }, b3)], d2, h2, m);
      })()), p2(v2), 1;
    }
  }), f2.length > 0 && await Promise.all(f2), l3;
}
function mr(r) {
  let t, i = null, e = null, l3 = null;
  for (let f2 = 0; f2 < r.length; f2++) {
    let s2 = r[f2];
    if (s2.kind !== "separator") {
      if (s2.kind === "word" && !t) {
        if (!s2.value || s2.value[0] !== '"' && s2.value[0] !== "'") return null;
        t = s2.value.slice(1, -1);
        continue;
      }
      if (s2.kind === "function" && s2.value.toLowerCase() === "url" || !t) return null;
      if ((s2.kind === "word" || s2.kind === "function") && s2.value.toLowerCase() === "layer") {
        if (i) return null;
        if (l3) throw new Error("`layer(…)` in an `@import` should come before any other functions or conditions");
        "nodes" in s2 ? i = ue2(s2.nodes) : i = "";
        continue;
      }
      if (s2.kind === "function" && s2.value.toLowerCase() === "supports") {
        if (l3) return null;
        l3 = ue2(s2.nodes);
        continue;
      }
      e = ue2(r.slice(f2));
      break;
    }
  }
  return t ? { uri: t, layer: i, media: e, supports: l3 } : null;
}
function gr(r, t, i, e) {
  let l3 = r;
  return t !== null && (l3 = [V2("@layer", t, l3)]), i !== null && (l3 = [V2("@media", i, l3)]), e !== null && (l3 = [V2("@supports", e[0] === "(" ? e : `(${e})`, l3)]), l3;
}
function ue3(r, t = null) {
  return Array.isArray(r) && r.length === 2 && typeof r[1] == "object" && typeof r[1] !== null ? t ? r[1][t] ?? null : r[0] : Array.isArray(r) && t === null ? r.join(", ") : typeof r == "string" && t === null ? r : null;
}
function wt(r, { theme: t }, i) {
  for (let e of i) {
    let l3 = Ce2([e]);
    l3 && r.theme.clearNamespace(`--${l3}`, 4);
  }
  for (let [e, l3] of hr(t)) {
    if (typeof l3 != "string" && typeof l3 != "number") continue;
    if (typeof l3 == "string" && (l3 = l3.replace(/<alpha-value>/g, "1")), e[0] === "opacity" && (typeof l3 == "number" || typeof l3 == "string")) {
      let s2 = typeof l3 == "string" ? parseFloat(l3) : l3;
      s2 >= 0 && s2 <= 1 && (l3 = s2 * 100 + "%");
    }
    let f2 = Ce2(e);
    f2 && r.theme.add(`--${f2}`, "" + l3, 7);
  }
  if (Object.hasOwn(t, "fontFamily")) {
    let e = 5;
    {
      let l3 = ue3(t.fontFamily.sans);
      l3 && r.theme.hasDefault("--font-sans") && (r.theme.add("--default-font-family", l3, e), r.theme.add("--default-font-feature-settings", ue3(t.fontFamily.sans, "fontFeatureSettings") ?? "normal", e), r.theme.add("--default-font-variation-settings", ue3(t.fontFamily.sans, "fontVariationSettings") ?? "normal", e));
    }
    {
      let l3 = ue3(t.fontFamily.mono);
      l3 && r.theme.hasDefault("--font-mono") && (r.theme.add("--default-mono-font-family", l3, e), r.theme.add("--default-mono-font-feature-settings", ue3(t.fontFamily.mono, "fontFeatureSettings") ?? "normal", e), r.theme.add("--default-mono-font-variation-settings", ue3(t.fontFamily.mono, "fontVariationSettings") ?? "normal", e));
    }
  }
  return t;
}
function hr(r) {
  let t = [];
  return kt(r, [], (i, e) => {
    if (yr(i)) return t.push([e, i]), 1;
    if (br(i)) {
      t.push([e, i[0]]);
      for (let l3 of Reflect.ownKeys(i[1])) t.push([[...e, `-${l3}`], i[1][l3]]);
      return 1;
    }
    if (Array.isArray(i) && i.every((l3) => typeof l3 == "string")) return t.push([e, i.join(", ")]), 1;
  }), t;
}
var vr = /^[a-zA-Z0-9-_%/\.]+$/;
function Ce2(r) {
  if (r[0] === "container") return null;
  r = structuredClone(r), r[0] === "animation" && (r[0] = "animate"), r[0] === "aspectRatio" && (r[0] = "aspect"), r[0] === "borderRadius" && (r[0] = "radius"), r[0] === "boxShadow" && (r[0] = "shadow"), r[0] === "colors" && (r[0] = "color"), r[0] === "containers" && (r[0] = "container"), r[0] === "fontFamily" && (r[0] = "font"), r[0] === "fontSize" && (r[0] = "text"), r[0] === "letterSpacing" && (r[0] = "tracking"), r[0] === "lineHeight" && (r[0] = "leading"), r[0] === "maxWidth" && (r[0] = "container"), r[0] === "screens" && (r[0] = "breakpoint"), r[0] === "transitionTimingFunction" && (r[0] = "ease");
  for (let t of r) if (!vr.test(t)) return null;
  return r.map((t, i, e) => t === "1" && i !== e.length - 1 ? "" : t).map((t) => t.replaceAll(".", "_").replace(/([a-z])([A-Z])/g, (i, e, l3) => `${e}-${l3.toLowerCase()}`)).filter((t, i) => t !== "DEFAULT" || i !== r.length - 1).join("-");
}
function yr(r) {
  return typeof r == "number" || typeof r == "string";
}
function br(r) {
  if (!Array.isArray(r) || r.length !== 2 || typeof r[0] != "string" && typeof r[0] != "number" || r[1] === void 0 || r[1] === null || typeof r[1] != "object") return false;
  for (let t of Reflect.ownKeys(r[1])) if (typeof t != "string" || typeof r[1][t] != "string" && typeof r[1][t] != "number") return false;
  return true;
}
function kt(r, t = [], i) {
  for (let e of Reflect.ownKeys(r)) {
    let l3 = r[e];
    if (l3 == null) continue;
    let f2 = [...t, e], s2 = i(l3, f2) ?? 0;
    if (s2 !== 1) {
      if (s2 === 2) return 2;
      if (!(!Array.isArray(l3) && typeof l3 != "object") && kt(l3, f2, i) === 2) return 2;
    }
  }
}
function Ve(r) {
  let t = [];
  for (let i of u(r, ".")) {
    if (!i.includes("[")) {
      t.push(i);
      continue;
    }
    let e = 0;
    for (; ; ) {
      let l3 = i.indexOf("[", e), f2 = i.indexOf("]", l3);
      if (l3 === -1 || f2 === -1) break;
      l3 > e && t.push(i.slice(e, l3)), t.push(i.slice(l3 + 1, f2)), e = f2 + 1;
    }
    e <= i.length - 1 && t.push(i.slice(e));
  }
  return t;
}
function fe2(r) {
  if (Object.prototype.toString.call(r) !== "[object Object]") return false;
  let t = Object.getPrototypeOf(r);
  return t === null || Object.getPrototypeOf(t) === null;
}
function ge3(r, t, i, e = []) {
  for (let l3 of t) if (l3 != null) for (let f2 of Reflect.ownKeys(l3)) {
    e.push(f2);
    let s2 = i(r[f2], l3[f2], e);
    s2 !== void 0 ? r[f2] = s2 : !fe2(r[f2]) || !fe2(l3[f2]) ? r[f2] = l3[f2] : r[f2] = ge3({}, [r[f2], l3[f2]], i, e), e.pop();
  }
  return r;
}
function $e(r, t, i) {
  return function(l3, f2) {
    let s2 = l3.lastIndexOf("/"), p2 = null;
    s2 !== -1 && (p2 = l3.slice(s2 + 1).trim(), l3 = l3.slice(0, s2).trim());
    let g2 = (() => {
      var _a2;
      let c = Ve(l3), [d2, h2] = wr(r.theme, c), m = i(xt(t() ?? {}, c) ?? null);
      if (typeof m == "string" && (m = m.replace("<alpha-value>", "1")), typeof d2 != "object") return typeof h2 != "object" && h2 & 4 ? m ?? d2 : d2;
      if (m !== null && typeof m == "object" && !Array.isArray(m)) {
        let v2 = ge3({}, [m], (y3, b3) => b3);
        if (d2 === null && Object.hasOwn(m, "__CSS_VALUES__")) {
          let y3 = {};
          for (let b3 in m.__CSS_VALUES__) y3[b3] = m[b3], delete v2[b3];
          d2 = y3;
        }
        for (let y3 in d2) y3 !== "__CSS_VALUES__" && (((_a2 = m == null ? void 0 : m.__CSS_VALUES__) == null ? void 0 : _a2[y3]) & 4 && xt(v2, y3.split("-")) !== void 0 || (v2[$2(y3)] = d2[y3]));
        return v2;
      }
      if (Array.isArray(d2) && Array.isArray(h2) && Array.isArray(m)) {
        let v2 = d2[0], y3 = d2[1];
        h2[0] & 4 && (v2 = m[0] ?? v2);
        for (let b3 of Object.keys(y3)) h2[1][b3] & 4 && (y3[b3] = m[1][b3] ?? y3[b3]);
        return [v2, y3];
      }
      return d2 ?? m;
    })();
    return p2 && typeof g2 == "string" && (g2 = G3(g2, p2)), g2 ?? f2;
  };
}
function wr(r, t) {
  if (t.length === 1 && t[0].startsWith("--")) return [r.get([t[0]]), r.getOptions(t[0])];
  let i = Ce2(t), e = /* @__PURE__ */ new Map(), l3 = new N2(() => /* @__PURE__ */ new Map()), f2 = r.namespace(`--${i}`);
  if (f2.size === 0) return [null, 0];
  let s2 = /* @__PURE__ */ new Map();
  for (let [d2, h2] of f2) {
    if (!d2 || !d2.includes("--")) {
      e.set(d2, h2), s2.set(d2, r.getOptions(d2 ? `--${i}-${d2}` : `--${i}`));
      continue;
    }
    let m = d2.indexOf("--"), v2 = d2.slice(0, m), y3 = d2.slice(m + 2);
    y3 = y3.replace(/-([a-z])/g, (b3, A3) => A3.toUpperCase()), l3.get(v2 === "" ? null : v2).set(y3, [h2, r.getOptions(`--${i}${d2}`)]);
  }
  let p2 = r.getOptions(`--${i}`);
  for (let [d2, h2] of l3) {
    let m = e.get(d2);
    if (typeof m != "string") continue;
    let v2 = {}, y3 = {};
    for (let [b3, [A3, T3]] of h2) v2[b3] = A3, y3[b3] = T3;
    e.set(d2, [m, v2]), s2.set(d2, [p2, y3]);
  }
  let g2 = {}, c = {};
  for (let [d2, h2] of e) At(g2, [d2 ?? "DEFAULT"], h2);
  for (let [d2, h2] of s2) At(c, [d2 ?? "DEFAULT"], h2);
  return t[t.length - 1] === "DEFAULT" ? [(g2 == null ? void 0 : g2.DEFAULT) ?? null, c.DEFAULT ?? 0] : "DEFAULT" in g2 && Object.keys(g2).length === 1 ? [g2.DEFAULT, c.DEFAULT ?? 0] : (g2.__CSS_VALUES__ = c, [g2, c]);
}
function xt(r, t) {
  for (let i = 0; i < t.length; ++i) {
    let e = t[i];
    if ((r == null ? void 0 : r[e]) === void 0) {
      if (t[i + 1] === void 0) return;
      t[i + 1] = `${e}-${t[i + 1]}`;
      continue;
    }
    r = r[e];
  }
  return r;
}
function At(r, t, i) {
  for (let e of t.slice(0, -1)) r[e] === void 0 && (r[e] = {}), r = r[e];
  r[t[t.length - 1]] = i;
}
function kr(r) {
  return { kind: "combinator", value: r };
}
function xr(r, t) {
  return { kind: "function", value: r, nodes: t };
}
function he2(r) {
  return { kind: "selector", value: r };
}
function Ar(r) {
  return { kind: "separator", value: r };
}
function Cr(r) {
  return { kind: "value", value: r };
}
function ve2(r, t, i = null) {
  for (let e = 0; e < r.length; e++) {
    let l3 = r[e], f2 = false, s2 = 0, p2 = t(l3, { parent: i, replaceWith(g2) {
      f2 = true, Array.isArray(g2) ? g2.length === 0 ? (r.splice(e, 1), s2 = 0) : g2.length === 1 ? (r[e] = g2[0], s2 = 1) : (r.splice(e, 1, ...g2), s2 = g2.length) : (r[e] = g2, s2 = 1);
    } }) ?? 0;
    if (f2) {
      p2 === 0 ? e-- : e += s2 - 1;
      continue;
    }
    if (p2 === 2) return 2;
    if (p2 !== 1 && l3.kind === "function" && ve2(l3.nodes, t, l3) === 2) return 2;
  }
}
function ye3(r) {
  let t = "";
  for (let i of r) switch (i.kind) {
    case "combinator":
    case "selector":
    case "separator":
    case "value": {
      t += i.value;
      break;
    }
    case "function":
      t += i.value + "(" + ye3(i.nodes) + ")";
  }
  return t;
}
var Ct = 92;
var Vr = 93;
var Vt = 41;
var $r = 58;
var $t = 44;
var Tr = 34;
var Nr = 46;
var Tt = 62;
var Nt = 10;
var Sr = 35;
var St = 91;
var Et = 40;
var Rt = 43;
var Er = 39;
var Kt = 32;
var jt = 9;
var Pt = 126;
function Te(r) {
  r = r.replaceAll(`\r
`, `
`);
  let t = [], i = [], e = null, l3 = "", f2;
  for (let s2 = 0; s2 < r.length; s2++) {
    let p2 = r.charCodeAt(s2);
    switch (p2) {
      case $t:
      case Tt:
      case Nt:
      case Kt:
      case Rt:
      case jt:
      case Pt: {
        if (l3.length > 0) {
          let m = he2(l3);
          e ? e.nodes.push(m) : t.push(m), l3 = "";
        }
        let g2 = s2, c = s2 + 1;
        for (; c < r.length && (f2 = r.charCodeAt(c), !(f2 !== $t && f2 !== Tt && f2 !== Nt && f2 !== Kt && f2 !== Rt && f2 !== jt && f2 !== Pt)); c++) ;
        s2 = c - 1;
        let d2 = r.slice(g2, c), h2 = d2.trim() === "," ? Ar(d2) : kr(d2);
        e ? e.nodes.push(h2) : t.push(h2);
        break;
      }
      case Et: {
        let g2 = xr(l3, []);
        if (l3 = "", g2.value !== ":not" && g2.value !== ":where" && g2.value !== ":has" && g2.value !== ":is") {
          let c = s2 + 1, d2 = 0;
          for (let m = s2 + 1; m < r.length; m++) {
            if (f2 = r.charCodeAt(m), f2 === Et) {
              d2++;
              continue;
            }
            if (f2 === Vt) {
              if (d2 === 0) {
                s2 = m;
                break;
              }
              d2--;
            }
          }
          let h2 = s2;
          g2.nodes.push(Cr(r.slice(c, h2))), l3 = "", s2 = h2, e ? e.nodes.push(g2) : t.push(g2);
          break;
        }
        e ? e.nodes.push(g2) : t.push(g2), i.push(g2), e = g2;
        break;
      }
      case Vt: {
        let g2 = i.pop();
        if (l3.length > 0) {
          let c = he2(l3);
          g2.nodes.push(c), l3 = "";
        }
        i.length > 0 ? e = i[i.length - 1] : e = null;
        break;
      }
      case Nr:
      case $r:
      case Sr: {
        if (l3.length > 0) {
          let g2 = he2(l3);
          e ? e.nodes.push(g2) : t.push(g2);
        }
        l3 = String.fromCharCode(p2);
        break;
      }
      case St: {
        if (l3.length > 0) {
          let d2 = he2(l3);
          e ? e.nodes.push(d2) : t.push(d2);
        }
        l3 = "";
        let g2 = s2, c = 0;
        for (let d2 = s2 + 1; d2 < r.length; d2++) {
          if (f2 = r.charCodeAt(d2), f2 === St) {
            c++;
            continue;
          }
          if (f2 === Vr) {
            if (c === 0) {
              s2 = d2;
              break;
            }
            c--;
          }
        }
        l3 += r.slice(g2, s2 + 1);
        break;
      }
      case Er:
      case Tr: {
        let g2 = s2;
        for (let c = s2 + 1; c < r.length; c++) if (f2 = r.charCodeAt(c), f2 === Ct) c += 1;
        else if (f2 === p2) {
          s2 = c;
          break;
        }
        l3 += r.slice(g2, s2 + 1);
        break;
      }
      case Ct: {
        let g2 = r.charCodeAt(s2 + 1);
        l3 += String.fromCharCode(p2) + String.fromCharCode(g2), s2 += 1;
        break;
      }
      default:
        l3 += String.fromCharCode(p2);
    }
  }
  return l3.length > 0 && t.push(he2(l3)), t;
}
var Dt = /^[a-z@][a-zA-Z0-9/%._-]*$/;
function Fe2({ designSystem: r, ast: t, resolvedConfig: i, featuresRef: e, referenceMode: l3 }) {
  let f2 = { addBase(s2) {
    if (l3) return;
    let p2 = Z3(s2);
    e.current |= ae2(p2, r), t.push(V2("@layer", "base", p2));
  }, addVariant(s2, p2) {
    if (!Ae2.test(s2)) throw new Error(`\`addVariant('${s2}')\` defines an invalid variant name. Variants should only contain alphanumeric, dashes or underscore characters.`);
    typeof p2 == "string" || Array.isArray(p2) ? r.variants.static(s2, (g2) => {
      g2.nodes = Ot(p2, g2.nodes);
    }, { compounds: ne3(typeof p2 == "string" ? [p2] : p2) }) : typeof p2 == "object" && r.variants.fromAst(s2, Z3(p2));
  }, matchVariant(s2, p2, g2) {
    function c(h2, m, v2) {
      let y3 = p2(h2, { modifier: (m == null ? void 0 : m.value) ?? null });
      return Ot(y3, v2);
    }
    let d2 = Object.keys((g2 == null ? void 0 : g2.values) ?? {});
    r.variants.group(() => {
      r.variants.functional(s2, (h2, m) => {
        if (!m.value) {
          if ((g2 == null ? void 0 : g2.values) && "DEFAULT" in g2.values) {
            h2.nodes = c(g2.values.DEFAULT, m.modifier, h2.nodes);
            return;
          }
          return null;
        }
        if (m.value.kind === "arbitrary") h2.nodes = c(m.value.value, m.modifier, h2.nodes);
        else if (m.value.kind === "named" && (g2 == null ? void 0 : g2.values)) {
          let v2 = g2.values[m.value.value];
          if (typeof v2 != "string") return;
          h2.nodes = c(v2, m.modifier, h2.nodes);
        }
      });
    }, (h2, m) => {
      var _a2, _b, _c, _d;
      if (h2.kind !== "functional" || m.kind !== "functional") return 0;
      let v2 = h2.value ? h2.value.value : "DEFAULT", y3 = m.value ? m.value.value : "DEFAULT", b3 = ((_a2 = g2 == null ? void 0 : g2.values) == null ? void 0 : _a2[v2]) ?? v2, A3 = ((_b = g2 == null ? void 0 : g2.values) == null ? void 0 : _b[y3]) ?? y3;
      if (g2 && typeof g2.sort == "function") return g2.sort({ value: b3, modifier: ((_c = h2.modifier) == null ? void 0 : _c.value) ?? null }, { value: A3, modifier: ((_d = m.modifier) == null ? void 0 : _d.value) ?? null });
      let T3 = d2.indexOf(v2), N3 = d2.indexOf(y3);
      return T3 = T3 === -1 ? d2.length : T3, N3 = N3 === -1 ? d2.length : N3, T3 !== N3 ? T3 - N3 : b3 < A3 ? -1 : 1;
    });
  }, addUtilities(s2) {
    s2 = Array.isArray(s2) ? s2 : [s2];
    let p2 = s2.flatMap((c) => Object.entries(c));
    p2 = p2.flatMap(([c, d2]) => u(c, ",").map((h2) => [h2.trim(), d2]));
    let g2 = new N2(() => []);
    for (let [c, d2] of p2) {
      if (c.startsWith("@keyframes ")) {
        l3 || t.push(ee2(c, Z3(d2)));
        continue;
      }
      let h2 = Te(c), m = false;
      if (ve2(h2, (v2) => {
        if (v2.kind === "selector" && v2.value[0] === "." && Dt.test(v2.value.slice(1))) {
          let y3 = v2.value;
          v2.value = "&";
          let b3 = ye3(h2), A3 = y3.slice(1), T3 = b3 === "&" ? Z3(d2) : [ee2(b3, Z3(d2))];
          g2.get(A3).push(...T3), m = true, v2.value = y3;
          return;
        }
        if (v2.kind === "function" && v2.value === ":not") return 1;
      }), !m) throw new Error(`\`addUtilities({ '${c}' : … })\` defines an invalid utility selector. Utilities must be a single class name and start with a lowercase letter, eg. \`.scrollbar-none\`.`);
    }
    for (let [c, d2] of g2) r.theme.prefix && w2(d2, (h2) => {
      if (h2.kind === "rule") {
        let m = Te(h2.selector);
        ve2(m, (v2) => {
          v2.kind === "selector" && v2.value[0] === "." && (v2.value = `.${r.theme.prefix}\\:${v2.value.slice(1)}`);
        }), h2.selector = ye3(m);
      }
    }), r.utilities.static(c, (h2) => {
      let m = structuredClone(d2);
      return _t(m, c, h2.raw), e.current |= me2(m, r), m;
    });
  }, matchUtilities(s2, p2) {
    let g2 = (p2 == null ? void 0 : p2.type) ? Array.isArray(p2 == null ? void 0 : p2.type) ? p2.type : [p2.type] : ["any"];
    for (let [d2, h2] of Object.entries(s2)) {
      let m = function({ negative: v2 }) {
        return (y3) => {
          var _a2, _b;
          if (((_a2 = y3.value) == null ? void 0 : _a2.kind) === "arbitrary" && g2.length > 0 && !g2.includes("any") && (y3.value.dataType && !g2.includes(y3.value.dataType) || !y3.value.dataType && !pe(y3.value.value, g2))) return;
          let b3 = g2.includes("color"), A3 = null, T3 = false;
          {
            let R3 = (p2 == null ? void 0 : p2.values) ?? {};
            b3 && (R3 = Object.assign({ inherit: "inherit", transparent: "transparent", current: "currentColor" }, R3)), y3.value ? y3.value.kind === "arbitrary" ? A3 = y3.value.value : y3.value.fraction && R3[y3.value.fraction] ? (A3 = R3[y3.value.fraction], T3 = true) : R3[y3.value.value] ? A3 = R3[y3.value.value] : R3.__BARE_VALUE__ && (A3 = R3.__BARE_VALUE__(y3.value) ?? null, T3 = (y3.value.fraction !== null && (A3 == null ? void 0 : A3.includes("/"))) ?? false) : A3 = R3.DEFAULT ?? null;
          }
          if (A3 === null) return;
          let N3;
          {
            let R3 = (p2 == null ? void 0 : p2.modifiers) ?? null;
            y3.modifier ? R3 === "any" || y3.modifier.kind === "arbitrary" ? N3 = y3.modifier.value : (R3 == null ? void 0 : R3[y3.modifier.value]) ? N3 = R3[y3.modifier.value] : b3 && !Number.isNaN(Number(y3.modifier.value)) ? N3 = `${y3.modifier.value}%` : N3 = null : N3 = null;
          }
          if (y3.modifier && N3 === null && !T3) return ((_b = y3.value) == null ? void 0 : _b.kind) === "arbitrary" ? null : void 0;
          b3 && N3 !== null && (A3 = G3(A3, N3)), v2 && (A3 = `calc(${A3} * -1)`);
          let K3 = Z3(h2(A3, { modifier: N3 }));
          return _t(K3, d2, y3.raw), e.current |= me2(K3, r), K3;
        };
      };
      var c = m;
      if (!Dt.test(d2)) throw new Error(`\`matchUtilities({ '${d2}' : … })\` defines an invalid utility name. Utilities should be alphanumeric and start with a lowercase letter, eg. \`scrollbar\`.`);
      (p2 == null ? void 0 : p2.supportsNegativeValues) && r.utilities.functional(`-${d2}`, m({ negative: true }), { types: g2 }), r.utilities.functional(d2, m({ negative: false }), { types: g2 }), r.utilities.suggest(d2, () => {
        let v2 = (p2 == null ? void 0 : p2.values) ?? {}, y3 = new Set(Object.keys(v2));
        y3.delete("__BARE_VALUE__"), y3.has("DEFAULT") && (y3.delete("DEFAULT"), y3.add(null));
        let b3 = (p2 == null ? void 0 : p2.modifiers) ?? {}, A3 = b3 === "any" ? [] : Object.keys(b3);
        return [{ supportsNegative: (p2 == null ? void 0 : p2.supportsNegativeValues) ?? false, values: Array.from(y3), modifiers: A3 }];
      });
    }
  }, addComponents(s2, p2) {
    this.addUtilities(s2, p2);
  }, matchComponents(s2, p2) {
    this.matchUtilities(s2, p2);
  }, theme: $e(r, () => i.theme ?? {}, (s2) => s2), prefix(s2) {
    return s2;
  }, config(s2, p2) {
    let g2 = i;
    if (!s2) return g2;
    let c = Ve(s2);
    for (let d2 = 0; d2 < c.length; ++d2) {
      let h2 = c[d2];
      if (g2[h2] === void 0) return p2;
      g2 = g2[h2];
    }
    return g2 ?? p2;
  } };
  return f2.addComponents = f2.addComponents.bind(f2), f2.matchComponents = f2.matchComponents.bind(f2), f2;
}
function Z3(r) {
  let t = [];
  r = Array.isArray(r) ? r : [r];
  let i = r.flatMap((e) => Object.entries(e));
  for (let [e, l3] of i) if (typeof l3 != "object") {
    if (!e.startsWith("--")) {
      if (l3 === "@slot") {
        t.push(ee2(e, [V2("@slot")]));
        continue;
      }
      e = e.replace(/([A-Z])/g, "-$1").toLowerCase();
    }
    t.push(te2(e, String(l3)));
  } else if (Array.isArray(l3)) for (let f2 of l3) typeof f2 == "string" ? t.push(te2(e, f2)) : t.push(ee2(e, Z3(f2)));
  else l3 !== null && t.push(ee2(e, Z3(l3)));
  return t;
}
function Ot(r, t) {
  return (typeof r == "string" ? [r] : r).flatMap((e) => {
    if (e.trim().endsWith("}")) {
      let l3 = e.replace("}", "{@slot}}"), f2 = Be(l3);
      return De2(f2, t), f2;
    } else return ee2(e, t);
  });
}
function _t(r, t, i) {
  w2(r, (e) => {
    if (e.kind === "rule") {
      let l3 = Te(e.selector);
      ve2(l3, (f2) => {
        f2.kind === "selector" && f2.value === `.${t}` && (f2.value = `.${W2(i)}`);
      }), e.selector = ye3(l3);
    }
  });
}
function Ft(r, t, i) {
  for (let e of Kr(t)) r.theme.addKeyframes(e);
}
function Kr(r) {
  let t = [];
  if ("keyframes" in r.theme) for (let [i, e] of Object.entries(r.theme.keyframes)) t.push(V2("@keyframes", i, Z3(e)));
  return t;
}
function Ut(r) {
  return { theme: { ...ye, colors: ({ theme: t }) => t("color", {}), extend: { fontSize: ({ theme: t }) => ({ ...t("text", {}) }), boxShadow: ({ theme: t }) => ({ ...t("shadow", {}) }), animation: ({ theme: t }) => ({ ...t("animate", {}) }), aspectRatio: ({ theme: t }) => ({ ...t("aspect", {}) }), borderRadius: ({ theme: t }) => ({ ...t("radius", {}) }), screens: ({ theme: t }) => ({ ...t("breakpoint", {}) }), letterSpacing: ({ theme: t }) => ({ ...t("tracking", {}) }), lineHeight: ({ theme: t }) => ({ ...t("leading", {}) }), transitionDuration: { DEFAULT: r.get(["--default-transition-duration"]) ?? null }, transitionTimingFunction: { DEFAULT: r.get(["--default-transition-timing-function"]) ?? null }, maxWidth: ({ theme: t }) => ({ ...t("container", {}) }) } } };
}
var jr = { blocklist: [], future: {}, prefix: "", important: false, darkMode: null, theme: {}, plugins: [], content: { files: [] } };
function Ie(r, t) {
  let i = { design: r, configs: [], plugins: [], content: { files: [] }, theme: {}, extend: {}, result: structuredClone(jr) };
  for (let l3 of t) Ue(i, l3);
  for (let l3 of i.configs) "darkMode" in l3 && l3.darkMode !== void 0 && (i.result.darkMode = l3.darkMode ?? null), "prefix" in l3 && l3.prefix !== void 0 && (i.result.prefix = l3.prefix ?? ""), "blocklist" in l3 && l3.blocklist !== void 0 && (i.result.blocklist = l3.blocklist ?? []), "important" in l3 && l3.important !== void 0 && (i.result.important = l3.important ?? false);
  let e = Dr(i);
  return { resolvedConfig: { ...i.result, content: i.content, theme: i.theme, plugins: i.plugins }, replacedThemeKeys: e };
}
function Pr(r, t) {
  if (Array.isArray(r) && fe2(r[0])) return r.concat(t);
  if (Array.isArray(t) && fe2(t[0]) && fe2(r)) return [r, ...t];
  if (Array.isArray(t)) return t;
}
function Ue(r, { config: t, base: i, path: e, reference: l3 }) {
  let f2 = [];
  for (let g2 of t.plugins ?? []) "__isOptionsFunction" in g2 ? f2.push({ ...g2(), reference: l3 }) : "handler" in g2 ? f2.push({ ...g2, reference: l3 }) : f2.push({ handler: g2, reference: l3 });
  if (Array.isArray(t.presets) && t.presets.length === 0) throw new Error("Error in the config file/plugin/preset. An empty preset (`preset: []`) is not currently supported.");
  for (let g2 of t.presets ?? []) Ue(r, { path: e, base: i, config: g2, reference: l3 });
  for (let g2 of f2) r.plugins.push(g2), g2.config && Ue(r, { path: e, base: i, config: g2.config, reference: !!g2.reference });
  let s2 = t.content ?? [], p2 = Array.isArray(s2) ? s2 : s2.files;
  for (let g2 of p2) r.content.files.push(typeof g2 == "object" ? g2 : { base: i, pattern: g2 });
  r.configs.push(t);
}
function Dr(r) {
  var _a2;
  let t = /* @__PURE__ */ new Set(), i = $e(r.design, () => r.theme, l3), e = Object.assign(i, { theme: i, colors: l });
  function l3(f2) {
    return typeof f2 == "function" ? f2(e) ?? null : f2 ?? null;
  }
  for (let f2 of r.configs) {
    let s2 = f2.theme ?? {}, p2 = s2.extend ?? {};
    for (let g2 in s2) g2 !== "extend" && t.add(g2);
    Object.assign(r.theme, s2);
    for (let g2 in p2) (_a2 = r.extend)[g2] ?? (_a2[g2] = []), r.extend[g2].push(p2[g2]);
  }
  delete r.theme.extend;
  for (let f2 in r.extend) {
    let s2 = [r.theme[f2], ...r.extend[f2]];
    r.theme[f2] = () => {
      let p2 = s2.map(l3);
      return ge3({}, p2, Pr);
    };
  }
  for (let f2 in r.theme) r.theme[f2] = l3(r.theme[f2]);
  if (r.theme.screens && typeof r.theme.screens == "object") for (let f2 of Object.keys(r.theme.screens)) {
    let s2 = r.theme.screens[f2];
    s2 && typeof s2 == "object" && ("raw" in s2 || "max" in s2 || "min" in s2 && (r.theme.screens[f2] = s2.min));
  }
  return t;
}
function It(r, t) {
  let i = r.theme.container || {};
  if (typeof i != "object" || i === null) return;
  let e = Or(i, t);
  e.length !== 0 && t.utilities.static("container", () => structuredClone(e));
}
function Or({ center: r, padding: t, screens: i }, e) {
  let l3 = [], f2 = null;
  if (r && l3.push(te2("margin-inline", "auto")), (typeof t == "string" || typeof t == "object" && t !== null && "DEFAULT" in t) && l3.push(te2("padding-inline", typeof t == "string" ? t : t.DEFAULT)), typeof i == "object" && i !== null) {
    f2 = /* @__PURE__ */ new Map();
    let s2 = Array.from(e.theme.namespace("--breakpoint").entries());
    if (s2.sort((p2, g2) => te3(p2[1], g2[1], "asc")), s2.length > 0) {
      let [p2] = s2[0];
      l3.push(V2("@media", `(width >= --theme(--breakpoint-${p2}))`, [te2("max-width", "none")]));
    }
    for (let [p2, g2] of Object.entries(i)) {
      if (typeof g2 == "object") if ("min" in g2) g2 = g2.min;
      else continue;
      f2.set(p2, V2("@media", `(width >= ${g2})`, [te2("max-width", g2)]));
    }
  }
  if (typeof t == "object" && t !== null) {
    let s2 = Object.entries(t).filter(([p2]) => p2 !== "DEFAULT").map(([p2, g2]) => [p2, e.theme.resolveValue(p2, ["--breakpoint"]), g2]).filter(Boolean);
    s2.sort((p2, g2) => te3(p2[1], g2[1], "asc"));
    for (let [p2, , g2] of s2) if (f2 && f2.has(p2)) f2.get(p2).nodes.push(te2("padding-inline", g2));
    else {
      if (f2) continue;
      l3.push(V2("@media", `(width >= theme(--breakpoint-${p2}))`, [te2("padding-inline", g2)]));
    }
  }
  if (f2) for (let [, s2] of f2) l3.push(s2);
  return l3;
}
function zt({ addVariant: r, config: t }) {
  let i = t("darkMode", null), [e, l3 = ".dark"] = Array.isArray(i) ? i : [i];
  if (e === "variant") {
    let f2;
    if (Array.isArray(l3) || typeof l3 == "function" ? f2 = l3 : typeof l3 == "string" && (f2 = [l3]), Array.isArray(f2)) for (let s2 of f2) s2 === ".dark" ? (e = false, console.warn('When using `variant` for `darkMode`, you must provide a selector.\nExample: `darkMode: ["variant", ".your-selector &"]`')) : s2.includes("&") || (e = false, console.warn('When using `variant` for `darkMode`, your selector must contain `&`.\nExample `darkMode: ["variant", ".your-selector &"]`'));
    l3 = f2;
  }
  e === null || (e === "selector" ? r("dark", `&:where(${l3}, ${l3} *)`) : e === "media" ? r("dark", "@media (prefers-color-scheme: dark)") : e === "variant" ? r("dark", l3) : e === "class" && r("dark", `&:is(${l3} *)`));
}
function Mt(r) {
  for (let [t, i] of [["t", "top"], ["tr", "top right"], ["r", "right"], ["br", "bottom right"], ["b", "bottom"], ["bl", "bottom left"], ["l", "left"], ["tl", "top left"]]) r.utilities.static(`bg-gradient-to-${t}`, () => [te2("--tw-gradient-position", `to ${i} in oklab`), te2("background-image", "linear-gradient(var(--tw-gradient-stops))")]);
  r.utilities.functional("max-w-screen", (t) => {
    if (!t.value || t.value.kind === "arbitrary") return;
    let i = r.theme.resolve(t.value.value, ["--breakpoint"]);
    if (i) return [te2("max-width", i)];
  }), r.utilities.static("overflow-ellipsis", () => [te2("text-overflow", "ellipsis")]), r.utilities.static("decoration-slice", () => [te2("-webkit-box-decoration-break", "slice"), te2("box-decoration-break", "slice")]), r.utilities.static("decoration-clone", () => [te2("-webkit-box-decoration-break", "clone"), te2("box-decoration-break", "clone")]), r.utilities.functional("flex-shrink", (t) => {
    if (!t.modifier) {
      if (!t.value) return [te2("flex-shrink", "1")];
      if (t.value.kind === "arbitrary") return [te2("flex-shrink", t.value.value)];
      if (p(t.value.value)) return [te2("flex-shrink", t.value.value)];
    }
  }), r.utilities.functional("flex-grow", (t) => {
    if (!t.modifier) {
      if (!t.value) return [te2("flex-grow", "1")];
      if (t.value.kind === "arbitrary") return [te2("flex-grow", t.value.value)];
      if (p(t.value.value)) return [te2("flex-grow", t.value.value)];
    }
  });
}
function Lt(r, t) {
  var _a2;
  let i = r.theme.screens || {}, e = ((_a2 = t.variants.get("min")) == null ? void 0 : _a2.order) ?? 0, l3 = [];
  for (let [s2, p2] of Object.entries(i)) {
    let m = function(v2) {
      t.variants.static(s2, (y3) => {
        y3.nodes = [V2("@media", h2, y3.nodes)];
      }, { order: v2 });
    };
    var f2 = m;
    let g2 = t.variants.get(s2), c = t.theme.resolveValue(s2, ["--breakpoint"]);
    if (g2 && c && !t.theme.hasDefault(`--breakpoint-${s2}`)) continue;
    let d2 = true;
    typeof p2 == "string" && (d2 = false);
    let h2 = _r(p2);
    d2 ? l3.push(m) : m(e);
  }
  if (l3.length !== 0) {
    for (let [, s2] of t.variants.variants) s2.order > e && (s2.order += l3.length);
    t.variants.compareFns = new Map(Array.from(t.variants.compareFns).map(([s2, p2]) => (s2 > e && (s2 += l3.length), [s2, p2])));
    for (let [s2, p2] of l3.entries()) p2(e + s2 + 1);
  }
}
function _r(r) {
  return (Array.isArray(r) ? r : [r]).map((i) => typeof i == "string" ? { min: i } : i && typeof i == "object" ? i : null).map((i) => {
    if (i === null) return null;
    if ("raw" in i) return i.raw;
    let e = "";
    return i.max !== void 0 && (e += `${i.max} >= `), e += "width", i.min !== void 0 && (e += ` >= ${i.min}`), `(${e})`;
  }).filter(Boolean).join(", ");
}
function Bt(r, t) {
  let i = r.theme.aria || {}, e = r.theme.supports || {}, l3 = r.theme.data || {};
  if (Object.keys(i).length > 0) {
    let f2 = t.variants.get("aria"), s2 = f2 == null ? void 0 : f2.applyFn, p2 = f2 == null ? void 0 : f2.compounds;
    t.variants.functional("aria", (g2, c) => {
      let d2 = c.value;
      return d2 && d2.kind === "named" && d2.value in i ? s2 == null ? void 0 : s2(g2, { ...c, value: { kind: "arbitrary", value: i[d2.value] } }) : s2 == null ? void 0 : s2(g2, c);
    }, { compounds: p2 });
  }
  if (Object.keys(e).length > 0) {
    let f2 = t.variants.get("supports"), s2 = f2 == null ? void 0 : f2.applyFn, p2 = f2 == null ? void 0 : f2.compounds;
    t.variants.functional("supports", (g2, c) => {
      let d2 = c.value;
      return d2 && d2.kind === "named" && d2.value in e ? s2 == null ? void 0 : s2(g2, { ...c, value: { kind: "arbitrary", value: e[d2.value] } }) : s2 == null ? void 0 : s2(g2, c);
    }, { compounds: p2 });
  }
  if (Object.keys(l3).length > 0) {
    let f2 = t.variants.get("data"), s2 = f2 == null ? void 0 : f2.applyFn, p2 = f2 == null ? void 0 : f2.compounds;
    t.variants.functional("data", (g2, c) => {
      let d2 = c.value;
      return d2 && d2.kind === "named" && d2.value in l3 ? s2 == null ? void 0 : s2(g2, { ...c, value: { kind: "arbitrary", value: l3[d2.value] } }) : s2 == null ? void 0 : s2(g2, c);
    }, { compounds: p2 });
  }
}
var Fr = /^[a-z]+$/;
async function qt({ designSystem: r, base: t, ast: i, loadModule: e, globs: l3 }) {
  let f2 = 0, s2 = [], p2 = [];
  w2(i, (h2, { parent: m, replaceWith: v2, context: y3 }) => {
    if (h2.kind === "at-rule") {
      if (h2.name === "@plugin") {
        if (m !== null) throw new Error("`@plugin` cannot be nested.");
        let b3 = h2.params.slice(1, -1);
        if (b3.length === 0) throw new Error("`@plugin` must have a path.");
        let A3 = {};
        for (let T3 of h2.nodes ?? []) {
          if (T3.kind !== "declaration") throw new Error(`Unexpected \`@plugin\` option:

${Fe([T3])}

\`@plugin\` options must be a flat list of declarations.`);
          if (T3.value === void 0) continue;
          let N3 = T3.value, K3 = u(N3, ",").map((R3) => {
            if (R3 = R3.trim(), R3 === "null") return null;
            if (R3 === "true") return true;
            if (R3 === "false") return false;
            if (Number.isNaN(Number(R3))) {
              if (R3[0] === '"' && R3[R3.length - 1] === '"' || R3[0] === "'" && R3[R3.length - 1] === "'") return R3.slice(1, -1);
              if (R3[0] === "{" && R3[R3.length - 1] === "}") throw new Error(`Unexpected \`@plugin\` option: Value of declaration \`${Fe([T3]).trim()}\` is not supported.

Using an object as a plugin option is currently only supported in JavaScript configuration files.`);
            } else return Number(R3);
            return R3;
          });
          A3[T3.property] = K3.length === 1 ? K3[0] : K3;
        }
        s2.push([{ id: b3, base: y3.base, reference: !!y3.reference }, Object.keys(A3).length > 0 ? A3 : null]), v2([]), f2 |= 4;
        return;
      }
      if (h2.name === "@config") {
        if (h2.nodes.length > 0) throw new Error("`@config` cannot have a body.");
        if (m !== null) throw new Error("`@config` cannot be nested.");
        p2.push({ id: h2.params.slice(1, -1), base: y3.base, reference: !!y3.reference }), v2([]), f2 |= 4;
        return;
      }
    }
  }), Mt(r);
  let g2 = r.resolveThemeValue;
  if (r.resolveThemeValue = function(m) {
    return m.startsWith("--") ? g2(m) : (f2 |= Wt({ designSystem: r, base: t, ast: i, globs: l3, configs: [], pluginDetails: [] }), r.resolveThemeValue(m));
  }, !s2.length && !p2.length) return 0;
  let [c, d2] = await Promise.all([Promise.all(p2.map(async ({ id: h2, base: m, reference: v2 }) => {
    let y3 = await e(h2, m, "config");
    return { path: h2, base: y3.base, config: y3.module, reference: v2 };
  })), Promise.all(s2.map(async ([{ id: h2, base: m, reference: v2 }, y3]) => {
    let b3 = await e(h2, m, "plugin");
    return { path: h2, base: b3.base, plugin: b3.module, options: y3, reference: v2 };
  }))]);
  return f2 |= Wt({ designSystem: r, base: t, ast: i, globs: l3, configs: c, pluginDetails: d2 }), f2;
}
function Wt({ designSystem: r, base: t, ast: i, globs: e, configs: l3, pluginDetails: f2 }) {
  let s2 = 0, g2 = [...f2.map((b3) => {
    if (!b3.options) return { config: { plugins: [b3.plugin] }, base: b3.base, reference: b3.reference };
    if ("__isOptionsFunction" in b3.plugin) return { config: { plugins: [b3.plugin(b3.options)] }, base: b3.base, reference: b3.reference };
    throw new Error(`The plugin "${b3.path}" does not accept options`);
  }), ...l3], { resolvedConfig: c } = Ie(r, [{ config: Ut(r.theme), base: t, reference: true }, ...g2, { config: { plugins: [zt] }, base: t, reference: true }]), { resolvedConfig: d2, replacedThemeKeys: h2 } = Ie(r, g2);
  r.resolveThemeValue = function(A3, T3) {
    let N3 = v2.theme(A3, T3);
    if (Array.isArray(N3) && N3.length === 2) return N3[0];
    if (Array.isArray(N3)) return N3.join(", ");
    if (typeof N3 == "string") return N3;
  };
  let m = { designSystem: r, ast: i, resolvedConfig: c, featuresRef: { set current(b3) {
    s2 |= b3;
  } } }, v2 = Fe2({ ...m, referenceMode: false }), y3;
  for (let { handler: b3, reference: A3 } of c.plugins) A3 ? (y3 || (y3 = Fe2({ ...m, referenceMode: true })), b3(y3)) : b3(v2);
  if (wt(r, d2, h2), Ft(r, d2, h2), Bt(d2, r), Lt(d2, r), It(d2, r), !r.theme.prefix && c.prefix) {
    if (c.prefix.endsWith("-") && (c.prefix = c.prefix.slice(0, -1), console.warn(`The prefix "${c.prefix}" is invalid. Prefixes must be lowercase ASCII letters (a-z) only and is written as a variant before all utilities. We have fixed up the prefix for you. Remove the trailing \`-\` to silence this warning.`)), !Fr.test(c.prefix)) throw new Error(`The prefix "${c.prefix}" is invalid. Prefixes must be lowercase ASCII letters (a-z) only.`);
    r.theme.prefix = c.prefix;
  }
  if (!r.important && c.important === true && (r.important = true), typeof c.important == "string") {
    let b3 = c.important;
    w2(i, (A3, { replaceWith: T3, parent: N3 }) => {
      if (A3.kind === "at-rule" && !(A3.name !== "@tailwind" || A3.params !== "utilities")) return (N3 == null ? void 0 : N3.kind) === "rule" && N3.selector === b3 ? 2 : (T3(me(b3, [A3])), 2);
    });
  }
  for (let b3 of c.blocklist) r.invalidCandidates.add(b3);
  for (let b3 of c.content.files) {
    if ("raw" in b3) throw new Error(`Error in the config file/plugin/preset. The \`content\` key contains a \`raw\` entry:

${JSON.stringify(b3, null, 2)}

This feature is not currently supported.`);
    e.push(b3);
  }
  return s2;
}
var Ur = /^[a-z]+$/;
function Ir() {
  throw new Error("No `loadModule` function provided to `compile`");
}
function zr() {
  throw new Error("No `loadStylesheet` function provided to `compile`");
}
function Mr(r) {
  let t = 0, i = null;
  for (let e of u(r, " ")) e === "reference" ? t |= 2 : e === "inline" ? t |= 1 : e === "default" ? t |= 4 : e === "static" ? t |= 8 : e.startsWith("prefix(") && e.endsWith(")") && (i = e.slice(7, -1));
  return [t, i];
}
var de3 = ((p2) => (p2[p2.None = 0] = "None", p2[p2.AtApply = 1] = "AtApply", p2[p2.AtImport = 2] = "AtImport", p2[p2.JsPluginCompat = 4] = "JsPluginCompat", p2[p2.ThemeFunction = 8] = "ThemeFunction", p2[p2.Utilities = 16] = "Utilities", p2[p2.Variants = 32] = "Variants", p2))(de3 || {});
async function Jt(r, { base: t = "", loadModule: i = Ir, loadStylesheet: e = zr } = {}) {
  let l3 = 0;
  r = [We({ base: t }, r)], l3 |= await _e(r, t, e);
  let f2 = null, s2 = new P2(), p2 = [], g2 = [], c = null, d2 = null, h2 = [], m = [], v2 = null;
  w2(r, (b3, { parent: A3, replaceWith: T3, context: N3 }) => {
    if (b3.kind === "at-rule") {
      if (b3.name === "@tailwind" && (b3.params === "utilities" || b3.params.startsWith("utilities"))) {
        if (d2 !== null) {
          T3([]);
          return;
        }
        let K3 = u(b3.params, " ");
        for (let R3 of K3) if (R3.startsWith("source(")) {
          let j3 = R3.slice(7, -1);
          if (j3 === "none") {
            v2 = j3;
            continue;
          }
          if (j3[0] === '"' && j3[j3.length - 1] !== '"' || j3[0] === "'" && j3[j3.length - 1] !== "'" || j3[0] !== "'" && j3[0] !== '"') throw new Error("`source(…)` paths must be quoted.");
          v2 = { base: N3.sourceBase ?? N3.base, pattern: j3.slice(1, -1) };
        }
        d2 = b3, l3 |= 16;
      }
      if (b3.name === "@utility") {
        if (A3 !== null) throw new Error("`@utility` cannot be nested.");
        if (b3.nodes.length === 0) throw new Error(`\`@utility ${b3.params}\` is empty. Utilities should include at least one property.`);
        let K3 = it(b3);
        if (K3 === null) throw new Error(`\`@utility ${b3.params}\` defines an invalid utility name. Utilities should be alphanumeric and start with a lowercase letter.`);
        g2.push(K3);
      }
      if (b3.name === "@source") {
        if (b3.nodes.length > 0) throw new Error("`@source` cannot have a body.");
        if (A3 !== null) throw new Error("`@source` cannot be nested.");
        let K3 = b3.params;
        if (K3[0] === '"' && K3[K3.length - 1] !== '"' || K3[0] === "'" && K3[K3.length - 1] !== "'" || K3[0] !== "'" && K3[0] !== '"') throw new Error("`@source` paths must be quoted.");
        m.push({ base: N3.base, pattern: K3.slice(1, -1) }), T3([]);
        return;
      }
      if (b3.name === "@variant" && (A3 === null ? b3.nodes.length === 0 ? b3.name = "@custom-variant" : (w2(b3.nodes, (K3) => {
        if (K3.kind === "at-rule" && K3.name === "@slot") return b3.name = "@custom-variant", 2;
      }), b3.name === "@variant" && h2.push(b3)) : h2.push(b3)), b3.name === "@custom-variant") {
        if (A3 !== null) throw new Error("`@custom-variant` cannot be nested.");
        T3([]);
        let [K3, R3] = u(b3.params, " ");
        if (!Ae2.test(K3)) throw new Error(`\`@custom-variant ${K3}\` defines an invalid variant name. Variants should only contain alphanumeric, dashes or underscore characters.`);
        if (b3.nodes.length > 0 && R3) throw new Error(`\`@custom-variant ${K3}\` cannot have both a selector and a body.`);
        if (b3.nodes.length === 0) {
          if (!R3) throw new Error(`\`@custom-variant ${K3}\` has no selector or body.`);
          let j3 = u(R3.slice(1, -1), ",");
          if (j3.length === 0 || j3.some((u2) => u2.trim() === "")) throw new Error(`\`@custom-variant ${K3} (${j3.join(",")})\` selector is invalid.`);
          let n = [], a = [];
          for (let u2 of j3) u2 = u2.trim(), u2[0] === "@" ? n.push(u2) : a.push(u2);
          p2.push((u2) => {
            u2.variants.static(K3, (k3) => {
              let w3 = [];
              a.length > 0 && w3.push(me(a.join(", "), k3.nodes));
              for (let $3 of n) w3.push(ee2($3, k3.nodes));
              k3.nodes = w3;
            }, { compounds: ne3([...a, ...n]) });
          });
          return;
        } else {
          p2.push((j3) => {
            j3.variants.fromAst(K3, b3.nodes);
          });
          return;
        }
      }
      if (b3.name === "@media") {
        let K3 = u(b3.params, " "), R3 = [];
        for (let j3 of K3) if (j3.startsWith("source(")) {
          let n = j3.slice(7, -1);
          w2(b3.nodes, (a, { replaceWith: u2 }) => {
            if (a.kind === "at-rule" && a.name === "@tailwind" && a.params === "utilities") return a.params += ` source(${n})`, u2([We({ sourceBase: N3.base }, [a])]), 2;
          });
        } else if (j3.startsWith("theme(")) {
          let n = j3.slice(6, -1), a = n.includes("reference");
          w2(b3.nodes, (u2) => {
            if (u2.kind !== "at-rule") {
              if (a) throw new Error('Files imported with `@import "…" theme(reference)` must only contain `@theme` blocks.\nUse `@reference "…";` instead.');
              return 0;
            }
            if (u2.name === "@theme") return u2.params += " " + n, 1;
          });
        } else if (j3.startsWith("prefix(")) {
          let n = j3.slice(7, -1);
          w2(b3.nodes, (a) => {
            if (a.kind === "at-rule" && a.name === "@theme") return a.params += ` prefix(${n})`, 1;
          });
        } else j3 === "important" ? f2 = true : j3 === "reference" ? b3.nodes = [We({ reference: true }, b3.nodes)] : R3.push(j3);
        R3.length > 0 ? b3.params = R3.join(" ") : K3.length > 0 && T3(b3.nodes);
      }
      if (b3.name === "@theme") {
        let [K3, R3] = Mr(b3.params);
        if (N3.reference && (K3 |= 2), R3) {
          if (!Ur.test(R3)) throw new Error(`The prefix "${R3}" is invalid. Prefixes must be lowercase ASCII letters (a-z) only.`);
          s2.prefix = R3;
        }
        return w2(b3.nodes, (j3) => {
          if (j3.kind === "at-rule" && j3.name === "@keyframes") return s2.addKeyframes(j3), 1;
          if (j3.kind === "comment") return;
          if (j3.kind === "declaration" && j3.property.startsWith("--")) {
            s2.add($2(j3.property), j3.value ?? "", K3);
            return;
          }
          let n = Fe([V2(b3.name, b3.params, [j3])]).split(`
`).map((a, u2, k3) => `${u2 === 0 || u2 >= k3.length - 2 ? " " : ">"} ${a}`).join(`
`);
          throw new Error(`\`@theme\` blocks must only contain custom properties or \`@keyframes\`.

${n}`);
        }), c ? T3([]) : (c = me(":root, :host", []), T3([c])), 1;
      }
    }
  });
  let y3 = pt(s2);
  f2 && (y3.important = f2), l3 |= await qt({ designSystem: y3, base: t, ast: r, loadModule: i, globs: m });
  for (let b3 of p2) b3(y3);
  for (let b3 of g2) b3(y3);
  if (c) {
    let b3 = [];
    for (let [T3, N3] of y3.theme.entries()) N3.options & 2 || b3.push(te2(W2(T3), N3.value));
    let A3 = y3.theme.getKeyframes();
    for (let T3 of A3) r.push(We({ theme: true }, [De([T3])]));
    c.nodes = [We({ theme: true }, b3)];
  }
  if (d2) {
    let b3 = d2;
    b3.kind = "context", b3.context = {};
  }
  if (h2.length > 0) {
    for (let b3 of h2) {
      let A3 = me("&", b3.nodes), T3 = b3.params, N3 = y3.parseVariant(T3);
      if (N3 === null) throw new Error(`Cannot use \`@variant\` with unknown variant: ${T3}`);
      if (se2(A3, N3, y3.variants) === null) throw new Error(`Cannot use \`@variant\` with variant: ${T3}`);
      Object.assign(b3, A3);
    }
    l3 |= 32;
  }
  return l3 |= ae2(r, y3), l3 |= me2(r, y3), w2(r, (b3, { replaceWith: A3 }) => {
    if (b3.kind === "at-rule") return b3.name === "@utility" && A3([]), 1;
  }), { designSystem: y3, ast: r, globs: m, root: v2, utilitiesNode: d2, features: l3 };
}
async function Lr(r, t = {}) {
  let { designSystem: i, ast: e, globs: l3, root: f2, utilitiesNode: s2, features: p2 } = await Jt(r, t);
  e.unshift(re2(`! tailwindcss v${Ge} | MIT License | https://tailwindcss.com `));
  function g2(m) {
    i.invalidCandidates.add(m);
  }
  let c = /* @__PURE__ */ new Set(), d2 = null, h2 = 0;
  return { globs: l3, root: f2, features: p2, build(m) {
    if (p2 === 0) return r;
    if (!s2) return d2 ?? (d2 = Pe(e, i)), d2;
    let v2 = false, y3 = c.size;
    for (let A3 of m) i.invalidCandidates.has(A3) || (A3[0] === "-" && A3[1] === "-" ? i.theme.markUsedVariable(A3) : c.add(A3), v2 || (v2 = c.size !== y3));
    if (!v2) return d2 ?? (d2 = Pe(e, i)), d2;
    let b3 = X3(c, i, { onInvalidCandidate: g2 }).astNodes;
    return h2 === b3.length ? (d2 ?? (d2 = Pe(e, i)), d2) : (h2 = b3.length, s2.nodes = b3, d2 = Pe(e, i), d2);
  } };
}
async function No(r, t = {}) {
  let i = Be(r), e = await Lr(i, t), l3 = i, f2 = r;
  return { ...e, build(s2) {
    let p2 = e.build(s2);
    return p2 === l3 || (f2 = Fe(p2), l3 = p2), f2;
  } };
}
async function So(r, t = {}) {
  return (await Jt(Be(r), t)).designSystem;
}
function Br() {
  throw new Error("It looks like you're trying to use `tailwindcss` directly as a PostCSS plugin. The PostCSS plugin has moved to a separate package, so to continue using Tailwind CSS with PostCSS you'll need to install `@tailwindcss/postcss` and update your PostCSS configuration.");
}
export {
  de3 as Features,
  So as __unstable__loadDesignSystem,
  No as compile,
  Lr as compileAst,
  Br as default
};
//# sourceMappingURL=tailwindcss.js.map
